[
    {
        "id": "a242b4e6.dbec38",
        "type": "tab",
        "label": "Configuration",
        "disabled": false,
        "info": ""
    },
    {
        "id": "759e4c62c23869e9",
        "type": "tab",
        "label": "Control Center",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "00d755fbe9816e1e",
        "type": "tab",
        "label": "Sensors",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "1f775d9619536468",
        "type": "tab",
        "label": "Example",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "f32c2ab81567e761",
        "type": "tab",
        "label": "dashboard style",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "fa600c20.8a9c9",
        "type": "mqtt-broker",
        "name": "",
        "broker": "192.168.0.10",
        "port": "1883",
        "clientid": "Node-RED",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": 4,
        "keepalive": "60",
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "willTopic": "",
        "willQos": "0",
        "willPayload": ""
    },
    {
        "id": "25e0d20d.12eefe",
        "type": "ui_group",
        "name": "Monitoring - Temperature",
        "tab": "b7fce62d.102898",
        "order": 2,
        "disp": true,
        "width": "12",
        "collapse": true,
        "className": ""
    },
    {
        "id": "6eedff70.3d4eb",
        "type": "ui_base",
        "theme": {
            "name": "theme-custom",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0080c0",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#0080c0",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "customTheme": {
                "name": "Bellgardt",
                "default": "#4B7930",
                "baseColor": "#0080c0",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "reset": false
            },
            "themeState": {
                "base-color": {
                    "default": "#4B7930",
                    "value": "#0080c0",
                    "edited": true
                },
                "page-titlebar-backgroundColor": {
                    "value": "#0080c0",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#fafafa",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#0daeff",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#ffffff",
                    "edited": true
                },
                "widget-textColor": {
                    "value": "#111111",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#0080c0",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "true",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 1,
                "py": 1
            }
        }
    },
    {
        "id": "d71b3abf.e87f18",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 1,
        "width": 1,
        "height": 1
    },
    {
        "id": "269d9bd9.87bff4",
        "type": "ui_group",
        "name": "Camera",
        "tab": "",
        "order": 1,
        "disp": true,
        "width": "8",
        "collapse": true,
        "className": ""
    },
    {
        "id": "c0ed767.7374988",
        "type": "ui_group",
        "name": "Monitoring - Humidity",
        "tab": "b7fce62d.102898",
        "order": 3,
        "disp": true,
        "width": "12",
        "collapse": true,
        "className": ""
    },
    {
        "id": "e928c4b3.04eb18",
        "type": "ui_group",
        "name": "Monitoring - Air pressure",
        "tab": "b7fce62d.102898",
        "order": 4,
        "disp": true,
        "width": "12",
        "collapse": true,
        "className": ""
    },
    {
        "id": "e67f6a50.c23a18",
        "type": "ui_group",
        "name": "Monitoring - Air Quality",
        "tab": "b7fce62d.102898",
        "order": 5,
        "disp": true,
        "width": "12",
        "collapse": true,
        "className": ""
    },
    {
        "id": "c2045506.d32c58",
        "type": "ui_group",
        "name": "Group 1",
        "tab": "",
        "order": 1,
        "disp": true,
        "width": 6
    },
    {
        "id": "bfb0ae98.80af7",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "c2045506.d32c58",
        "order": 1,
        "width": 1,
        "height": 1
    },
    {
        "id": "6e42fd2c.304104",
        "type": "ui_link",
        "name": "ft Cloud",
        "link": "https://www.fischertechnik-cloud.com",
        "icon": "open_in_browser",
        "target": "newtab",
        "order": 4
    },
    {
        "id": "b214200a.fb54c",
        "type": "ui_group",
        "name": "Monitoring - Brightness",
        "tab": "b7fce62d.102898",
        "order": 1,
        "disp": true,
        "width": "12",
        "collapse": true,
        "className": ""
    },
    {
        "id": "b7fce62d.102898",
        "type": "ui_tab",
        "name": "Sensors",
        "icon": "fa-thermometer-half ",
        "order": 2,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "c1e37c6d.f404b",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 10,
        "width": 4,
        "height": 1
    },
    {
        "id": "5e3ad3d7.7c6a3c",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 2,
        "width": 1,
        "height": 1
    },
    {
        "id": "c88e8cae.e64b4",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 4,
        "width": 1,
        "height": 1
    },
    {
        "id": "6cc53ff5.75928",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 2,
        "width": 1,
        "height": 1
    },
    {
        "id": "fded58b3.4f8648",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "",
        "order": 4,
        "width": 1,
        "height": 1
    },
    {
        "id": "a76891a4c2802243",
        "type": "ui_tab",
        "name": "Control Center",
        "icon": "fa-industry",
        "order": 1,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "348aa8362b207fd6",
        "type": "ui_group",
        "name": "Active unit",
        "tab": "a76891a4c2802243",
        "order": 3,
        "disp": true,
        "width": "12",
        "collapse": true,
        "className": ""
    },
    {
        "id": "2180d8c1400721ba",
        "type": "ui_group",
        "name": "Stock information",
        "tab": "a76891a4c2802243",
        "order": 5,
        "disp": true,
        "width": "12",
        "collapse": true,
        "className": ""
    },
    {
        "id": "0851065f4113e051",
        "type": "ui_group",
        "name": "Stock view",
        "tab": "a76891a4c2802243",
        "order": 7,
        "disp": true,
        "width": "12",
        "collapse": true,
        "className": ""
    },
    {
        "id": "a298d985c01a7070",
        "type": "ui_spacer",
        "z": "759e4c62c23869e9",
        "name": "spacer",
        "group": "",
        "order": 2,
        "width": 8,
        "height": 1
    },
    {
        "id": "1abd71b9d16dad4d",
        "type": "ui_group",
        "name": "Button",
        "tab": "411d58a9e633f998",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "411d58a9e633f998",
        "type": "ui_tab",
        "name": "example",
        "icon": "dashboard",
        "order": 5,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "d36d0426f409f58d",
        "type": "ui_group",
        "name": "Slider",
        "tab": "411d58a9e633f998",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "8ec1e854ed31c61e",
        "type": "ui_group",
        "name": "Cam",
        "tab": "a76891a4c2802243",
        "order": 7,
        "disp": true,
        "width": 12,
        "collapse": true,
        "className": ""
    },
    {
        "id": "004a193427ad611c",
        "type": "ui_group",
        "name": "Order",
        "tab": "a76891a4c2802243",
        "order": 8,
        "disp": true,
        "width": 12,
        "collapse": true,
        "className": ""
    },
    {
        "id": "0f7b68a72aef4f12",
        "type": "ui_group",
        "name": "Acknowledge",
        "tab": "a76891a4c2802243",
        "order": 9,
        "disp": true,
        "width": 12,
        "collapse": true,
        "className": ""
    },
    {
        "id": "6e8e604f8cdc1fbd",
        "type": "ui_group",
        "name": "NFC",
        "tab": "a76891a4c2802243",
        "order": 10,
        "disp": true,
        "width": 12,
        "collapse": true,
        "className": ""
    },
    {
        "id": "de7816e80a9f9dec",
        "type": "ui_group",
        "name": "Sensors",
        "tab": "a76891a4c2802243",
        "order": 10,
        "disp": true,
        "width": 12,
        "collapse": true,
        "className": ""
    },
    {
        "id": "f5a12cd0ea42cf01",
        "type": "ui_group",
        "name": "Production Process",
        "tab": "a76891a4c2802243",
        "order": 9,
        "disp": true,
        "width": "12",
        "collapse": true,
        "className": ""
    },
    {
        "id": "495d8d19ae9c9bda",
        "type": "ui_spacer",
        "z": "759e4c62c23869e9",
        "name": "spacer",
        "group": "348aa8362b207fd6",
        "order": 14,
        "width": 2,
        "height": 1
    },
    {
        "id": "2d201f24a8f9af68",
        "type": "ui_spacer",
        "z": "759e4c62c23869e9",
        "name": "spacer",
        "group": "348aa8362b207fd6",
        "order": 15,
        "width": 2,
        "height": 1
    },
    {
        "id": "34ded8bfcfcb8770",
        "type": "ui_spacer",
        "z": "759e4c62c23869e9",
        "name": "spacer",
        "group": "348aa8362b207fd6",
        "order": 16,
        "width": 2,
        "height": 1
    },
    {
        "id": "1a96b2c9b48f7191",
        "type": "ui_spacer",
        "z": "759e4c62c23869e9",
        "name": "spacer",
        "group": "0851065f4113e051",
        "order": 1,
        "width": 1,
        "height": 1
    },
    {
        "id": "7f8ef2ee0ffeb8b5",
        "type": "ui_spacer",
        "z": "759e4c62c23869e9",
        "name": "spacer",
        "group": "0851065f4113e051",
        "order": 5,
        "width": 5,
        "height": 1
    },
    {
        "id": "df50233757a0e4b7",
        "type": "ui_spacer",
        "z": "759e4c62c23869e9",
        "name": "spacer",
        "group": "0851065f4113e051",
        "order": 10,
        "width": 5,
        "height": 1
    },
    {
        "id": "8b7fdb8c66c17e67",
        "type": "ui_spacer",
        "z": "759e4c62c23869e9",
        "name": "spacer",
        "group": "0851065f4113e051",
        "order": 11,
        "width": 5,
        "height": 1
    },
    {
        "id": "d60add6656926b72",
        "type": "ui_spacer",
        "z": "759e4c62c23869e9",
        "name": "spacer",
        "group": "0851065f4113e051",
        "order": 16,
        "width": 5,
        "height": 1
    },
    {
        "id": "98d35c836d4770f4",
        "type": "ui_spacer",
        "z": "759e4c62c23869e9",
        "name": "spacer",
        "group": "0851065f4113e051",
        "order": 17,
        "width": 5,
        "height": 1
    },
    {
        "id": "a0aa9d6daec8f06c",
        "type": "ui_spacer",
        "z": "759e4c62c23869e9",
        "name": "spacer",
        "group": "0851065f4113e051",
        "order": 22,
        "width": 5,
        "height": 1
    },
    {
        "id": "15a1a18c2d05ea67",
        "type": "ui_spacer",
        "z": "759e4c62c23869e9",
        "name": "spacer",
        "group": "0851065f4113e051",
        "order": 23,
        "width": 5,
        "height": 1
    },
    {
        "id": "8fc4596599e45d89",
        "type": "ui_spacer",
        "z": "759e4c62c23869e9",
        "name": "spacer",
        "group": "8ec1e854ed31c61e",
        "order": 3,
        "width": 3,
        "height": 1
    },
    {
        "id": "17b86f53f3989858",
        "type": "ui_spacer",
        "z": "759e4c62c23869e9",
        "name": "spacer",
        "group": "8ec1e854ed31c61e",
        "order": 6,
        "width": 2,
        "height": 1
    },
    {
        "id": "5e0e46c2b1915363",
        "type": "ui_spacer",
        "z": "759e4c62c23869e9",
        "name": "spacer",
        "group": "8ec1e854ed31c61e",
        "order": 8,
        "width": 2,
        "height": 1
    },
    {
        "id": "a1d36ada417a8fe2",
        "type": "ui_spacer",
        "z": "759e4c62c23869e9",
        "name": "spacer",
        "group": "8ec1e854ed31c61e",
        "order": 9,
        "width": 2,
        "height": 1
    },
    {
        "id": "51a1c8fc46327f38",
        "type": "ui_spacer",
        "z": "759e4c62c23869e9",
        "name": "spacer",
        "group": "8ec1e854ed31c61e",
        "order": 11,
        "width": 2,
        "height": 1
    },
    {
        "id": "5f3dc9458c354597",
        "type": "ui_spacer",
        "z": "759e4c62c23869e9",
        "name": "spacer",
        "group": "8ec1e854ed31c61e",
        "order": 14,
        "width": 1,
        "height": 1
    },
    {
        "id": "430d24d316531076",
        "type": "ui_spacer",
        "z": "759e4c62c23869e9",
        "name": "spacer",
        "group": "8ec1e854ed31c61e",
        "order": 17,
        "width": 2,
        "height": 1
    },
    {
        "id": "d37885f5f8822b64",
        "type": "ui_spacer",
        "z": "759e4c62c23869e9",
        "name": "spacer",
        "group": "8ec1e854ed31c61e",
        "order": 19,
        "width": 2,
        "height": 1
    },
    {
        "id": "aefc05a8c4bf7fc5",
        "type": "ui_spacer",
        "z": "759e4c62c23869e9",
        "name": "spacer",
        "group": "8ec1e854ed31c61e",
        "order": 20,
        "width": 2,
        "height": 1
    },
    {
        "id": "f833915dc545b7da",
        "type": "ui_spacer",
        "z": "759e4c62c23869e9",
        "name": "spacer",
        "group": "8ec1e854ed31c61e",
        "order": 22,
        "width": 2,
        "height": 1
    },
    {
        "id": "d1eccfc38e3609ba",
        "type": "ui_spacer",
        "z": "759e4c62c23869e9",
        "name": "spacer",
        "group": "8ec1e854ed31c61e",
        "order": 24,
        "width": 3,
        "height": 1
    },
    {
        "id": "2dc8821075f0ecae",
        "type": "ui_spacer",
        "z": "759e4c62c23869e9",
        "name": "spacer",
        "group": "0f7b68a72aef4f12",
        "order": 1,
        "width": 4,
        "height": 1
    },
    {
        "id": "ab127598b42aec65",
        "type": "ui_spacer",
        "z": "759e4c62c23869e9",
        "name": "spacer",
        "group": "0f7b68a72aef4f12",
        "order": 3,
        "width": 4,
        "height": 1
    },
    {
        "id": "fa7f0bae63431628",
        "type": "ui_spacer",
        "z": "759e4c62c23869e9",
        "name": "spacer",
        "group": "f5a12cd0ea42cf01",
        "order": 1,
        "width": 3,
        "height": 1
    },
    {
        "id": "d8b529a23ad8f6c0",
        "type": "ui_spacer",
        "z": "759e4c62c23869e9",
        "name": "spacer",
        "group": "f5a12cd0ea42cf01",
        "order": 3,
        "width": 2,
        "height": 1
    },
    {
        "id": "153e89b3b87252f1",
        "type": "ui_spacer",
        "z": "759e4c62c23869e9",
        "name": "spacer",
        "group": "f5a12cd0ea42cf01",
        "order": 4,
        "width": 3,
        "height": 1
    },
    {
        "id": "7922efe395fbbd4c",
        "type": "ui_spacer",
        "z": "759e4c62c23869e9",
        "name": "spacer",
        "group": "f5a12cd0ea42cf01",
        "order": 6,
        "width": 2,
        "height": 1
    },
    {
        "id": "85ff8631eb164336",
        "type": "ui_spacer",
        "z": "759e4c62c23869e9",
        "name": "spacer",
        "group": "f5a12cd0ea42cf01",
        "order": 7,
        "width": 3,
        "height": 1
    },
    {
        "id": "d19301bf27ea3a5c",
        "type": "ui_spacer",
        "z": "759e4c62c23869e9",
        "name": "spacer",
        "group": "f5a12cd0ea42cf01",
        "order": 9,
        "width": 2,
        "height": 1
    },
    {
        "id": "3978c8fcefe122e2",
        "type": "ui_spacer",
        "z": "759e4c62c23869e9",
        "name": "spacer",
        "group": "f5a12cd0ea42cf01",
        "order": 10,
        "width": 3,
        "height": 1
    },
    {
        "id": "e89447138fe25f88",
        "type": "ui_spacer",
        "z": "759e4c62c23869e9",
        "name": "spacer",
        "group": "f5a12cd0ea42cf01",
        "order": 12,
        "width": 2,
        "height": 1
    },
    {
        "id": "3a2a6dcdf1c086cd",
        "type": "ui_spacer",
        "z": "759e4c62c23869e9",
        "name": "spacer",
        "group": "f5a12cd0ea42cf01",
        "order": 13,
        "width": 3,
        "height": 1
    },
    {
        "id": "8c4d24a9b6cd6fb8",
        "type": "ui_spacer",
        "z": "759e4c62c23869e9",
        "name": "spacer",
        "group": "f5a12cd0ea42cf01",
        "order": 15,
        "width": 2,
        "height": 1
    },
    {
        "id": "5f66f828defdf390",
        "type": "ui_spacer",
        "z": "759e4c62c23869e9",
        "name": "spacer",
        "group": "f5a12cd0ea42cf01",
        "order": 16,
        "width": 3,
        "height": 1
    },
    {
        "id": "a45d0df3481fec9a",
        "type": "ui_spacer",
        "z": "759e4c62c23869e9",
        "name": "spacer",
        "group": "f5a12cd0ea42cf01",
        "order": 18,
        "width": 2,
        "height": 1
    },
    {
        "id": "7833fb4f0a16a28d",
        "type": "ui_spacer",
        "z": "759e4c62c23869e9",
        "name": "spacer",
        "group": "f5a12cd0ea42cf01",
        "order": 19,
        "width": 3,
        "height": 1
    },
    {
        "id": "6b277011346f8f77",
        "type": "ui_spacer",
        "z": "759e4c62c23869e9",
        "name": "spacer",
        "group": "f5a12cd0ea42cf01",
        "order": 21,
        "width": 2,
        "height": 1
    },
    {
        "id": "4f94258d0eadc4b4",
        "type": "ui_spacer",
        "z": "759e4c62c23869e9",
        "name": "spacer",
        "group": "f5a12cd0ea42cf01",
        "order": 22,
        "width": 3,
        "height": 1
    },
    {
        "id": "452fd891026e8aad",
        "type": "ui_spacer",
        "z": "759e4c62c23869e9",
        "name": "spacer",
        "group": "f5a12cd0ea42cf01",
        "order": 24,
        "width": 2,
        "height": 1
    },
    {
        "id": "1a0dd7844583ca12",
        "type": "ui_spacer",
        "z": "759e4c62c23869e9",
        "name": "spacer",
        "group": "6e8e604f8cdc1fbd",
        "order": 6,
        "width": 6,
        "height": 1
    },
    {
        "id": "3f998c7a.4adc74",
        "type": "mqtt out",
        "z": "a242b4e6.dbec38",
        "name": "",
        "topic": "c/ldr",
        "qos": "0",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "fa600c20.8a9c9",
        "x": 690,
        "y": 260,
        "wires": []
    },
    {
        "id": "f5e22979.6275a8",
        "type": "inject",
        "z": "a242b4e6.dbec38",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"period\":3}",
        "payloadType": "json",
        "x": 100,
        "y": 260,
        "wires": [
            [
                "12f2398c.32eac6"
            ]
        ]
    },
    {
        "id": "22b295d2.6ff90a",
        "type": "debug",
        "z": "a242b4e6.dbec38",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 710,
        "y": 220,
        "wires": []
    },
    {
        "id": "12f2398c.32eac6",
        "type": "function",
        "z": "a242b4e6.dbec38",
        "name": "+ts UTC ISO8301",
        "func": "var ts = new Date().toISOString();\nmsg.payload[\"ts\"] = ts;\nmsg.payload = JSON.stringify(msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 490,
        "y": 260,
        "wires": [
            [
                "3f998c7a.4adc74",
                "22b295d2.6ff90a"
            ]
        ]
    },
    {
        "id": "f89cd791.c02af8",
        "type": "comment",
        "z": "a242b4e6.dbec38",
        "name": "https://github.com/fischertechnik/txt_training_factory/blob/master/TxtSmartFactoryLib/doc/MqttInterface.md",
        "info": "",
        "x": 380,
        "y": 40,
        "wires": []
    },
    {
        "id": "230610ce.7a1c7",
        "type": "mqtt out",
        "z": "a242b4e6.dbec38",
        "name": "",
        "topic": "c/bme680",
        "qos": "0",
        "retain": "",
        "broker": "fa600c20.8a9c9",
        "x": 700,
        "y": 160,
        "wires": []
    },
    {
        "id": "eff19b54.e92248",
        "type": "inject",
        "z": "a242b4e6.dbec38",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"period\":3}",
        "payloadType": "json",
        "x": 100,
        "y": 160,
        "wires": [
            [
                "e12a63d7.f1f0b"
            ]
        ]
    },
    {
        "id": "e5327053.a608a",
        "type": "debug",
        "z": "a242b4e6.dbec38",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 710,
        "y": 120,
        "wires": []
    },
    {
        "id": "e12a63d7.f1f0b",
        "type": "function",
        "z": "a242b4e6.dbec38",
        "name": "+ts UTC ISO8301",
        "func": "// Generiere einen Zeitstempel im ISO-8601-Format\nvar ts = new Date().toISOString();\n\n// Zeitstempel zum Payload-Objekt der Nachricht hinzufügen\nmsg.payload[\"ts\"] = ts;\n\n// Konvertiere das Payload-Objekt in einen JSON-String\nmsg.payload = JSON.stringify(msg.payload);\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 160,
        "wires": [
            [
                "230610ce.7a1c7",
                "e5327053.a608a"
            ]
        ]
    },
    {
        "id": "516084f4.cd307c",
        "type": "mqtt out",
        "z": "a242b4e6.dbec38",
        "name": "",
        "topic": "c/cam",
        "qos": "0",
        "retain": "",
        "broker": "fa600c20.8a9c9",
        "x": 690,
        "y": 360,
        "wires": []
    },
    {
        "id": "24c9dcb4.81e294",
        "type": "inject",
        "z": "a242b4e6.dbec38",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"on\":true,\"fps\":2}",
        "payloadType": "json",
        "x": 120,
        "y": 360,
        "wires": [
            [
                "edbc2440.62c248"
            ]
        ]
    },
    {
        "id": "e95da13a.0029a",
        "type": "debug",
        "z": "a242b4e6.dbec38",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 710,
        "y": 320,
        "wires": []
    },
    {
        "id": "edbc2440.62c248",
        "type": "function",
        "z": "a242b4e6.dbec38",
        "name": "+ts UTC ISO8301",
        "func": "var ts = new Date().toISOString();\nmsg.payload[\"ts\"] = ts;\nmsg.payload = JSON.stringify(msg.payload);\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 360,
        "wires": [
            [
                "516084f4.cd307c",
                "e95da13a.0029a"
            ]
        ]
    },
    {
        "id": "1f55f69f31c7d0d6",
        "type": "comment",
        "z": "a242b4e6.dbec38",
        "name": "Brightness Sensor",
        "info": "",
        "x": 110,
        "y": 220,
        "wires": []
    },
    {
        "id": "317b0cf2fd780922",
        "type": "comment",
        "z": "a242b4e6.dbec38",
        "name": "start cam",
        "info": "",
        "x": 80,
        "y": 320,
        "wires": []
    },
    {
        "id": "d42b26a0e31655b0",
        "type": "comment",
        "z": "a242b4e6.dbec38",
        "name": "Config Rate Environment Sensor",
        "info": "",
        "x": 150,
        "y": 120,
        "wires": []
    },
    {
        "id": "7fc790b54e8a28ef",
        "type": "mqtt in",
        "z": "759e4c62c23869e9",
        "name": "",
        "topic": "f/i/state/mpo",
        "qos": "0",
        "datatype": "json",
        "broker": "fa600c20.8a9c9",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 310,
        "y": 3120,
        "wires": [
            [
                "7ef5d0aadc2783aa"
            ]
        ]
    },
    {
        "id": "f0b327d0890fad61",
        "type": "mqtt in",
        "z": "759e4c62c23869e9",
        "name": "",
        "topic": "f/i/stock",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "fa600c20.8a9c9",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 310,
        "y": 1000,
        "wires": [
            [
                "42421c48f9b5f147"
            ]
        ]
    },
    {
        "id": "a177cd02111bdea2",
        "type": "comment",
        "z": "759e4c62c23869e9",
        "name": "Active unit",
        "info": "",
        "x": 80,
        "y": 3040,
        "wires": []
    },
    {
        "id": "3d60e8f510f49af6",
        "type": "inject",
        "z": "759e4c62c23869e9",
        "name": "inject: 1",
        "props": [
            {
                "p": "payload.success",
                "v": "true",
                "vt": "str"
            },
            {
                "p": "payload.response",
                "v": "{\"active\":1,\"code\":1,\"description\":\"\",\"station\":\"mpo\",\"ts\":\"2000-01-01T01:30:07.638Z\"}",
                "vt": "json"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 290,
        "y": 3080,
        "wires": [
            [
                "aa52de4b4dd8f452"
            ]
        ]
    },
    {
        "id": "5f623b35fa9bfc4f",
        "type": "ui_text",
        "z": "759e4c62c23869e9",
        "group": "348aa8362b207fd6",
        "order": 10,
        "width": 2,
        "height": 1,
        "name": "",
        "label": "MPO:",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "Courier,monospace",
        "fontSize": 16,
        "color": "#000000",
        "x": 1090,
        "y": 3120,
        "wires": []
    },
    {
        "id": "64aeb9ea57b7bf35",
        "type": "mqtt in",
        "z": "759e4c62c23869e9",
        "name": "",
        "topic": "f/i/state/hbw",
        "qos": "0",
        "datatype": "json",
        "broker": "fa600c20.8a9c9",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 310,
        "y": 3240,
        "wires": [
            [
                "bb68627726796866"
            ]
        ]
    },
    {
        "id": "12d2a92f7cea92ee",
        "type": "mqtt in",
        "z": "759e4c62c23869e9",
        "name": "",
        "topic": "f/i/state/vgr",
        "qos": "0",
        "datatype": "json",
        "broker": "fa600c20.8a9c9",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 300,
        "y": 3380,
        "wires": [
            [
                "dd211f7707a84eba"
            ]
        ]
    },
    {
        "id": "73244cc47e4e96df",
        "type": "ui_text",
        "z": "759e4c62c23869e9",
        "group": "348aa8362b207fd6",
        "order": 1,
        "width": 2,
        "height": 1,
        "name": "",
        "label": "VGR: ",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1090,
        "y": 3380,
        "wires": []
    },
    {
        "id": "cf53c99ccb4a3e1d",
        "type": "mqtt in",
        "z": "759e4c62c23869e9",
        "name": "",
        "topic": "f/i/state/sld",
        "qos": "0",
        "datatype": "json",
        "broker": "fa600c20.8a9c9",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 300,
        "y": 3460,
        "wires": [
            [
                "78a6d305e2a526b5"
            ]
        ]
    },
    {
        "id": "648c8392147c29a9",
        "type": "ui_text",
        "z": "759e4c62c23869e9",
        "group": "348aa8362b207fd6",
        "order": 7,
        "width": 2,
        "height": 1,
        "name": "",
        "label": "SLD: ",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1090,
        "y": 3460,
        "wires": []
    },
    {
        "id": "3d099c0e67237172",
        "type": "comment",
        "z": "759e4c62c23869e9",
        "name": "Stock information",
        "info": "",
        "x": 100,
        "y": 620,
        "wires": []
    },
    {
        "id": "9f06307ad5f493a1",
        "type": "inject",
        "z": "759e4c62c23869e9",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "[{\"location\":\"A1\",\"workpiece\":{\"id\":\"045da192186581\",\"state\":\"RAW\",\"type\":\"WHITE\"}},{\"location\":\"A2\",\"workpiece\":{\"id\":\"045c9692186581\",\"state\":\"RAW\",\"type\":\"WHITE\"}},{\"location\":\"A3\",\"workpiece\":null},{\"location\":\"B1\",\"workpiece\":{\"id\":\"04ee5492186580\",\"state\":\"RAW\",\"type\":\"RED\"}},{\"location\":\"B2\",\"workpiece\":{\"id\":\"040aa692186580\",\"state\":\"RAW\",\"type\":\"BLUE\"}},{\"location\":\"B3\",\"workpiece\":null},{\"location\":\"C1\",\"workpiece\":{\"id\":\"045da892186581\",\"state\":\"RAW\",\"type\":\"WHITE\"}},{\"location\":\"C2\",\"workpiece\":{\"id\":\"041ca792186581\",\"state\":\"RAW\",\"type\":\"WHITE\"}},{\"location\":\"C3\",\"workpiece\":{\"id\":\"0411a192186580\",\"state\":\"RAW\",\"type\":\"RED\"}}]",
        "payloadType": "json",
        "x": 310,
        "y": 620,
        "wires": [
            [
                "561d46ba50a0670b",
                "98a5e4bfd52aff91",
                "da2730750060d218",
                "f2c8495d0bd1d815",
                "fbafb19392fc590f",
                "145172f7ac59bfda",
                "c495ef7d746f7051",
                "b8c65a06bb4559c0",
                "ed25f411733e0c5e",
                "7f7807ed6c14570d"
            ]
        ]
    },
    {
        "id": "561d46ba50a0670b",
        "type": "debug",
        "z": "759e4c62c23869e9",
        "name": "debug 7",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 900,
        "y": 620,
        "wires": []
    },
    {
        "id": "98a5e4bfd52aff91",
        "type": "function",
        "z": "759e4c62c23869e9",
        "name": "A1",
        "func": "// Eingehende Nachricht verarbeiten\nvar input = msg.payload;\n\n// Funktion zum Extrahieren der Daten für A1\nfunction extractDataForA1(data) {\n    var result = null;\n\n    // Durchlaufen der Elemente im JSON-Array\n    data.forEach(function (item) {\n        if (item.location === \"A1\" && item.workpiece !== null) {\n            result = {\n                \"id\": item.workpiece.id,\n                \"state\": item.workpiece.state,\n                \"type\": item.workpiece.type\n            };\n        }\n    });\n\n    return result;\n}\n\n// Ergebnis speichern\nmsg.payload = extractDataForA1(input);\n\n// Nachricht weiterleiten\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 680,
        "wires": [
            [
                "321f6168b0799817"
            ]
        ]
    },
    {
        "id": "fbafb19392fc590f",
        "type": "function",
        "z": "759e4c62c23869e9",
        "name": "B1",
        "func": "// Eingehende Nachricht verarbeiten\nvar input = msg.payload;\n\n// Funktion zum Extrahieren der Daten für A1\nfunction extractDataForA1(data) {\n    var result = null;\n\n    // Durchlaufen der Elemente im JSON-Array\n    data.forEach(function (item) {\n        if (item.location === \"B1\" && item.workpiece !== null) {\n            result = {\n                \"id\": item.workpiece.id,\n                \"state\": item.workpiece.state,\n                \"type\": item.workpiece.type\n            };\n        }\n    });\n\n    return result;\n}\n\n// Ergebnis speichern\nmsg.payload = extractDataForA1(input);\n\n// Nachricht weiterleiten\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 800,
        "wires": [
            [
                "b1bcb59ae2f25b3c"
            ]
        ]
    },
    {
        "id": "b1bcb59ae2f25b3c",
        "type": "ui_template",
        "z": "759e4c62c23869e9",
        "group": "2180d8c1400721ba",
        "name": "B1",
        "order": 4,
        "width": 4,
        "height": 3,
        "format": "<div layout=\"column\" layout-align=\"start start\" style=\"padding: 0 6px;\">\n    <div layout=\"row\" layout-align=\"space-between center\">\n        <p>B1:</p>\n        <font\n            color=\"{{msg.payload.type === 'WHITE' ? 'white' : (msg.payload.type === 'BLUE' ? 'blue' : (msg.payload.type === 'RED' ? 'red' : 'transparent'))}}\">\n            <i class=\"fa fa-square\" aria-hidden=\"true\" style=\"background-color: grey; padding: 2px;\"></i>\n        </font>\n    </div>\n    <div layout=\"column\" layout-align=\"end start\">\n        <p style=\"text-align: left;\">id: {{msg.payload.id}}</p>\n        <p style=\"text-align: left;\">state: {{msg.payload.state}}</p>\n        <p style=\"text-align: left;\">type: {{msg.payload.type}}</p>\n    </div>\n</div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 890,
        "y": 800,
        "wires": [
            []
        ]
    },
    {
        "id": "da2730750060d218",
        "type": "function",
        "z": "759e4c62c23869e9",
        "name": "A2",
        "func": "// Eingehende Nachricht verarbeiten\nvar input = msg.payload;\n\n// Funktion zum Extrahieren der Daten für A1\nfunction extractDataForA1(data) {\n    var result = null;\n\n    // Durchlaufen der Elemente im JSON-Array\n    data.forEach(function (item) {\n        if (item.location === \"A2\" && item.workpiece !== null) {\n            result = {\n                \"id\": item.workpiece.id,\n                \"state\": item.workpiece.state,\n                \"type\": item.workpiece.type\n            };\n        }\n    });\n\n    return result;\n}\n\n// Ergebnis speichern\nmsg.payload = extractDataForA1(input);\n\n// Nachricht weiterleiten\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 720,
        "wires": [
            [
                "fc08054ca2447eaf"
            ]
        ]
    },
    {
        "id": "fc08054ca2447eaf",
        "type": "ui_template",
        "z": "759e4c62c23869e9",
        "group": "2180d8c1400721ba",
        "name": "A2",
        "order": 2,
        "width": 4,
        "height": 3,
        "format": "<div layout=\"column\" layout-align=\"start start\" style=\"padding: 0 6px;\">\n    <div layout=\"row\" layout-align=\"space-between center\">\n        <p>A2:</p>\n        <font\n            color=\"{{msg.payload.type === 'WHITE' ? 'white' : (msg.payload.type === 'BLUE' ? 'blue' : (msg.payload.type === 'RED' ? 'red' : 'transparent'))}}\">\n            <i class=\"fa fa-square\" aria-hidden=\"true\" style=\"background-color: grey; padding: 2px;\"></i>\n        </font>\n    </div>\n    <div layout=\"column\" layout-align=\"end start\">\n        <p style=\"text-align: left;\">id: {{msg.payload.id}}</p>\n        <p style=\"text-align: left;\">state: {{msg.payload.state}}</p>\n        <p style=\"text-align: left;\">type: {{msg.payload.type}}</p>\n    </div>\n</div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 890,
        "y": 720,
        "wires": [
            []
        ]
    },
    {
        "id": "f2c8495d0bd1d815",
        "type": "function",
        "z": "759e4c62c23869e9",
        "name": "A3",
        "func": "// Eingehende Nachricht verarbeiten\nvar input = msg.payload;\n\n// Funktion zum Extrahieren der Daten für A1\nfunction extractDataForA1(data) {\n    var result = null;\n\n    // Durchlaufen der Elemente im JSON-Array\n    data.forEach(function (item) {\n        if (item.location === \"A3\" && item.workpiece !== null) {\n            result = {\n                \"id\": item.workpiece.id,\n                \"state\": item.workpiece.state,\n                \"type\": item.workpiece.type\n            };\n        }\n    });\n\n    return result;\n}\n\n// Ergebnis speichern\nmsg.payload = extractDataForA1(input);\n\n// Nachricht weiterleiten\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 760,
        "wires": [
            [
                "db8aa07da3cd3d5c"
            ]
        ]
    },
    {
        "id": "db8aa07da3cd3d5c",
        "type": "ui_template",
        "z": "759e4c62c23869e9",
        "group": "2180d8c1400721ba",
        "name": "A3",
        "order": 3,
        "width": 4,
        "height": 3,
        "format": "<div layout=\"column\" layout-align=\"start start\" style=\"padding: 0 6px;\">\n    <div layout=\"row\" layout-align=\"space-between center\">\n        <p>A3:</p>\n        <font\n            color=\"{{msg.payload.type === 'WHITE' ? 'white' : (msg.payload.type === 'BLUE' ? 'blue' : (msg.payload.type === 'RED' ? 'red' : 'transparent'))}}\">\n            <i class=\"fa fa-square\" aria-hidden=\"true\" style=\"background-color: grey; padding: 2px;\"></i>\n        </font>\n    </div>\n    <div layout=\"column\" layout-align=\"end start\">\n        <p style=\"text-align: left;\">id: {{msg.payload.id}}</p>\n        <p style=\"text-align: left;\">state: {{msg.payload.state}}</p>\n        <p style=\"text-align: left;\">type: {{msg.payload.type}}</p>\n    </div>\n</div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 890,
        "y": 760,
        "wires": [
            []
        ]
    },
    {
        "id": "145172f7ac59bfda",
        "type": "function",
        "z": "759e4c62c23869e9",
        "name": "B2",
        "func": "// Eingehende Nachricht verarbeiten\nvar input = msg.payload;\n\n// Funktion zum Extrahieren der Daten für A1\nfunction extractDataForA1(data) {\n    var result = null;\n\n    // Durchlaufen der Elemente im JSON-Array\n    data.forEach(function (item) {\n        if (item.location === \"B2\" && item.workpiece !== null) {\n            result = {\n                \"id\": item.workpiece.id,\n                \"state\": item.workpiece.state,\n                \"type\": item.workpiece.type\n            };\n        }\n    });\n\n    return result;\n}\n\n// Ergebnis speichern\nmsg.payload = extractDataForA1(input);\n\n// Nachricht weiterleiten\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 840,
        "wires": [
            [
                "761fd9ef7e670107"
            ]
        ]
    },
    {
        "id": "761fd9ef7e670107",
        "type": "ui_template",
        "z": "759e4c62c23869e9",
        "group": "2180d8c1400721ba",
        "name": "B2",
        "order": 5,
        "width": 4,
        "height": 3,
        "format": "<div layout=\"column\" layout-align=\"start start\" style=\"padding: 0 6px;\">\n    <div layout=\"row\" layout-align=\"space-between center\">\n        <p>B2:</p>\n        <font\n            color=\"{{msg.payload.type === 'WHITE' ? 'white' : (msg.payload.type === 'BLUE' ? 'blue' : (msg.payload.type === 'RED' ? 'red' : 'transparent'))}}\">\n            <i class=\"fa fa-square\" aria-hidden=\"true\" style=\"background-color: grey; padding: 2px;\"></i>\n        </font>\n    </div>\n    <div layout=\"column\" layout-align=\"end start\">\n        <p style=\"text-align: left;\">id: {{msg.payload.id}}</p>\n        <p style=\"text-align: left;\">state: {{msg.payload.state}}</p>\n        <p style=\"text-align: left;\">type: {{msg.payload.type}}</p>\n    </div>\n</div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 890,
        "y": 840,
        "wires": [
            []
        ]
    },
    {
        "id": "c495ef7d746f7051",
        "type": "function",
        "z": "759e4c62c23869e9",
        "name": "B3",
        "func": "// Eingehende Nachricht verarbeiten\nvar input = msg.payload;\n\n// Funktion zum Extrahieren der Daten für A1\nfunction extractDataForA1(data) {\n    var result = null;\n\n    // Durchlaufen der Elemente im JSON-Array\n    data.forEach(function (item) {\n        if (item.location === \"B3\" && item.workpiece !== null) {\n            result = {\n                \"id\": item.workpiece.id,\n                \"state\": item.workpiece.state,\n                \"type\": item.workpiece.type\n            };\n        }\n    });\n\n    return result;\n}\n\n// Ergebnis speichern\nmsg.payload = extractDataForA1(input);\n\n// Nachricht weiterleiten\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 880,
        "wires": [
            [
                "c2bd25b7651ec6a9"
            ]
        ]
    },
    {
        "id": "c2bd25b7651ec6a9",
        "type": "ui_template",
        "z": "759e4c62c23869e9",
        "group": "2180d8c1400721ba",
        "name": "B3",
        "order": 6,
        "width": 4,
        "height": 3,
        "format": "<div layout=\"column\" layout-align=\"start start\" style=\"padding: 0 6px;\">\n    <div layout=\"row\" layout-align=\"space-between center\">\n        <p>B3:</p>\n        <font\n            color=\"{{msg.payload.type === 'WHITE' ? 'white' : (msg.payload.type === 'BLUE' ? 'blue' : (msg.payload.type === 'RED' ? 'red' : 'transparent'))}}\">\n            <i class=\"fa fa-square\" aria-hidden=\"true\" style=\"background-color: grey; padding: 2px;\"></i>\n        </font>\n    </div>\n    <div layout=\"column\" layout-align=\"end start\">\n        <p style=\"text-align: left;\">id: {{msg.payload.id}}</p>\n        <p style=\"text-align: left;\">state: {{msg.payload.state}}</p>\n        <p style=\"text-align: left;\">type: {{msg.payload.type}}</p>\n    </div>\n</div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 890,
        "y": 880,
        "wires": [
            []
        ]
    },
    {
        "id": "b8c65a06bb4559c0",
        "type": "function",
        "z": "759e4c62c23869e9",
        "name": "C1",
        "func": "// Eingehende Nachricht verarbeiten\nvar input = msg.payload;\n\n// Funktion zum Extrahieren der Daten für A1\nfunction extractDataForA1(data) {\n    var result = null;\n\n    // Durchlaufen der Elemente im JSON-Array\n    data.forEach(function (item) {\n        if (item.location === \"C1\" && item.workpiece !== null) {\n            result = {\n                \"id\": item.workpiece.id,\n                \"state\": item.workpiece.state,\n                \"type\": item.workpiece.type\n            };\n        }\n    });\n\n    return result;\n}\n\n// Ergebnis speichern\nmsg.payload = extractDataForA1(input);\n\n// Nachricht weiterleiten\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 920,
        "wires": [
            [
                "b35ed50a1a5bdc70"
            ]
        ]
    },
    {
        "id": "b35ed50a1a5bdc70",
        "type": "ui_template",
        "z": "759e4c62c23869e9",
        "group": "2180d8c1400721ba",
        "name": "C1",
        "order": 7,
        "width": 4,
        "height": 3,
        "format": "<div layout=\"column\" layout-align=\"start start\" style=\"padding: 0 6px;\">\n    <div layout=\"row\" layout-align=\"space-between center\">\n        <p>C1:</p>\n        <font\n            color=\"{{msg.payload.type === 'WHITE' ? 'white' : (msg.payload.type === 'BLUE' ? 'blue' : (msg.payload.type === 'RED' ? 'red' : 'transparent'))}}\">\n            <i class=\"fa fa-square\" aria-hidden=\"true\" style=\"background-color: grey; padding: 2px;\"></i>\n        </font>\n    </div>\n    <div layout=\"column\" layout-align=\"end start\">\n        <p style=\"text-align: left;\">id: {{msg.payload.id}}</p>\n        <p style=\"text-align: left;\">state: {{msg.payload.state}}</p>\n        <p style=\"text-align: left;\">type: {{msg.payload.type}}</p>\n    </div>\n</div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 890,
        "y": 920,
        "wires": [
            []
        ]
    },
    {
        "id": "ed25f411733e0c5e",
        "type": "function",
        "z": "759e4c62c23869e9",
        "name": "C2",
        "func": "// Eingehende Nachricht verarbeiten\nvar input = msg.payload;\n\n// Funktion zum Extrahieren der Daten für A1\nfunction extractDataForA1(data) {\n    var result = null;\n\n    // Durchlaufen der Elemente im JSON-Array\n    data.forEach(function (item) {\n        if (item.location === \"C2\" && item.workpiece !== null) {\n            result = {\n                \"id\": item.workpiece.id,\n                \"state\": item.workpiece.state,\n                \"type\": item.workpiece.type\n            };\n        }\n    });\n\n    return result;\n}\n\n// Ergebnis speichern\nmsg.payload = extractDataForA1(input);\n\n// Nachricht weiterleiten\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 960,
        "wires": [
            [
                "8168ce22430479e0"
            ]
        ]
    },
    {
        "id": "8168ce22430479e0",
        "type": "ui_template",
        "z": "759e4c62c23869e9",
        "group": "2180d8c1400721ba",
        "name": "C2",
        "order": 8,
        "width": 4,
        "height": 3,
        "format": "<div layout=\"column\" layout-align=\"start start\" style=\"padding: 0 6px;\">\n    <div layout=\"row\" layout-align=\"space-between center\">\n        <p>C2:</p>\n        <font\n            color=\"{{msg.payload.type === 'WHITE' ? 'white' : (msg.payload.type === 'BLUE' ? 'blue' : (msg.payload.type === 'RED' ? 'red' : 'transparent'))}}\">\n            <i class=\"fa fa-square\" aria-hidden=\"true\" style=\"background-color: grey; padding: 2px;\"></i>\n        </font>\n    </div>\n    <div layout=\"column\" layout-align=\"end start\">\n        <p style=\"text-align: left;\">id: {{msg.payload.id}}</p>\n        <p style=\"text-align: left;\">state: {{msg.payload.state}}</p>\n        <p style=\"text-align: left;\">type: {{msg.payload.type}}</p>\n    </div>\n</div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 890,
        "y": 960,
        "wires": [
            []
        ]
    },
    {
        "id": "7f7807ed6c14570d",
        "type": "function",
        "z": "759e4c62c23869e9",
        "name": "C3",
        "func": "// Eingehende Nachricht verarbeiten\nvar input = msg.payload;\n\n// Funktion zum Extrahieren der Daten für A1\nfunction extractDataForA1(data) {\n    var result = null;\n\n    // Durchlaufen der Elemente im JSON-Array\n    data.forEach(function (item) {\n        if (item.location === \"C3\" && item.workpiece !== null) {\n            result = {\n                \"id\": item.workpiece.id,\n                \"state\": item.workpiece.state,\n                \"type\": item.workpiece.type\n            };\n        }\n    });\n\n    return result;\n}\n\n// Ergebnis speichern\nmsg.payload = extractDataForA1(input);\n\n// Nachricht weiterleiten\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 1000,
        "wires": [
            [
                "ec3ff679494970b3"
            ]
        ]
    },
    {
        "id": "ec3ff679494970b3",
        "type": "ui_template",
        "z": "759e4c62c23869e9",
        "group": "2180d8c1400721ba",
        "name": "C3",
        "order": 9,
        "width": 4,
        "height": 3,
        "format": "<div layout=\"column\" layout-align=\"start start\" style=\"padding: 0 6px;\">\n    <div layout=\"row\" layout-align=\"space-between center\">\n        <p>C3:</p>\n        <font\n            color=\"{{msg.payload.type === 'WHITE' ? 'white' : (msg.payload.type === 'BLUE' ? 'blue' : (msg.payload.type === 'RED' ? 'red' : 'transparent'))}}\">\n            <i class=\"fa fa-square\" aria-hidden=\"true\" style=\"background-color: grey; padding: 2px;\"></i>\n        </font>\n    </div>\n    <div layout=\"column\" layout-align=\"end start\">\n        <p style=\"text-align: left;\">id: {{msg.payload.id}}</p>\n        <p style=\"text-align: left;\">state: {{msg.payload.state}}</p>\n        <p style=\"text-align: left;\">type: {{msg.payload.type}}</p>\n    </div>\n</div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 890,
        "y": 1000,
        "wires": [
            []
        ]
    },
    {
        "id": "321f6168b0799817",
        "type": "ui_template",
        "z": "759e4c62c23869e9",
        "group": "2180d8c1400721ba",
        "name": "A1",
        "order": 1,
        "width": 4,
        "height": 3,
        "format": "<!-- Äußeres DIV-Element mit Spaltenlayout -->\n<div layout=\"column\" layout-align=\"start start\" style=\"padding: 0 6px;\">\n    <!-- Inneres DIV-Element mit Zeilenlayout -->\n    <div layout=\"row\" layout-align=\"space-between center\">\n        <!-- Text \"A1:\" -->\n        <p>A1:</p>\n        <!-- Farbänderung basierend auf dem Payload-Typ -->\n        <font\n            color=\"{{msg.payload.type === 'WHITE' ? 'white' : (msg.payload.type === 'BLUE' ? 'blue' : (msg.payload.type === 'RED' ? 'red' : 'transparent'))}}\">\n            <!-- Quadratisches Symbol -->\n            <i class=\"fa fa-square\" aria-hidden=\"true\" style=\"background-color: grey; padding: 2px;\"></i>\n        </font>\n    </div>\n    <!-- Ein weiteres DIV-Element mit Spaltenlayout -->\n    <div layout=\"column\" layout-align=\"end start\">\n        <!-- Ausgaben für id, state und type -->\n        <p style=\"text-align: left;\">id: {{msg.payload.id}}</p>\n        <p style=\"text-align: left;\">state: {{msg.payload.state}}</p>\n        <p style=\"text-align: left;\">type: {{msg.payload.type}}</p>\n    </div>\n</div>",
        "storeOutMessages": true,
        "fwdInMessages": false,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 890,
        "y": 680,
        "wires": [
            []
        ]
    },
    {
        "id": "45438b584739c773",
        "type": "comment",
        "z": "759e4c62c23869e9",
        "name": "Stock view",
        "info": "",
        "x": 80,
        "y": 40,
        "wires": []
    },
    {
        "id": "64910df0913bd156",
        "type": "inject",
        "z": "759e4c62c23869e9",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "[{\"location\":\"A1\",\"workpiece\":{\"id\":\"045da192186581\",\"state\":\"RAW\",\"type\":\"WHITE\"}},{\"location\":\"A2\",\"workpiece\":{\"id\":\"045c9692186581\",\"state\":\"RAW\",\"type\":\"WHITE\"}},{\"location\":\"A3\",\"workpiece\":null},{\"location\":\"B1\",\"workpiece\":{\"id\":\"04ee5492186580\",\"state\":\"RAW\",\"type\":\"RED\"}},{\"location\":\"B2\",\"workpiece\":{\"id\":\"040aa692186580\",\"state\":\"RAW\",\"type\":\"BLUE\"}},{\"location\":\"B3\",\"workpiece\":null},{\"location\":\"C1\",\"workpiece\":{\"id\":\"045da892186581\",\"state\":\"RAW\",\"type\":\"WHITE\"}},{\"location\":\"C2\",\"workpiece\":{\"id\":\"041ca792186581\",\"state\":\"RAW\",\"type\":\"WHITE\"}},{\"location\":\"C3\",\"workpiece\":{\"id\":\"0411a192186580\",\"state\":\"RAW\",\"type\":\"RED\"}}]",
        "payloadType": "json",
        "x": 310,
        "y": 140,
        "wires": [
            [
                "f6b0066906f3b678",
                "d06c6d6a6c40fd9c",
                "15678bdf3d943185",
                "15c79c6de9e0e5db",
                "9d5625c0483b92da",
                "aa20eb988286d52e",
                "9ef7a198f7df1bd4",
                "db64c2469b84d144",
                "358d41c9c368e172"
            ]
        ]
    },
    {
        "id": "cff594c7bc4e51c9",
        "type": "debug",
        "z": "759e4c62c23869e9",
        "name": "debug 9",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 720,
        "y": 40,
        "wires": []
    },
    {
        "id": "f6b0066906f3b678",
        "type": "function",
        "z": "759e4c62c23869e9",
        "name": "A1",
        "func": "// Eingehende Nachricht verarbeiten\nvar input = msg.payload;\n\n// Funktion zum Extrahieren der Daten für A1\nfunction extractDataForA1(data) {\n    var result = null;\n\n    // Durchlaufen der Elemente im JSON-Array\n    data.forEach(function (item) {\n        if (item.location === \"A1\" && item.workpiece !== null) {\n            result = {\n                \"id\": item.workpiece.id,\n                \"state\": item.workpiece.state,\n                \"type\": item.workpiece.type\n            };\n        }\n    });\n\n    return result;\n}\n\n// Ergebnis speichern\nmsg.payload = extractDataForA1(input);\n\n// Nachricht weiterleiten\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 140,
        "wires": [
            [
                "90dc4236ad98f8b4"
            ]
        ]
    },
    {
        "id": "15c79c6de9e0e5db",
        "type": "function",
        "z": "759e4c62c23869e9",
        "name": "B1",
        "func": "// Eingehende Nachricht verarbeiten\nvar input = msg.payload;\n\n// Funktion zum Extrahieren der Daten für A1\nfunction extractDataForA1(data) {\n    var result = null;\n\n    // Durchlaufen der Elemente im JSON-Array\n    data.forEach(function (item) {\n        if (item.location === \"B1\" && item.workpiece !== null) {\n            result = {\n                \"id\": item.workpiece.id,\n                \"state\": item.workpiece.state,\n                \"type\": item.workpiece.type\n            };\n        }\n    });\n\n    return result;\n}\n\n// Ergebnis speichern\nmsg.payload = extractDataForA1(input);\n\n// Nachricht weiterleiten\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 260,
        "wires": [
            [
                "b7afeaaec460831e"
            ]
        ]
    },
    {
        "id": "b7afeaaec460831e",
        "type": "ui_template",
        "z": "759e4c62c23869e9",
        "group": "0851065f4113e051",
        "name": "B1",
        "order": 13,
        "width": 2,
        "height": 2,
        "format": "<div layout=\"column\" layout-align=\"start start\" style=\"padding: 0 6px;\">\n    <div layout=\"row\" layout-align=\"space-between center\">\n        <font\n            color=\"{{msg.payload.type === 'WHITE' ? 'white' : (msg.payload.type === 'BLUE' ? 'blue' : (msg.payload.type === 'RED' ? 'red' : 'transparent'))}}\">\n            <i class=\"fa fa-square\" aria-hidden=\"true\" style=\"background-color: grey; padding: 4px; font-size: 44px;\"></i>\n        </font>\n    </div>\n</div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 890,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "d06c6d6a6c40fd9c",
        "type": "function",
        "z": "759e4c62c23869e9",
        "name": "A2",
        "func": "// Eingehende Nachricht verarbeiten\nvar input = msg.payload;\n\n// Funktion zum Extrahieren der Daten für A1\nfunction extractDataForA1(data) {\n    var result = null;\n\n    // Durchlaufen der Elemente im JSON-Array\n    data.forEach(function (item) {\n        if (item.location === \"A2\" && item.workpiece !== null) {\n            result = {\n                \"id\": item.workpiece.id,\n                \"state\": item.workpiece.state,\n                \"type\": item.workpiece.type\n            };\n        }\n    });\n\n    return result;\n}\n\n// Ergebnis speichern\nmsg.payload = extractDataForA1(input);\n\n// Nachricht weiterleiten\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 180,
        "wires": [
            [
                "872385409681202b"
            ]
        ]
    },
    {
        "id": "872385409681202b",
        "type": "ui_template",
        "z": "759e4c62c23869e9",
        "group": "0851065f4113e051",
        "name": "A2",
        "order": 8,
        "width": 2,
        "height": 2,
        "format": "<div layout=\"column\" layout-align=\"start start\" style=\"padding: 0 6px;\">\n    <div layout=\"row\" layout-align=\"space-between center\">\n        <font\n            color=\"{{msg.payload.type === 'WHITE' ? 'white' : (msg.payload.type === 'BLUE' ? 'blue' : (msg.payload.type === 'RED' ? 'red' : 'transparent'))}}\">\n            <i class=\"fa fa-square\" aria-hidden=\"true\" style=\"background-color: grey; padding: 4px; font-size: 44px;\"></i>\n        </font>\n    </div>\n</div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 890,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "15678bdf3d943185",
        "type": "function",
        "z": "759e4c62c23869e9",
        "name": "A3",
        "func": "// Eingehende Nachricht verarbeiten\nvar input = msg.payload;\n\n// Funktion zum Extrahieren der Daten für A1\nfunction extractDataForA1(data) {\n    var result = null;\n\n    // Durchlaufen der Elemente im JSON-Array\n    data.forEach(function (item) {\n        if (item.location === \"A3\" && item.workpiece !== null) {\n            result = {\n                \"id\": item.workpiece.id,\n                \"state\": item.workpiece.state,\n                \"type\": item.workpiece.type\n            };\n        }\n    });\n\n    return result;\n}\n\n// Ergebnis speichern\nmsg.payload = extractDataForA1(input);\n\n// Nachricht weiterleiten\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 220,
        "wires": [
            [
                "10092d571ecaafdd"
            ]
        ]
    },
    {
        "id": "10092d571ecaafdd",
        "type": "ui_template",
        "z": "759e4c62c23869e9",
        "group": "0851065f4113e051",
        "name": "A3",
        "order": 9,
        "width": 2,
        "height": 2,
        "format": "<div layout=\"column\" layout-align=\"start start\" style=\"padding: 0 6px;\">\n    <div layout=\"row\" layout-align=\"space-between center\">\n        <font\n            color=\"{{msg.payload.type === 'WHITE' ? 'white' : (msg.payload.type === 'BLUE' ? 'blue' : (msg.payload.type === 'RED' ? 'red' : 'transparent'))}}\">\n            <i class=\"fa fa-square\" aria-hidden=\"true\" style=\"background-color: grey; padding: 4px; font-size: 44px;\"></i>\n        </font>\n    </div>\n</div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 890,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "9d5625c0483b92da",
        "type": "function",
        "z": "759e4c62c23869e9",
        "name": "B2",
        "func": "// Eingehende Nachricht verarbeiten\nvar input = msg.payload;\n\n// Funktion zum Extrahieren der Daten für A1\nfunction extractDataForA1(data) {\n    var result = null;\n\n    // Durchlaufen der Elemente im JSON-Array\n    data.forEach(function (item) {\n        if (item.location === \"B2\" && item.workpiece !== null) {\n            result = {\n                \"id\": item.workpiece.id,\n                \"state\": item.workpiece.state,\n                \"type\": item.workpiece.type\n            };\n        }\n    });\n\n    return result;\n}\n\n// Ergebnis speichern\nmsg.payload = extractDataForA1(input);\n\n// Nachricht weiterleiten\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 300,
        "wires": [
            [
                "8023ee2454a6fbc9"
            ]
        ]
    },
    {
        "id": "8023ee2454a6fbc9",
        "type": "ui_template",
        "z": "759e4c62c23869e9",
        "group": "0851065f4113e051",
        "name": "B2",
        "order": 14,
        "width": 2,
        "height": 2,
        "format": "<div layout=\"column\" layout-align=\"start start\" style=\"padding: 0 6px;\">\n    <div layout=\"row\" layout-align=\"space-between center\">\n        <font\n            color=\"{{msg.payload.type === 'WHITE' ? 'white' : (msg.payload.type === 'BLUE' ? 'blue' : (msg.payload.type === 'RED' ? 'red' : 'transparent'))}}\">\n            <i class=\"fa fa-square\" aria-hidden=\"true\" style=\"background-color: grey; padding: 4px; font-size: 44px;\"></i>\n        </font>\n    </div>\n</div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 890,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "aa20eb988286d52e",
        "type": "function",
        "z": "759e4c62c23869e9",
        "name": "B3",
        "func": "// Eingehende Nachricht verarbeiten\nvar input = msg.payload;\n\n// Funktion zum Extrahieren der Daten für A1\nfunction extractDataForA1(data) {\n    var result = null;\n\n    // Durchlaufen der Elemente im JSON-Array\n    data.forEach(function (item) {\n        if (item.location === \"B3\" && item.workpiece !== null) {\n            result = {\n                \"id\": item.workpiece.id,\n                \"state\": item.workpiece.state,\n                \"type\": item.workpiece.type\n            };\n        }\n    });\n\n    return result;\n}\n\n// Ergebnis speichern\nmsg.payload = extractDataForA1(input);\n\n// Nachricht weiterleiten\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 340,
        "wires": [
            [
                "b3ac0b8b669f476b"
            ]
        ]
    },
    {
        "id": "b3ac0b8b669f476b",
        "type": "ui_template",
        "z": "759e4c62c23869e9",
        "group": "0851065f4113e051",
        "name": "B3",
        "order": 15,
        "width": 2,
        "height": 2,
        "format": "<div layout=\"column\" layout-align=\"start start\" style=\"padding: 0 6px;\">\n    <div layout=\"row\" layout-align=\"space-between center\">\n        <font\n            color=\"{{msg.payload.type === 'WHITE' ? 'white' : (msg.payload.type === 'BLUE' ? 'blue' : (msg.payload.type === 'RED' ? 'red' : 'transparent'))}}\">\n            <i class=\"fa fa-square\" aria-hidden=\"true\" style=\"background-color: grey; padding: 4px; font-size: 44px;\"></i>\n        </font>\n    </div>\n</div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 890,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "9ef7a198f7df1bd4",
        "type": "function",
        "z": "759e4c62c23869e9",
        "name": "C1",
        "func": "// Eingehende Nachricht verarbeiten\nvar input = msg.payload;\n\n// Funktion zum Extrahieren der Daten für A1\nfunction extractDataForA1(data) {\n    var result = null;\n\n    // Durchlaufen der Elemente im JSON-Array\n    data.forEach(function (item) {\n        if (item.location === \"C1\" && item.workpiece !== null) {\n            result = {\n                \"id\": item.workpiece.id,\n                \"state\": item.workpiece.state,\n                \"type\": item.workpiece.type\n            };\n        }\n    });\n\n    return result;\n}\n\n// Ergebnis speichern\nmsg.payload = extractDataForA1(input);\n\n// Nachricht weiterleiten\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 380,
        "wires": [
            [
                "6cb69efcecb968b5"
            ]
        ]
    },
    {
        "id": "6cb69efcecb968b5",
        "type": "ui_template",
        "z": "759e4c62c23869e9",
        "group": "0851065f4113e051",
        "name": "C1",
        "order": 19,
        "width": 2,
        "height": 2,
        "format": "<div layout=\"column\" layout-align=\"start start\" style=\"padding: 0 6px;\">\n    <div layout=\"row\" layout-align=\"space-between center\">\n        <font\n            color=\"{{msg.payload.type === 'WHITE' ? 'white' : (msg.payload.type === 'BLUE' ? 'blue' : (msg.payload.type === 'RED' ? 'red' : 'transparent'))}}\">\n            <i class=\"fa fa-square\" aria-hidden=\"true\" style=\"background-color: grey; padding: 4px; font-size: 44px;\"></i>\n        </font>\n    </div>\n</div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 890,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "db64c2469b84d144",
        "type": "function",
        "z": "759e4c62c23869e9",
        "name": "C2",
        "func": "// Eingehende Nachricht verarbeiten\nvar input = msg.payload;\n\n// Funktion zum Extrahieren der Daten für A1\nfunction extractDataForA1(data) {\n    var result = null;\n\n    // Durchlaufen der Elemente im JSON-Array\n    data.forEach(function (item) {\n        if (item.location === \"C2\" && item.workpiece !== null) {\n            result = {\n                \"id\": item.workpiece.id,\n                \"state\": item.workpiece.state,\n                \"type\": item.workpiece.type\n            };\n        }\n    });\n\n    return result;\n}\n\n// Ergebnis speichern\nmsg.payload = extractDataForA1(input);\n\n// Nachricht weiterleiten\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 420,
        "wires": [
            [
                "181ad799669814d6"
            ]
        ]
    },
    {
        "id": "181ad799669814d6",
        "type": "ui_template",
        "z": "759e4c62c23869e9",
        "group": "0851065f4113e051",
        "name": "C2",
        "order": 20,
        "width": 2,
        "height": 2,
        "format": "<div layout=\"column\" layout-align=\"start start\" style=\"padding: 0 6px;\">\n    <div layout=\"row\" layout-align=\"space-between center\">\n        <font\n            color=\"{{msg.payload.type === 'WHITE' ? 'white' : (msg.payload.type === 'BLUE' ? 'blue' : (msg.payload.type === 'RED' ? 'red' : 'transparent'))}}\">\n            <i class=\"fa fa-square\" aria-hidden=\"true\" style=\"background-color: grey; padding: 4px; font-size: 44px;\"></i>\n        </font>\n    </div>\n</div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 890,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "358d41c9c368e172",
        "type": "function",
        "z": "759e4c62c23869e9",
        "name": "C3",
        "func": "// Eingehende Nachricht verarbeiten\nvar input = msg.payload;\n\n// Funktion zum Extrahieren der Daten für A1\nfunction extractDataForA1(data) {\n    var result = null;\n\n    // Durchlaufen der Elemente im JSON-Array\n    data.forEach(function (item) {\n        if (item.location === \"C3\" && item.workpiece !== null) {\n            result = {\n                \"id\": item.workpiece.id,\n                \"state\": item.workpiece.state,\n                \"type\": item.workpiece.type\n            };\n        }\n    });\n\n    return result;\n}\n\n// Ergebnis speichern\nmsg.payload = extractDataForA1(input);\n\n// Nachricht weiterleiten\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 460,
        "wires": [
            [
                "ba3a96d6082406d9"
            ]
        ]
    },
    {
        "id": "ba3a96d6082406d9",
        "type": "ui_template",
        "z": "759e4c62c23869e9",
        "group": "0851065f4113e051",
        "name": "C3",
        "order": 21,
        "width": 2,
        "height": 2,
        "format": "<div layout=\"column\" layout-align=\"start start\" style=\"padding: 0 6px; overflow: hidden;\">\n    <div layout=\"row\" layout-align=\"space-between center\">\n        <font\n            color=\"{{msg.payload.type === 'WHITE' ? 'white' : (msg.payload.type === 'BLUE' ? 'blue' : (msg.payload.type === 'RED' ? 'red' : 'transparent'))}}\">\n            <i class=\"fa fa-square\" aria-hidden=\"true\" style=\"background-color: grey; padding: 4px; font-size: 44px;\"></i>\n        </font>\n    </div>\n</div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 890,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "90dc4236ad98f8b4",
        "type": "ui_template",
        "z": "759e4c62c23869e9",
        "group": "0851065f4113e051",
        "name": "A1",
        "order": 7,
        "width": 2,
        "height": 2,
        "format": "<!-- Definiere ein DIV-Container Element mit einem Spaltenlayout -->\n<div layout=\"column\" layout-align=\"start start\" style=\"padding: 0 6px;\">\n    <!-- Ein weiteres DIV-Element mit einem Zeilenlayout -->\n    <div layout=\"row\" layout-align=\"space-between center\">\n        <!-- Farbe basierend auf dem Payload-Typ ändern -->\n        <font\n            color=\"{{msg.payload.type === 'WHITE' ? 'white' : (msg.payload.type === 'BLUE' ? 'blue' : (msg.payload.type === 'RED' ? 'red' : 'transparent'))}}\">\n            <!-- Ein Platzhalter, der ein quadratisches Symbol darstellt -->\n            <i class=\"fa fa-square\" aria-hidden=\"true\" style=\"background-color: grey; padding: 4px; font-size: 44px;\"></i>\n        </font>\n    </div>\n</div>\n\n",
        "storeOutMessages": true,
        "fwdInMessages": false,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 890,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "df8407563a6d9f69",
        "type": "ui_template",
        "z": "759e4c62c23869e9",
        "group": "0851065f4113e051",
        "name": "A",
        "order": 6,
        "width": 1,
        "height": 2,
        "format": "<!-- Äußeres DIV mit Spaltenlayout -->\n<div layout=\"column\" layout-align=\"start start\" style=\"padding: 0 6px;\">\n    <!-- Inneres DIV mit Spaltenlayout -->\n    <div layout=\"column\" layout-align=\"end start\">\n        <!-- Ein Absatz mit linker Ausrichtung -->\n        <p style=\"text-align: left;\">A</p>\n    </div>\n</div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1050,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "f0174f5ee28cff3f",
        "type": "ui_template",
        "z": "759e4c62c23869e9",
        "group": "0851065f4113e051",
        "name": "B",
        "order": 12,
        "width": 1,
        "height": 2,
        "format": "<div layout=\"column\" layout-align=\"start start\" style=\"padding: 0 6px;\">\n    <div layout=\"column\" layout-align=\"end start\">\n        <p style=\"text-align: left;\">B</p>\n    </div>\n</div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1050,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "25b6dfb8011fe870",
        "type": "ui_template",
        "z": "759e4c62c23869e9",
        "group": "0851065f4113e051",
        "name": "C",
        "order": 18,
        "width": 1,
        "height": 2,
        "format": "<div layout=\"column\" layout-align=\"start start\" style=\"padding: 0 6px;\">\n    <div layout=\"column\" layout-align=\"end start\">\n        <p style=\"text-align: left;\">C</p>\n    </div>\n</div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1050,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "2f4c891c52ac3d8f",
        "type": "ui_template",
        "z": "759e4c62c23869e9",
        "group": "0851065f4113e051",
        "name": "1",
        "order": 2,
        "width": 2,
        "height": 1,
        "format": "<div layout=\"column\" layout-align=\"start start\" style=\"padding: 0 6px;\">\n    <div layout=\"column\" layout-align=\"end start\">\n        <p style=\"text-align: left;\">1</p>\n    </div>\n</div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1050,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "6e3ecf8f0e8099ff",
        "type": "ui_template",
        "z": "759e4c62c23869e9",
        "group": "0851065f4113e051",
        "name": "2",
        "order": 3,
        "width": 2,
        "height": 1,
        "format": "<div layout=\"column\" layout-align=\"start start\" style=\"padding: 0 6px;\">\n    <div layout=\"column\" layout-align=\"end start\">\n        <p style=\"text-align: left;\">2</p>\n    </div>\n</div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1050,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "18d215b3833131de",
        "type": "ui_template",
        "z": "759e4c62c23869e9",
        "group": "0851065f4113e051",
        "name": "3",
        "order": 4,
        "width": 2,
        "height": 1,
        "format": "<div layout=\"column\" layout-align=\"start start\" style=\"padding: 0 6px;\">\n    <div layout=\"column\" layout-align=\"end start\">\n        <p style=\"text-align: left;\">3</p>\n    </div>\n</div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1050,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "42421c48f9b5f147",
        "type": "function",
        "z": "759e4c62c23869e9",
        "name": "function 10",
        "func": "// Extrahiere den Teil mit den eckigen Klammern aus der Nachricht\nvar stockItems = msg.payload.stockItems;\n\n// Erstelle eine neue Nachricht mit dem extrahierten Teil\nmsg.payload = stockItems;\n\n// Leite die Nachricht weiter\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 1000,
        "wires": [
            [
                "7f7807ed6c14570d",
                "ed25f411733e0c5e",
                "b8c65a06bb4559c0",
                "c495ef7d746f7051",
                "145172f7ac59bfda",
                "fbafb19392fc590f",
                "f2c8495d0bd1d815",
                "da2730750060d218",
                "98a5e4bfd52aff91"
            ]
        ]
    },
    {
        "id": "54b89f5feed469e6",
        "type": "mqtt in",
        "z": "759e4c62c23869e9",
        "name": "",
        "topic": "f/i/stock",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "fa600c20.8a9c9",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 310,
        "y": 460,
        "wires": [
            [
                "2c6d4b3e2b2b0b2b"
            ]
        ]
    },
    {
        "id": "2c6d4b3e2b2b0b2b",
        "type": "function",
        "z": "759e4c62c23869e9",
        "name": "function 11",
        "func": "// Extrahiere den Teil mit den eckigen Klammern aus der Nachricht\nvar stockItems = msg.payload.stockItems;\n\n// Erstelle eine neue Nachricht mit dem extrahierten Teil\nmsg.payload = stockItems;\n\n// Leite die Nachricht weiter\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 460,
        "wires": [
            [
                "358d41c9c368e172",
                "db64c2469b84d144",
                "9ef7a198f7df1bd4",
                "aa20eb988286d52e",
                "9d5625c0483b92da",
                "15c79c6de9e0e5db",
                "15678bdf3d943185",
                "d06c6d6a6c40fd9c",
                "f6b0066906f3b678"
            ]
        ]
    },
    {
        "id": "b355756.8a49388",
        "type": "ui_template",
        "z": "759e4c62c23869e9",
        "group": "8ec1e854ed31c61e",
        "name": "Camera view",
        "order": 5,
        "width": 7,
        "height": 6,
        "format": "<img src=\"{{msg.payload}}\" />\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 750,
        "y": 1480,
        "wires": [
            [
                "7063e827e1967ff1"
            ]
        ]
    },
    {
        "id": "fa038b47.d0ae88",
        "type": "mqtt in",
        "z": "759e4c62c23869e9",
        "name": "",
        "topic": "i/cam",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "fa600c20.8a9c9",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 310,
        "y": 1440,
        "wires": [
            [
                "415afe1d.9c93",
                "d03fb41.9611448",
                "ceec5f61.0f45d"
            ]
        ]
    },
    {
        "id": "415afe1d.9c93",
        "type": "debug",
        "z": "759e4c62c23869e9",
        "name": "raw",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 530,
        "y": 1400,
        "wires": []
    },
    {
        "id": "d03fb41.9611448",
        "type": "function",
        "z": "759e4c62c23869e9",
        "name": "data",
        "func": "// Weise nur den Wert von msg.payload.data an msg.payload zu\nmsg.payload = msg.payload.data;\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 1480,
        "wires": [
            [
                "b355756.8a49388",
                "7b628b8dae768c2a"
            ]
        ]
    },
    {
        "id": "ceec5f61.0f45d",
        "type": "function",
        "z": "759e4c62c23869e9",
        "name": "timestamp",
        "func": "// Erstelle ein Date-Objekt basierend auf dem Zeitstempel im Payload der Nachricht\nvar date = new Date(msg.payload.ts);\n\n// Konvertiere das Date-Objekt in eine Zeichenkette, die das Datum und die Uhrzeit im deutschen Format darstellt\nmsg.payload = date.toLocaleString('de-DE');\n\n// Gib die modifizierte Nachricht zurück\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 1440,
        "wires": [
            [
                "d2ff29b0.8bae88",
                "a1b6297b.a8ecf8"
            ]
        ]
    },
    {
        "id": "d2ff29b0.8bae88",
        "type": "debug",
        "z": "759e4c62c23869e9",
        "name": "ts",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 730,
        "y": 1400,
        "wires": []
    },
    {
        "id": "a1b6297b.a8ecf8",
        "type": "ui_text",
        "z": "759e4c62c23869e9",
        "group": "8ec1e854ed31c61e",
        "order": 1,
        "width": 7,
        "height": 1,
        "name": "",
        "label": "timestamp Cam",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 760,
        "y": 1440,
        "wires": []
    },
    {
        "id": "ddad5a8c9ca52bfe",
        "type": "comment",
        "z": "759e4c62c23869e9",
        "name": "Cam",
        "info": "Kamera muss blinken. Dazu zuerst den controller ohne code In der Multibearbeitungsstation mit Überwachungskamera aktivieren. danach den Main controller.!",
        "x": 70,
        "y": 1160,
        "wires": []
    },
    {
        "id": "f0e640f.1d143c",
        "type": "mqtt out",
        "z": "759e4c62c23869e9",
        "name": "",
        "topic": "o/ptu",
        "qos": "0",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "fa600c20.8a9c9",
        "x": 890,
        "y": 1640,
        "wires": []
    },
    {
        "id": "112ef0ab.bb920f",
        "type": "inject",
        "z": "759e4c62c23869e9",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 320,
        "y": 1760,
        "wires": [
            [
                "74d3de94.0142"
            ]
        ]
    },
    {
        "id": "3b60584b.462798",
        "type": "debug",
        "z": "759e4c62c23869e9",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 910,
        "y": 1600,
        "wires": []
    },
    {
        "id": "cd7aa7ce.9ab958",
        "type": "function",
        "z": "759e4c62c23869e9",
        "name": "+ts UTC ISO8301",
        "func": "// Erstelle einen Zeitstempel im ISO-8601-Format\nvar ts = new Date().toISOString();\n\n// Füge den Zeitstempel zum Payload-Objekt der Nachricht hinzu\nmsg.payload[\"ts\"] = ts;\n\n// Konvertiere das Payload-Objekt in einen JSON-String\nmsg.payload = JSON.stringify(msg.payload);\n\n// Gib die modifizierte Nachricht zurück\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 680,
        "y": 1600,
        "wires": [
            [
                "f0e640f.1d143c",
                "3b60584b.462798"
            ]
        ]
    },
    {
        "id": "74d3de94.0142",
        "type": "ui_button",
        "z": "759e4c62c23869e9",
        "name": "",
        "group": "8ec1e854ed31c61e",
        "order": 23,
        "width": 1,
        "height": 1,
        "passthru": true,
        "label": "STOP",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "{\"cmd\":\"stop\"}",
        "payloadType": "json",
        "topic": "",
        "topicType": "str",
        "x": 470,
        "y": 1760,
        "wires": [
            [
                "cd7aa7ce.9ab958"
            ]
        ]
    },
    {
        "id": "a3cdf05b.49e0e",
        "type": "inject",
        "z": "759e4c62c23869e9",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 320,
        "y": 1800,
        "wires": [
            [
                "149550d9.227e4f"
            ]
        ]
    },
    {
        "id": "149550d9.227e4f",
        "type": "ui_button",
        "z": "759e4c62c23869e9",
        "name": "",
        "group": "8ec1e854ed31c61e",
        "order": 25,
        "width": 1,
        "height": 1,
        "passthru": true,
        "label": "HOME",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "{\"cmd\":\"home\"}",
        "payloadType": "json",
        "topic": "",
        "topicType": "str",
        "x": 470,
        "y": 1800,
        "wires": [
            [
                "cd7aa7ce.9ab958"
            ]
        ]
    },
    {
        "id": "4b856f.26b0fa9",
        "type": "inject",
        "z": "759e4c62c23869e9",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 320,
        "y": 1840,
        "wires": [
            [
                "4b50aebf.d1921"
            ]
        ]
    },
    {
        "id": "4b50aebf.d1921",
        "type": "ui_button",
        "z": "759e4c62c23869e9",
        "name": "all left",
        "group": "8ec1e854ed31c61e",
        "order": 12,
        "width": 1,
        "height": 1,
        "passthru": true,
        "label": "",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "fa-chevron-left",
        "payload": "{\"cmd\":\"start_pan\"}",
        "payloadType": "json",
        "topic": "",
        "topicType": "str",
        "x": 470,
        "y": 1840,
        "wires": [
            [
                "cd7aa7ce.9ab958"
            ]
        ]
    },
    {
        "id": "db164720.3f7c88",
        "type": "inject",
        "z": "759e4c62c23869e9",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 320,
        "y": 1880,
        "wires": [
            [
                "716bf3c2.e9389c"
            ]
        ]
    },
    {
        "id": "716bf3c2.e9389c",
        "type": "ui_button",
        "z": "759e4c62c23869e9",
        "name": "all right",
        "group": "8ec1e854ed31c61e",
        "order": 16,
        "width": 1,
        "height": 1,
        "passthru": true,
        "label": "",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "fa-chevron-right",
        "payload": "{\"cmd\":\"end_pan\"}",
        "payloadType": "json",
        "topic": "",
        "topicType": "str",
        "x": 480,
        "y": 1880,
        "wires": [
            [
                "cd7aa7ce.9ab958"
            ]
        ]
    },
    {
        "id": "13f2e4c.cb70b1b",
        "type": "inject",
        "z": "759e4c62c23869e9",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 320,
        "y": 1920,
        "wires": [
            [
                "7257227b.e5107c"
            ]
        ]
    },
    {
        "id": "7257227b.e5107c",
        "type": "ui_button",
        "z": "759e4c62c23869e9",
        "name": "all down",
        "group": "8ec1e854ed31c61e",
        "order": 21,
        "width": 1,
        "height": 1,
        "passthru": true,
        "label": "",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "fa-chevron-down",
        "payload": "{\"cmd\":\"start_tilt\"}",
        "payloadType": "json",
        "topic": "",
        "topicType": "str",
        "x": 480,
        "y": 1920,
        "wires": [
            [
                "cd7aa7ce.9ab958"
            ]
        ]
    },
    {
        "id": "215c1eeb.1a94f2",
        "type": "inject",
        "z": "759e4c62c23869e9",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 320,
        "y": 1960,
        "wires": [
            [
                "ff79f4fd.7fca28"
            ]
        ]
    },
    {
        "id": "ff79f4fd.7fca28",
        "type": "ui_button",
        "z": "759e4c62c23869e9",
        "name": "all up",
        "group": "8ec1e854ed31c61e",
        "order": 7,
        "width": 1,
        "height": 1,
        "passthru": true,
        "label": "",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "fa-chevron-up",
        "payload": "{\"cmd\":\"end_tilt\"}",
        "payloadType": "json",
        "topic": "",
        "topicType": "str",
        "x": 470,
        "y": 1960,
        "wires": [
            [
                "cd7aa7ce.9ab958"
            ]
        ]
    },
    {
        "id": "1184ac9a.444a83",
        "type": "inject",
        "z": "759e4c62c23869e9",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 320,
        "y": 1600,
        "wires": [
            [
                "eb3877c.03d2b88"
            ]
        ]
    },
    {
        "id": "eb3877c.03d2b88",
        "type": "ui_button",
        "z": "759e4c62c23869e9",
        "name": "left",
        "group": "8ec1e854ed31c61e",
        "order": 13,
        "width": 1,
        "height": 1,
        "passthru": true,
        "label": "",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "fa-angle-left",
        "payload": "{\"cmd\":\"relmove_left\",\"degree\":10}",
        "payloadType": "json",
        "topic": "",
        "topicType": "str",
        "x": 470,
        "y": 1600,
        "wires": [
            [
                "cd7aa7ce.9ab958"
            ]
        ]
    },
    {
        "id": "47f2eeb2.43a2a",
        "type": "inject",
        "z": "759e4c62c23869e9",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 320,
        "y": 1640,
        "wires": [
            [
                "903c87b3.6b5908"
            ]
        ]
    },
    {
        "id": "903c87b3.6b5908",
        "type": "ui_button",
        "z": "759e4c62c23869e9",
        "name": "right",
        "group": "8ec1e854ed31c61e",
        "order": 15,
        "width": 1,
        "height": 1,
        "passthru": true,
        "label": "",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "fa-angle-right",
        "payload": "{\"cmd\":\"relmove_right\",\"degree\":10}",
        "payloadType": "json",
        "topic": "",
        "topicType": "str",
        "x": 470,
        "y": 1640,
        "wires": [
            [
                "cd7aa7ce.9ab958"
            ]
        ]
    },
    {
        "id": "c273e22b.b94df",
        "type": "inject",
        "z": "759e4c62c23869e9",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 320,
        "y": 1680,
        "wires": [
            [
                "f1e67947.608518"
            ]
        ]
    },
    {
        "id": "f1e67947.608518",
        "type": "ui_button",
        "z": "759e4c62c23869e9",
        "name": "down",
        "group": "8ec1e854ed31c61e",
        "order": 18,
        "width": 1,
        "height": 1,
        "passthru": true,
        "label": "",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "fa-angle-down",
        "payload": "{\"cmd\":\"relmove_down\",\"degree\":10}",
        "payloadType": "json",
        "topic": "",
        "topicType": "str",
        "x": 470,
        "y": 1680,
        "wires": [
            [
                "cd7aa7ce.9ab958"
            ]
        ]
    },
    {
        "id": "29f1be35.9e8792",
        "type": "inject",
        "z": "759e4c62c23869e9",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 320,
        "y": 1720,
        "wires": [
            [
                "77e28960.7261c8"
            ]
        ]
    },
    {
        "id": "77e28960.7261c8",
        "type": "ui_button",
        "z": "759e4c62c23869e9",
        "name": "up",
        "group": "8ec1e854ed31c61e",
        "order": 10,
        "width": 1,
        "height": 1,
        "passthru": true,
        "label": "",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "fa-angle-up ",
        "payload": "{\"cmd\":\"relmove_up\",\"degree\":10}",
        "payloadType": "json",
        "topic": "",
        "topicType": "str",
        "x": 470,
        "y": 1720,
        "wires": [
            [
                "cd7aa7ce.9ab958"
            ]
        ]
    },
    {
        "id": "60ee05ed.ec1e6c",
        "type": "ui_button",
        "z": "759e4c62c23869e9",
        "name": "",
        "group": "004a193427ad611c",
        "order": 10,
        "width": 4,
        "height": 1,
        "passthru": true,
        "label": "WHITE",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "{\"type\":\"WHITE\"}",
        "payloadType": "json",
        "topic": "f/o/order",
        "topicType": "str",
        "x": 470,
        "y": 2120,
        "wires": [
            [
                "608bbd52.bfc014"
            ]
        ]
    },
    {
        "id": "ee927345.8afef",
        "type": "ui_button",
        "z": "759e4c62c23869e9",
        "name": "",
        "group": "004a193427ad611c",
        "order": 12,
        "width": 4,
        "height": 1,
        "passthru": true,
        "label": "RED",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "{\"type\":\"RED\"}",
        "payloadType": "json",
        "topic": "f/o/order",
        "topicType": "str",
        "x": 470,
        "y": 2160,
        "wires": [
            [
                "608bbd52.bfc014"
            ]
        ]
    },
    {
        "id": "9bed5a2b.86e9a8",
        "type": "ui_button",
        "z": "759e4c62c23869e9",
        "name": "",
        "group": "004a193427ad611c",
        "order": 11,
        "width": 4,
        "height": 1,
        "passthru": true,
        "label": "BLUE",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "{\"type\":\"BLUE\"}",
        "payloadType": "json",
        "topic": "f/o/order",
        "topicType": "str",
        "x": 470,
        "y": 2200,
        "wires": [
            [
                "608bbd52.bfc014"
            ]
        ]
    },
    {
        "id": "5276a64e.c0f4c8",
        "type": "debug",
        "z": "759e4c62c23869e9",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 930,
        "y": 2180,
        "wires": []
    },
    {
        "id": "608bbd52.bfc014",
        "type": "function",
        "z": "759e4c62c23869e9",
        "name": "+ts UTC ISO8301",
        "func": "// Erstelle einen Zeitstempel im ISO-8601-Format\nvar ts = new Date().toISOString();\n\n// Füge den Zeitstempel zum Payload-Objekt der Nachricht hinzu\nmsg.payload[\"ts\"] = ts;\n\n// Konvertiere das Payload-Objekt in einen JSON-String\nmsg.payload = JSON.stringify(msg.payload);\n\n// Gib die modifizierte Nachricht zurück\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 2120,
        "wires": [
            [
                "5276a64e.c0f4c8",
                "a3347b23.efbe38"
            ]
        ]
    },
    {
        "id": "a3347b23.efbe38",
        "type": "mqtt out",
        "z": "759e4c62c23869e9",
        "name": "",
        "topic": "f/o/order",
        "qos": "0",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "fa600c20.8a9c9",
        "x": 920,
        "y": 2120,
        "wires": []
    },
    {
        "id": "3cfd15ff.4867da",
        "type": "inject",
        "z": "759e4c62c23869e9",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 320,
        "y": 2120,
        "wires": [
            [
                "60ee05ed.ec1e6c"
            ]
        ]
    },
    {
        "id": "1ce1c507.34e69b",
        "type": "inject",
        "z": "759e4c62c23869e9",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 320,
        "y": 2160,
        "wires": [
            [
                "ee927345.8afef"
            ]
        ]
    },
    {
        "id": "1d4b527b.91d9be",
        "type": "inject",
        "z": "759e4c62c23869e9",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 320,
        "y": 2200,
        "wires": [
            [
                "9bed5a2b.86e9a8"
            ]
        ]
    },
    {
        "id": "bb4a4204.3df4d",
        "type": "mqtt out",
        "z": "759e4c62c23869e9",
        "name": "",
        "topic": "f/o/state/ack",
        "qos": "0",
        "retain": "",
        "broker": "fa600c20.8a9c9",
        "x": 990,
        "y": 6480,
        "wires": []
    },
    {
        "id": "f26d2c7d.e3f0f",
        "type": "inject",
        "z": "759e4c62c23869e9",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"period\":3}",
        "payloadType": "json",
        "x": 380,
        "y": 6480,
        "wires": [
            [
                "973cb9dc.280098"
            ]
        ]
    },
    {
        "id": "8822ab82.839ff8",
        "type": "debug",
        "z": "759e4c62c23869e9",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 990,
        "y": 6540,
        "wires": []
    },
    {
        "id": "dfc79f4b.3083c",
        "type": "function",
        "z": "759e4c62c23869e9",
        "name": "+ts UTC ISO8301",
        "func": "var ts = new Date().toISOString();\nmsg.payload[\"ts\"] = ts;\nmsg.payload = JSON.stringify(msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 770,
        "y": 6480,
        "wires": [
            [
                "bb4a4204.3df4d",
                "8822ab82.839ff8"
            ]
        ]
    },
    {
        "id": "d8daab1e.a68d78",
        "type": "mqtt out",
        "z": "759e4c62c23869e9",
        "name": "",
        "topic": "f/o/nfc/ds",
        "qos": "0",
        "retain": "",
        "broker": "fa600c20.8a9c9",
        "x": 890,
        "y": 3640,
        "wires": []
    },
    {
        "id": "29d5485e.672a18",
        "type": "inject",
        "z": "759e4c62c23869e9",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 290,
        "y": 3640,
        "wires": [
            [
                "16d79297.5b6d5d"
            ]
        ]
    },
    {
        "id": "883d4af2.dd6528",
        "type": "debug",
        "z": "759e4c62c23869e9",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 900,
        "y": 3600,
        "wires": []
    },
    {
        "id": "305fd31f.da3fdc",
        "type": "function",
        "z": "759e4c62c23869e9",
        "name": "+ts UTC ISO8301",
        "func": "// Erstellt einen Zeitstempel im ISO-8601-Format basierend auf der aktuellen Zeit\nvar ts = new Date().toISOString();\n\n// Fügt den Zeitstempel zum Payload-Objekt der Nachricht hinzu\nmsg.payload[\"ts\"] = ts;\n\n// Konvertiert das Payload-Objekt in einen JSON-String\nmsg.payload = JSON.stringify(msg.payload);\n\n// Gibt die modifizierte Nachricht zurück\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 680,
        "y": 3640,
        "wires": [
            [
                "d8daab1e.a68d78",
                "883d4af2.dd6528"
            ]
        ]
    },
    {
        "id": "973cb9dc.280098",
        "type": "ui_button",
        "z": "759e4c62c23869e9",
        "name": "",
        "group": "0f7b68a72aef4f12",
        "order": 2,
        "width": 4,
        "height": 1,
        "passthru": true,
        "label": "ACK",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "{}",
        "payloadType": "json",
        "topic": "f/o/state/ack",
        "topicType": "str",
        "x": 540,
        "y": 6480,
        "wires": [
            [
                "dfc79f4b.3083c"
            ]
        ]
    },
    {
        "id": "16d79297.5b6d5d",
        "type": "ui_button",
        "z": "759e4c62c23869e9",
        "name": "",
        "group": "6e8e604f8cdc1fbd",
        "order": 24,
        "width": 6,
        "height": 1,
        "passthru": true,
        "label": "NFC DELETE",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "{\"cmd\":\"delete\"}",
        "payloadType": "json",
        "topic": "f/o/nfc/ds",
        "topicType": "str",
        "x": 470,
        "y": 3640,
        "wires": [
            [
                "305fd31f.da3fdc"
            ]
        ]
    },
    {
        "id": "9bd53de1.5268c",
        "type": "inject",
        "z": "759e4c62c23869e9",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 290,
        "y": 3680,
        "wires": [
            [
                "a92c291.5988ed8"
            ]
        ]
    },
    {
        "id": "a92c291.5988ed8",
        "type": "ui_button",
        "z": "759e4c62c23869e9",
        "name": "",
        "group": "6e8e604f8cdc1fbd",
        "order": 23,
        "width": 6,
        "height": 1,
        "passthru": true,
        "label": "NFC READ",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "{\"cmd\":\"read\"}",
        "payloadType": "json",
        "topic": "f/o/nfc/ds",
        "topicType": "str",
        "x": 460,
        "y": 3680,
        "wires": [
            [
                "305fd31f.da3fdc"
            ]
        ]
    },
    {
        "id": "433aaa89aeba2600",
        "type": "comment",
        "z": "759e4c62c23869e9",
        "name": "Acknowledge",
        "info": "",
        "x": 90,
        "y": 6480,
        "wires": []
    },
    {
        "id": "bd44b4a1f41bc42d",
        "type": "comment",
        "z": "759e4c62c23869e9",
        "name": "Order",
        "info": "",
        "x": 70,
        "y": 2120,
        "wires": []
    },
    {
        "id": "0ce915afc52b71b6",
        "type": "comment",
        "z": "759e4c62c23869e9",
        "name": "NFC",
        "info": "",
        "x": 70,
        "y": 3640,
        "wires": []
    },
    {
        "id": "7b628b8dae768c2a",
        "type": "debug",
        "z": "759e4c62c23869e9",
        "name": "debug 11",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 740,
        "y": 1520,
        "wires": []
    },
    {
        "id": "7063e827e1967ff1",
        "type": "debug",
        "z": "759e4c62c23869e9",
        "name": "debug 12",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 940,
        "y": 1480,
        "wires": []
    },
    {
        "id": "74c8c40286163952",
        "type": "mqtt in",
        "z": "759e4c62c23869e9",
        "name": "",
        "topic": "f/i/nfc/ds",
        "qos": "0",
        "datatype": "json",
        "broker": "fa600c20.8a9c9",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 280,
        "y": 3820,
        "wires": [
            [
                "e4373f6dc668ca35",
                "01ac2cb847817999"
            ]
        ]
    },
    {
        "id": "e4373f6dc668ca35",
        "type": "debug",
        "z": "759e4c62c23869e9",
        "name": "raw",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 510,
        "y": 3860,
        "wires": []
    },
    {
        "id": "01ac2cb847817999",
        "type": "function",
        "z": "759e4c62c23869e9",
        "name": "timestamp",
        "func": "// Erstellt ein Date-Objekt basierend auf dem Zeitstempel im Payload der empfangenen Nachricht\nvar date = new Date(msg.payload.ts);\n\n// Konvertiert das Date-Objekt in einen lokalisierten String im deutschen Format\nmsg.payload = date.toLocaleString('de-DE');\n\n// Gibt die modifizierte Nachricht zurück\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 3820,
        "wires": [
            [
                "e6c6aa4d8d61e453"
            ]
        ]
    },
    {
        "id": "e6c6aa4d8d61e453",
        "type": "debug",
        "z": "759e4c62c23869e9",
        "name": "ts",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 710,
        "y": 3820,
        "wires": []
    },
    {
        "id": "b6c11429e7444080",
        "type": "inject",
        "z": "759e4c62c23869e9",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"history\":[{\"code\":100,\"ts\":\"2024-02-15T12:16:21.370Z\"},{\"code\":200,\"ts\":\"2024-02-15T12:16:24.219Z\"}],\"ts\":\"2024-02-15T13:59:46.942Z\",\"workpiece\":{\"id\":\"0411a192186580\",\"state\":\"RAW\",\"type\":\"RED\"}}",
        "payloadType": "str",
        "x": 250,
        "y": 3920,
        "wires": [
            [
                "370b56824f0f9d88"
            ]
        ]
    },
    {
        "id": "370b56824f0f9d88",
        "type": "debug",
        "z": "759e4c62c23869e9",
        "name": "debug 13",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 520,
        "y": 3920,
        "wires": []
    },
    {
        "id": "461e6206a6001c88",
        "type": "change",
        "z": "759e4c62c23869e9",
        "name": "history",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.history",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 690,
        "y": 4380,
        "wires": [
            [
                "1c8793185961502b",
                "85bba2204c76a235",
                "5b42bdc992c2f961",
                "0f10779948fdbbbd",
                "7b0c008637e4806f",
                "c7afd3b605b8dccc",
                "1b6e96f4882cbcea",
                "6ebf40a09bcfc734"
            ]
        ]
    },
    {
        "id": "eeb29cdcfbe9bce1",
        "type": "change",
        "z": "759e4c62c23869e9",
        "name": "workpiece",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.workpiece",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 700,
        "y": 4140,
        "wires": [
            [
                "15fb5aa69427316f",
                "a3951ef656944f4d",
                "20476446f6d06eb6"
            ]
        ]
    },
    {
        "id": "15fb5aa69427316f",
        "type": "change",
        "z": "759e4c62c23869e9",
        "name": "id",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.id",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1070,
        "y": 4140,
        "wires": [
            [
                "daeb5cd388690253"
            ]
        ]
    },
    {
        "id": "a3951ef656944f4d",
        "type": "change",
        "z": "759e4c62c23869e9",
        "name": "state",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.state",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1070,
        "y": 4200,
        "wires": [
            [
                "b0c7b2980b7c4c61"
            ]
        ]
    },
    {
        "id": "20476446f6d06eb6",
        "type": "change",
        "z": "759e4c62c23869e9",
        "name": "type",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.type",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1070,
        "y": 4260,
        "wires": [
            [
                "1936f2ea72b7d5fc",
                "836fd0bc7099f9d9",
                "854bcceff027a416"
            ]
        ]
    },
    {
        "id": "daeb5cd388690253",
        "type": "ui_text",
        "z": "759e4c62c23869e9",
        "group": "6e8e604f8cdc1fbd",
        "order": 1,
        "width": 8,
        "height": 1,
        "name": "",
        "label": "id:",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1250,
        "y": 4140,
        "wires": []
    },
    {
        "id": "b0c7b2980b7c4c61",
        "type": "ui_text",
        "z": "759e4c62c23869e9",
        "group": "6e8e604f8cdc1fbd",
        "order": 4,
        "width": 8,
        "height": 1,
        "name": "",
        "label": "state:",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1250,
        "y": 4200,
        "wires": []
    },
    {
        "id": "1936f2ea72b7d5fc",
        "type": "ui_text",
        "z": "759e4c62c23869e9",
        "group": "6e8e604f8cdc1fbd",
        "order": 3,
        "width": 8,
        "height": 1,
        "name": "",
        "label": "type",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1250,
        "y": 4260,
        "wires": []
    },
    {
        "id": "1c8793185961502b",
        "type": "change",
        "z": "759e4c62c23869e9",
        "name": "0",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.0",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1070,
        "y": 4380,
        "wires": [
            [
                "e0729682b9a0213b",
                "cc9c226522c99ea1"
            ]
        ]
    },
    {
        "id": "85bba2204c76a235",
        "type": "change",
        "z": "759e4c62c23869e9",
        "name": "1",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.1",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1070,
        "y": 4520,
        "wires": [
            [
                "b90c45f939433dc0",
                "86b49ae0d8248eab"
            ]
        ]
    },
    {
        "id": "e0729682b9a0213b",
        "type": "change",
        "z": "759e4c62c23869e9",
        "name": "ts",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.ts",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1310,
        "y": 4380,
        "wires": [
            [
                "ae0c55e8dde4f660"
            ]
        ]
    },
    {
        "id": "b90c45f939433dc0",
        "type": "change",
        "z": "759e4c62c23869e9",
        "name": "ts",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.ts",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1310,
        "y": 4520,
        "wires": [
            [
                "60c9c02244feb034"
            ]
        ]
    },
    {
        "id": "813294d60835c3e5",
        "type": "mqtt in",
        "z": "759e4c62c23869e9",
        "name": "",
        "topic": "f/i/stock",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "fa600c20.8a9c9",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 310,
        "y": 2600,
        "wires": [
            [
                "806a2a1b287d497c"
            ]
        ]
    },
    {
        "id": "6b53ce7596314845",
        "type": "inject",
        "z": "759e4c62c23869e9",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "[{\"location\":\"A1\",\"workpiece\":{\"id\":\"045da192186581\",\"state\":\"RAW\",\"type\":\"WHITE\"}},{\"location\":\"A2\",\"workpiece\":{\"id\":\"045c9692186581\",\"state\":\"RAW\",\"type\":\"WHITE\"}},{\"location\":\"A3\",\"workpiece\":null},{\"location\":\"B1\",\"workpiece\":null},{\"location\":\"B2\",\"workpiece\":{\"id\":\"040aa692186580\",\"state\":\"RAW\",\"type\":\"BLUE\"}},{\"location\":\"B3\",\"workpiece\":null},{\"location\":\"C1\",\"workpiece\":{\"id\":\"045da892186581\",\"state\":\"RAW\",\"type\":\"WHITE\"}},{\"location\":\"C2\",\"workpiece\":{\"id\":\"041ca792186581\",\"state\":\"RAW\",\"type\":\"WHITE\"}},{\"location\":\"C3\",\"workpiece\":null}]",
        "payloadType": "json",
        "x": 310,
        "y": 2380,
        "wires": [
            [
                "59a489a889025f66",
                "e0049fd56d7871d1",
                "bdbc63ee879a616c",
                "d73f20980d6b775e"
            ]
        ]
    },
    {
        "id": "59a489a889025f66",
        "type": "function",
        "z": "759e4c62c23869e9",
        "name": "Stock count BLUE",
        "func": "var input = msg.payload; // Den Input erhalten\n\nvar count = 0; // Zähler für das Vorkommen von \"BLUE\" initialisieren\n\n// Durch jede Position im Input-Array iterieren\nfor (var i = 0; i < input.length; i++) {\n    // Überprüfen, ob das Workpiece nicht null ist und der Typ \"BLUE\" ist\n    if (input[i].workpiece && input[i].workpiece.type === \"BLUE\") {\n        count++; // Wenn ja, erhöhe den Zähler um eins\n    }\n}\n\n// Die Anzahl der Vorkommen von \"BLUE\" als Payload ausgeben\nmsg.payload = count;\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 2420,
        "wires": [
            [
                "56144e9814534707",
                "4f4e20226877d340",
                "d646371d71d812a2"
            ]
        ]
    },
    {
        "id": "e0049fd56d7871d1",
        "type": "function",
        "z": "759e4c62c23869e9",
        "name": "Stock count RED",
        "func": "var input = msg.payload; // Den Input erhalten\n\nvar count = 0; // Zähler für das Vorkommen von \"BLUE\" initialisieren\n\n// Durch jede Position im Input-Array iterieren\nfor (var i = 0; i < input.length; i++) {\n    // Überprüfen, ob das Workpiece nicht null ist und der Typ \"BLUE\" ist\n    if (input[i].workpiece && input[i].workpiece.type === \"RED\") {\n        count++; // Wenn ja, erhöhe den Zähler um eins\n    }\n}\n\n// Die Anzahl der Vorkommen von \"BLUE\" als Payload ausgeben\nmsg.payload = count;\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 2600,
        "wires": [
            [
                "52fe5b3717bb1ed8",
                "b1c00a1fafbc934d",
                "356219d7eec4b592"
            ]
        ]
    },
    {
        "id": "bdbc63ee879a616c",
        "type": "function",
        "z": "759e4c62c23869e9",
        "name": "Stock count WHITE",
        "func": "var input = msg.payload; // Den Input erhalten\n\nvar count = 0; // Zähler für das Vorkommen von \"BLUE\" initialisieren\n\n// Durch jede Position im Input-Array iterieren\nfor (var i = 0; i < input.length; i++) {\n    // Überprüfen, ob das Workpiece nicht null ist und der Typ \"BLUE\" ist\n    if (input[i].workpiece && input[i].workpiece.type === \"WHITE\") {\n        count++; // Wenn ja, erhöhe den Zähler um eins\n    }\n}\n\n// Die Anzahl der Vorkommen von \"BLUE\" als Payload ausgeben\nmsg.payload = count;\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 2780,
        "wires": [
            [
                "9f34c3318c05998e",
                "15595ef9308cdd93",
                "0e4b4e79754c78c4"
            ]
        ]
    },
    {
        "id": "56144e9814534707",
        "type": "ui_text",
        "z": "759e4c62c23869e9",
        "group": "004a193427ad611c",
        "order": 8,
        "width": 4,
        "height": 1,
        "name": "",
        "label": "Blue in stock:",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1110,
        "y": 2460,
        "wires": []
    },
    {
        "id": "52fe5b3717bb1ed8",
        "type": "ui_text",
        "z": "759e4c62c23869e9",
        "group": "004a193427ad611c",
        "order": 9,
        "width": 4,
        "height": 1,
        "name": "",
        "label": "Red in stock:",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1110,
        "y": 2640,
        "wires": []
    },
    {
        "id": "9f34c3318c05998e",
        "type": "ui_text",
        "z": "759e4c62c23869e9",
        "group": "004a193427ad611c",
        "order": 7,
        "width": 4,
        "height": 1,
        "name": "",
        "label": "White in Stock:",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1120,
        "y": 2820,
        "wires": []
    },
    {
        "id": "8e7d9c9cf2d948af",
        "type": "ui_template",
        "z": "759e4c62c23869e9",
        "group": "004a193427ad611c",
        "name": "Blue icon",
        "order": 2,
        "width": 4,
        "height": 2,
        "format": "<!-- Äußeres DIV-Element mit Spaltenlayout -->\n<div layout=\"column\" layout-align=\"start start\" style=\"padding: 0 6px;\">\n    <!-- Inneres DIV-Element mit Zeilenlayout -->\n    <div layout=\"row\" layout-align=\"space-between center\">\n        <!-- Farbe des Quadrats ändern -->\n        <font color=\"blue\">\n            <!-- Quadratisches Symbol -->\n            <i class=\"fa fa-square\" aria-hidden=\"true\" style=\"background-color: grey; padding: 4px; font-size: 44px;\"></i>\n        </font>\n    </div>\n</div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1100,
        "y": 2500,
        "wires": [
            []
        ]
    },
    {
        "id": "abd802cd39e4b1de",
        "type": "ui_template",
        "z": "759e4c62c23869e9",
        "group": "004a193427ad611c",
        "name": "Red icon",
        "order": 3,
        "width": 4,
        "height": 2,
        "format": "<div layout=\"column\" layout-align=\"start start\" style=\"padding: 0 6px;\">\n    <div layout=\"row\" layout-align=\"space-between center\">\n        <font color=\"red\">\n            <i class=\"fa fa-square\" aria-hidden=\"true\" style=\"background-color: grey; padding: 4px; font-size: 44px;\"></i>\n        </font>\n    </div>\n</div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1100,
        "y": 2680,
        "wires": [
            []
        ]
    },
    {
        "id": "901b287096b37101",
        "type": "ui_template",
        "z": "759e4c62c23869e9",
        "group": "004a193427ad611c",
        "name": "White icon",
        "order": 1,
        "width": 4,
        "height": 2,
        "format": "<div layout=\"column\" layout-align=\"start start\" style=\"padding: 0 6px;\">\n    <div layout=\"row\" layout-align=\"space-between center\">\n        <font color=\"white\">\n            <i class=\"fa fa-square\" aria-hidden=\"true\" style=\"background-color: grey; padding: 4px; font-size: 44px;\"></i>\n        </font>\n    </div>\n</div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1110,
        "y": 2860,
        "wires": [
            []
        ]
    },
    {
        "id": "4f4e20226877d340",
        "type": "ui_template",
        "z": "759e4c62c23869e9",
        "group": "004a193427ad611c",
        "name": "Orderable?",
        "order": 5,
        "width": 4,
        "height": 1,
        "format": "<md-card>\n    <!-- Äußeres DIV-Element mit Zeilenlayout -->\n    <div layout=\"row\" layout-align=\"start center\">\n        <!-- Bedingte Anzeige des grünen Häkchens -->\n        <i ng-if=\"msg.payload > 0\" class=\"fa fa-check-circle-o\" aria-hidden=\"true\" style=\"color: green;\"></i>\n        <!-- Bedingte Anzeige des roten Kreuzes -->\n        <i ng-if=\"msg.payload <= 0\" class=\"fa fa-times-circle-o\" aria-hidden=\"true\" style=\"color: red;\"></i>\n        <!-- Container für den Text -->\n        <div style=\"margin-left: 10px;\">\n            <!-- Text \"in stock\" in grüner Farbe, wenn msg.payload > 0 -->\n            <span ng-if=\"msg.payload > 0\"><font color=\"green\">in stock</font></span>\n            <!-- Text \"not in stock\" in roter Farbe, wenn msg.payload <= 0 -->\n            <span ng-if=\"msg.payload <= 0\"><font color=\"red\">not in stock</font></span>\n        </div>\n    </div>\n</md-card>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1110,
        "y": 2540,
        "wires": [
            []
        ]
    },
    {
        "id": "b1c00a1fafbc934d",
        "type": "ui_template",
        "z": "759e4c62c23869e9",
        "group": "004a193427ad611c",
        "name": "Orderable?",
        "order": 6,
        "width": 4,
        "height": 1,
        "format": "<md-card>\n    <div layout=\"row\" layout-align=\"start center\">\n        <i ng-if=\"msg.payload > 0\" class=\"fa fa-check-circle-o\" aria-hidden=\"true\" style=\"color: green;\"></i>\n        <i ng-if=\"msg.payload <= 0\" class=\"fa fa-times-circle-o\" aria-hidden=\"true\" style=\"color: red;\"></i>\n        <div style=\"margin-left: 10px;\">\n            <span ng-if=\"msg.payload > 0\"><font color=\"green\">in stock</font></span>\n            <span ng-if=\"msg.payload <= 0\"><font color=\"red\">not in stock</font></span>\n        </div>\n    </div>\n</md-card>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1110,
        "y": 2720,
        "wires": [
            []
        ]
    },
    {
        "id": "15595ef9308cdd93",
        "type": "ui_template",
        "z": "759e4c62c23869e9",
        "group": "004a193427ad611c",
        "name": "Orderable?",
        "order": 4,
        "width": 4,
        "height": 1,
        "format": "<md-card>\n    <div layout=\"row\" layout-align=\"start center\">\n        <i ng-if=\"msg.payload > 0\" class=\"fa fa-check-circle-o\" aria-hidden=\"true\" style=\"color: green;\"></i>\n        <i ng-if=\"msg.payload <= 0\" class=\"fa fa-times-circle-o\" aria-hidden=\"true\" style=\"color: red;\"></i>\n        <div style=\"margin-left: 10px;\">\n            <span ng-if=\"msg.payload > 0\"><font color=\"green\">in stock</font></span>\n            <span ng-if=\"msg.payload <= 0\"><font color=\"red\">not in stock</font></span>\n        </div>\n    </div>\n</md-card>",
        "storeOutMessages": true,
        "fwdInMessages": false,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1110,
        "y": 2900,
        "wires": [
            []
        ]
    },
    {
        "id": "d646371d71d812a2",
        "type": "debug",
        "z": "759e4c62c23869e9",
        "name": "debug 18",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1100,
        "y": 2420,
        "wires": []
    },
    {
        "id": "0e4b4e79754c78c4",
        "type": "debug",
        "z": "759e4c62c23869e9",
        "name": "debug 19",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1100,
        "y": 2780,
        "wires": []
    },
    {
        "id": "356219d7eec4b592",
        "type": "debug",
        "z": "759e4c62c23869e9",
        "name": "debug 20",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1100,
        "y": 2600,
        "wires": []
    },
    {
        "id": "836fd0bc7099f9d9",
        "type": "debug",
        "z": "759e4c62c23869e9",
        "name": "debug 21",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1460,
        "y": 4220,
        "wires": []
    },
    {
        "id": "854bcceff027a416",
        "type": "ui_template",
        "z": "759e4c62c23869e9",
        "group": "6e8e604f8cdc1fbd",
        "name": "Icon in color",
        "order": 2,
        "width": 4,
        "height": 3,
        "format": "<!-- Äußeres DIV-Element mit Spaltenlayout -->\n<div layout=\"column\" layout-align=\"start start\" style=\"padding: 0 6px;\">\n    <!-- Inneres DIV-Element mit Zeilenlayout -->\n    <div layout=\"row\" layout-align=\"space-between center\">\n        <!-- Farbe des Quadrats ändern -->\n        <font\n            color=\"{{msg.payload === 'WHITE' ? 'white' : (msg.payload === 'RED' ? 'red' : (msg.payload === 'BLUE' ? 'blue' : 'transparent'))}}\">\n            <!-- Quadratisches Symbol -->\n            <i class=\"fa fa-square\" aria-hidden=\"true\" style=\"background-color: grey; padding: 4px; font-size: 44px;\"></i>\n        </font>\n    </div>\n</div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1270,
        "y": 4300,
        "wires": [
            []
        ]
    },
    {
        "id": "5b42bdc992c2f961",
        "type": "change",
        "z": "759e4c62c23869e9",
        "name": "2",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.2",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1070,
        "y": 4660,
        "wires": [
            [
                "a67afef938fb681a",
                "3fc8252b73ae03b2"
            ]
        ]
    },
    {
        "id": "a67afef938fb681a",
        "type": "change",
        "z": "759e4c62c23869e9",
        "name": "ts",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.ts",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1310,
        "y": 4660,
        "wires": [
            [
                "d3b407168d12d07e"
            ]
        ]
    },
    {
        "id": "c7afd3b605b8dccc",
        "type": "change",
        "z": "759e4c62c23869e9",
        "name": "3",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.3",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1070,
        "y": 4800,
        "wires": [
            [
                "c3d0914c79f3c7e6",
                "c14e57ae4f858c34"
            ]
        ]
    },
    {
        "id": "c3d0914c79f3c7e6",
        "type": "change",
        "z": "759e4c62c23869e9",
        "name": "ts",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.ts",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1310,
        "y": 4800,
        "wires": [
            [
                "22a48d01d03b8e85"
            ]
        ]
    },
    {
        "id": "1b6e96f4882cbcea",
        "type": "change",
        "z": "759e4c62c23869e9",
        "name": "4",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.4",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1070,
        "y": 4940,
        "wires": [
            [
                "260df3cfbdbd8634",
                "2dfb90360a151979"
            ]
        ]
    },
    {
        "id": "260df3cfbdbd8634",
        "type": "change",
        "z": "759e4c62c23869e9",
        "name": "ts",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.ts",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1310,
        "y": 4940,
        "wires": [
            [
                "97faa824b2f2b7d9"
            ]
        ]
    },
    {
        "id": "6ebf40a09bcfc734",
        "type": "change",
        "z": "759e4c62c23869e9",
        "name": "5",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.5",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1070,
        "y": 5080,
        "wires": [
            [
                "d4a2f707e95ea48a",
                "04a4a631ab24306e"
            ]
        ]
    },
    {
        "id": "d4a2f707e95ea48a",
        "type": "change",
        "z": "759e4c62c23869e9",
        "name": "ts",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.ts",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1310,
        "y": 5080,
        "wires": [
            [
                "437f042fc7d95e2f"
            ]
        ]
    },
    {
        "id": "701c6de9cba992bb",
        "type": "debug",
        "z": "759e4c62c23869e9",
        "name": "debug 22",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 740,
        "y": 2540,
        "wires": []
    },
    {
        "id": "d73f20980d6b775e",
        "type": "debug",
        "z": "759e4c62c23869e9",
        "name": "debug 23",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 740,
        "y": 2380,
        "wires": []
    },
    {
        "id": "806a2a1b287d497c",
        "type": "function",
        "z": "759e4c62c23869e9",
        "name": "stockitems filtern",
        "func": "// Extrahiere den Teil mit den eckigen Klammern aus der Nachricht\nvar stockItems = msg.payload.stockItems;\n\n// Erstelle eine neue Nachricht mit dem extrahierten Teil\nmsg.payload = stockItems;\n\n// Leite die Nachricht weiter\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 470,
        "y": 2600,
        "wires": [
            [
                "e0049fd56d7871d1",
                "bdbc63ee879a616c",
                "59a489a889025f66"
            ]
        ]
    },
    {
        "id": "9f2968f85da8fdad",
        "type": "mqtt in",
        "z": "759e4c62c23869e9",
        "name": "",
        "topic": "f/i/nfc/ds",
        "qos": "0",
        "datatype": "json",
        "broker": "fa600c20.8a9c9",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 260,
        "y": 4060,
        "wires": [
            [
                "eeb29cdcfbe9bce1",
                "461e6206a6001c88",
                "375737fcc16fd685"
            ]
        ]
    },
    {
        "id": "375737fcc16fd685",
        "type": "debug",
        "z": "759e4c62c23869e9",
        "name": "debug 24",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 560,
        "y": 4060,
        "wires": []
    },
    {
        "id": "7b0c008637e4806f",
        "type": "change",
        "z": "759e4c62c23869e9",
        "name": "6",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.6",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1070,
        "y": 5220,
        "wires": [
            [
                "3258bd92aa101fc0",
                "3ac762309539fd31"
            ]
        ]
    },
    {
        "id": "3258bd92aa101fc0",
        "type": "change",
        "z": "759e4c62c23869e9",
        "name": "ts",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.ts",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1310,
        "y": 5220,
        "wires": [
            [
                "c9ecb8f46ff87971"
            ]
        ]
    },
    {
        "id": "0f10779948fdbbbd",
        "type": "change",
        "z": "759e4c62c23869e9",
        "name": "7",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.7",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1070,
        "y": 5360,
        "wires": [
            [
                "169a7d4b44f75536",
                "d5c3704a05f1cd5f"
            ]
        ]
    },
    {
        "id": "169a7d4b44f75536",
        "type": "change",
        "z": "759e4c62c23869e9",
        "name": "ts",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.ts",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1310,
        "y": 5360,
        "wires": [
            [
                "6924cc8609a1bf56"
            ]
        ]
    },
    {
        "id": "0fb99c071abfd935",
        "type": "ui_text",
        "z": "759e4c62c23869e9",
        "group": "348aa8362b207fd6",
        "order": 11,
        "width": 6,
        "height": 1,
        "name": "",
        "label": "Multi-Processing Station with Oven",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "Courier,monospace",
        "fontSize": 16,
        "color": "#000000",
        "x": 1320,
        "y": 3120,
        "wires": []
    },
    {
        "id": "99b4a8fd36fad454",
        "type": "ui_text",
        "z": "759e4c62c23869e9",
        "group": "348aa8362b207fd6",
        "order": 5,
        "width": 6,
        "height": 1,
        "name": "",
        "label": "High-Bay Warehouse",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1280,
        "y": 3240,
        "wires": []
    },
    {
        "id": "9be493ad675bb201",
        "type": "ui_text",
        "z": "759e4c62c23869e9",
        "group": "348aa8362b207fd6",
        "order": 2,
        "width": 6,
        "height": 1,
        "name": "",
        "label": "Vacuum Gripper Robot",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1280,
        "y": 3380,
        "wires": []
    },
    {
        "id": "475d9961bde9a2f8",
        "type": "ui_text",
        "z": "759e4c62c23869e9",
        "group": "348aa8362b207fd6",
        "order": 8,
        "width": 6,
        "height": 1,
        "name": "",
        "label": " Sorting Line with Color Detection",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1320,
        "y": 3460,
        "wires": []
    },
    {
        "id": "f7c6d1f4cfe759aa",
        "type": "ui_template",
        "z": "759e4c62c23869e9",
        "group": "348aa8362b207fd6",
        "name": "activeMPO",
        "order": 12,
        "width": 4,
        "height": 1,
        "format": "<div layout=\"column\" layout-align=\"start start\" style=\"padding: 0 6px;\">\n    <!-- Äußeres DIV-Element mit Spaltenlayout -->\n    <div layout=\"row\" layout-align=\"space-between center\">\n        <p></p> <!-- Text dauerhaft einfügen-->\n\n        <!-- Grauer Kreis, wenn msg.payload === 0 -->\n        <font ng-if=\"msg.payload === 0\" color=\"transparent\">\n            <i class=\"fa fa-circle\" aria-hidden=\"true\" style=\"background-color: grey; padding: 2px;\"></i> // grey\n        </font>\n\n        <!-- Default-Kreis (MediumSeaGreen), wenn msg.payload === 1 -->\n        <font ng-if=\"msg.payload === 1\" color=\"MediumSeaGreen\"> \n            <i class=\"fa fa-circle\" aria-hidden=\"true\" style=\"background-color: grey; padding: 2px;\"></i>\n        </font>\n\n        <!-- Aktiver Kreis (Yellow), wenn msg.payload === 2 -->\n        <font ng-if=\"msg.payload === 2\" color=\"Yellow\"> \n            <i class=\"fa fa-circle\" aria-hidden=\"true\" style=\"background-color: grey; padding: 2px;\"></i>\n        </font>\n\n        <!-- Fehlerhafter Kreis (Rot), wenn msg.payload === 4 -->\n        <font ng-if=\"msg.payload === 4\" color=\"RED\">   \n            <i class=\"fa fa-circle\" aria-hidden=\"true\" style=\"background-color: grey; padding: 2px;\"></i>\n        </font>\n    </div>\n</div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 930,
        "y": 3120,
        "wires": [
            []
        ]
    },
    {
        "id": "296bf26f01c8dc55",
        "type": "ui_text",
        "z": "759e4c62c23869e9",
        "group": "348aa8362b207fd6",
        "order": 4,
        "width": 2,
        "height": 1,
        "name": "",
        "label": "HBW:",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1090,
        "y": 3240,
        "wires": []
    },
    {
        "id": "aa52de4b4dd8f452",
        "type": "debug",
        "z": "759e4c62c23869e9",
        "name": "debug 27",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 460,
        "y": 3080,
        "wires": []
    },
    {
        "id": "7ef5d0aadc2783aa",
        "type": "change",
        "z": "759e4c62c23869e9",
        "name": "code",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.code",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 710,
        "y": 3120,
        "wires": [
            [
                "f7c6d1f4cfe759aa",
                "179a4442636f915d"
            ]
        ]
    },
    {
        "id": "179a4442636f915d",
        "type": "debug",
        "z": "759e4c62c23869e9",
        "name": "debug 28",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 920,
        "y": 3060,
        "wires": []
    },
    {
        "id": "5fb8cda4d85c5709",
        "type": "inject",
        "z": "759e4c62c23869e9",
        "name": "inject: 0",
        "props": [
            {
                "p": "payload.success",
                "v": "true",
                "vt": "str"
            },
            {
                "p": "payload.response",
                "v": "{\"active\":0,\"code\":1,\"description\":\"\",\"station\":\"mpo\",\"ts\":\"2000-01-01T01:30:07.638Z\"}",
                "vt": "json"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 290,
        "y": 3040,
        "wires": [
            []
        ]
    },
    {
        "id": "5e3a071c36487047",
        "type": "ui_template",
        "z": "759e4c62c23869e9",
        "group": "348aa8362b207fd6",
        "name": "activeHBW",
        "order": 6,
        "width": 4,
        "height": 1,
        "format": "<div layout=\"column\" layout-align=\"start start\" style=\"padding: 0 6px;\">\n    <div layout=\"row\" layout-align=\"space-between center\">\n        <p></p> <!-- Text dauerhaft einfügen-->\n        <font ng-if=\"msg.payload === 0\" color=\"transparent\">\n            <i class=\"fa fa-circle\" aria-hidden=\"true\" style=\"background-color: grey; padding: 2px;\"></i> // grey\n        </font>\n        <font ng-if=\"msg.payload === 1\" color=\"MediumSeaGreen\">\n            <i class=\"fa fa-circle\" aria-hidden=\"true\" style=\"background-color: grey; padding: 2px;\"></i>\n        </font>\n        <font ng-if=\"msg.payload === 2\" color=\"Yellow\">\n            <i class=\"fa fa-circle\" aria-hidden=\"true\" style=\"background-color: grey; padding: 2px;\"></i>\n        </font>\n        <font ng-if=\"msg.payload === 4\" color=\"RED\">\n            <i class=\"fa fa-circle\" aria-hidden=\"true\" style=\"background-color: grey; padding: 2px;\"></i>\n        </font>\n    </div>\n</div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 930,
        "y": 3240,
        "wires": [
            []
        ]
    },
    {
        "id": "70252d4015282c67",
        "type": "ui_template",
        "z": "759e4c62c23869e9",
        "group": "348aa8362b207fd6",
        "name": "activeVGR",
        "order": 3,
        "width": 4,
        "height": 1,
        "format": "<div layout=\"column\" layout-align=\"start start\" style=\"padding: 0 6px;\">\n    <div layout=\"row\" layout-align=\"space-between center\">\n        <p></p> <!-- Text dauerhaft einfügen-->\n        <font ng-if=\"msg.payload === 0\" color=\"transparent\">\n            <i class=\"fa fa-circle\" aria-hidden=\"true\" style=\"background-color: grey; padding: 2px;\"></i> // grey\n        </font>\n        <font ng-if=\"msg.payload === 1\" color=\"MediumSeaGreen\">\n            <i class=\"fa fa-circle\" aria-hidden=\"true\" style=\"background-color: grey; padding: 2px;\"></i>\n        </font>\n        <font ng-if=\"msg.payload === 2\" color=\"Yellow\">\n            <i class=\"fa fa-circle\" aria-hidden=\"true\" style=\"background-color: grey; padding: 2px;\"></i>\n        </font>\n        <font ng-if=\"msg.payload === 4\" color=\"RED\">\n            <i class=\"fa fa-circle\" aria-hidden=\"true\" style=\"background-color: grey; padding: 2px;\"></i>\n        </font>\n    </div>\n</div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 930,
        "y": 3380,
        "wires": [
            []
        ]
    },
    {
        "id": "50029f068c19265d",
        "type": "ui_template",
        "z": "759e4c62c23869e9",
        "group": "348aa8362b207fd6",
        "name": "activeSLD",
        "order": 9,
        "width": 4,
        "height": 1,
        "format": "<div layout=\"column\" layout-align=\"start start\" style=\"padding: 0 6px;\">\n    <div layout=\"row\" layout-align=\"space-between center\">\n        <p></p> <!-- Text dauerhaft einfügen-->\n        <font ng-if=\"msg.payload === 0\" color=\"transparent\">\n            <i class=\"fa fa-circle\" aria-hidden=\"true\" style=\"background-color: grey; padding: 2px;\"></i> // grey\n        </font>\n        <font ng-if=\"msg.payload === 1\" color=\"MediumSeaGreen\">\n            <i class=\"fa fa-circle\" aria-hidden=\"true\" style=\"background-color: grey; padding: 2px;\"></i>\n        </font>\n        <font ng-if=\"msg.payload === 2\" color=\"Yellow\">\n            <i class=\"fa fa-circle\" aria-hidden=\"true\" style=\"background-color: grey; padding: 2px;\"></i>\n        </font>\n        <font ng-if=\"msg.payload === 4\" color=\"RED\">\n            <i class=\"fa fa-circle\" aria-hidden=\"true\" style=\"background-color: grey; padding: 2px;\"></i>\n        </font>\n    </div>\n</div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 930,
        "y": 3460,
        "wires": [
            []
        ]
    },
    {
        "id": "f40e3140ef973779",
        "type": "mqtt out",
        "z": "759e4c62c23869e9",
        "name": "",
        "topic": "c/cam",
        "qos": "0",
        "retain": "",
        "broker": "fa600c20.8a9c9",
        "x": 910,
        "y": 1160,
        "wires": []
    },
    {
        "id": "100ab682a5fbb1b8",
        "type": "inject",
        "z": "759e4c62c23869e9",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"on\":true,\"fps\":2}",
        "payloadType": "json",
        "x": 340,
        "y": 1160,
        "wires": [
            [
                "b0aa1fd40d4e6dc6"
            ]
        ]
    },
    {
        "id": "590c4c0c2d480668",
        "type": "debug",
        "z": "759e4c62c23869e9",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 930,
        "y": 1120,
        "wires": []
    },
    {
        "id": "b0aa1fd40d4e6dc6",
        "type": "function",
        "z": "759e4c62c23869e9",
        "name": "+ts UTC ISO8301",
        "func": "// Generiere einen Zeitstempel im ISO-8601-Format\nvar ts = new Date().toISOString();\n\n// Füge den Zeitstempel zum Payload-Objekt der Nachricht hinzu\nmsg.payload[\"ts\"] = ts;\n\n// Konvertiere das Payload-Objekt in einen JSON-String\nmsg.payload = JSON.stringify(msg.payload);\n\n// Gib die modifizierte Nachricht zurück\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 1200,
        "wires": [
            [
                "f40e3140ef973779",
                "590c4c0c2d480668"
            ]
        ]
    },
    {
        "id": "b1585acaed9318f1",
        "type": "inject",
        "z": "759e4c62c23869e9",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"on\":false,\"fps\":2}",
        "payloadType": "json",
        "x": 350,
        "y": 1220,
        "wires": [
            [
                "9a04459d5702bfa9"
            ]
        ]
    },
    {
        "id": "9a04459d5702bfa9",
        "type": "function",
        "z": "759e4c62c23869e9",
        "name": "+ts UTC ISO8301",
        "func": "var ts = new Date().toISOString();\nmsg.payload[\"ts\"] = ts;\nmsg.payload = JSON.stringify(msg.payload);\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 1220,
        "wires": [
            [
                "f40e3140ef973779",
                "590c4c0c2d480668"
            ]
        ]
    },
    {
        "id": "cfe5bbd73a6664a2",
        "type": "ui_button",
        "z": "759e4c62c23869e9",
        "name": "",
        "group": "8ec1e854ed31c61e",
        "order": 4,
        "width": 1,
        "height": 1,
        "passthru": false,
        "label": "off",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "{\"on\":false,\"fps\":2}",
        "payloadType": "json",
        "topic": "topic",
        "topicType": "str",
        "x": 310,
        "y": 1260,
        "wires": [
            [
                "9a04459d5702bfa9"
            ]
        ]
    },
    {
        "id": "6d0d1517b6fe7456",
        "type": "ui_button",
        "z": "759e4c62c23869e9",
        "name": "",
        "group": "8ec1e854ed31c61e",
        "order": 2,
        "width": 1,
        "height": 1,
        "passthru": false,
        "label": "on",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "{\"on\":true,\"fps\":2}",
        "payloadType": "json",
        "topic": "topic",
        "topicType": "str",
        "x": 310,
        "y": 1300,
        "wires": [
            [
                "b0aa1fd40d4e6dc6"
            ]
        ]
    },
    {
        "id": "cc9c226522c99ea1",
        "type": "change",
        "z": "759e4c62c23869e9",
        "name": "code",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.code",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1310,
        "y": 4420,
        "wires": [
            [
                "6c4b3f40c90590c4"
            ]
        ]
    },
    {
        "id": "6c4b3f40c90590c4",
        "type": "function",
        "z": "759e4c62c23869e9",
        "name": "function 12",
        "func": "// für Code(100-800) entsprechende Nachricht anzeigen\nif (msg.payload === 100) {\n    msg.payload = \"Delivery of raw materials:\"; // Anlieferung der Rohware, code: 100\n} else if (msg.payload === 200) {\n    msg.payload = \"Quality Assurance Delivery:\"; // Quality Assurance Delivery, code: 200\n} else if (msg.payload === 300) {\n    msg.payload = \"Storage:\"; // \"Einlagerung, code: 300\"\n} else if (msg.payload === 400) {\n    msg.payload = \"400\";\n} else if (msg.payload === 500) {\n    msg.payload = \"500\";\n} else if (msg.payload === 600) {\n    msg.payload = \"E600\";\n} else if (msg.payload === 700) {\n    msg.payload = \"Quality control\"; // Qualitätskontrolle, code: 700\n} else if (msg.payload === 800) {\n    msg.payload = \"Shipping of goods:\"; // Auslieferung, code: 800\n} else {\n    // Für den Fall, dass keine der Bedingungen erfüllt ist\n    msg.payload = \"\";\n}\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1490,
        "y": 4420,
        "wires": [
            [
                "d9127c0dff81be1b"
            ]
        ]
    },
    {
        "id": "d9127c0dff81be1b",
        "type": "ui_text",
        "z": "759e4c62c23869e9",
        "group": "6e8e604f8cdc1fbd",
        "order": 7,
        "width": 6,
        "height": 1,
        "name": "Historie0 Text",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1720,
        "y": 4420,
        "wires": []
    },
    {
        "id": "1f52bc23907d393d",
        "type": "ui_text",
        "z": "759e4c62c23869e9",
        "group": "6e8e604f8cdc1fbd",
        "order": 8,
        "width": 6,
        "height": 1,
        "name": "Historie0 ts",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1710,
        "y": 4380,
        "wires": []
    },
    {
        "id": "86b49ae0d8248eab",
        "type": "change",
        "z": "759e4c62c23869e9",
        "name": "code",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.code",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1310,
        "y": 4560,
        "wires": [
            [
                "05534f6de3b7be53"
            ]
        ]
    },
    {
        "id": "05534f6de3b7be53",
        "type": "function",
        "z": "759e4c62c23869e9",
        "name": "function 13",
        "func": "if (msg.payload === 100) {\n    msg.payload = \"Delivery of raw materials:\"; // Anlieferung der Rohware, code: 100\n} else if (msg.payload === 200) {\n    msg.payload = \"Quality Assurance Delivery:\"; // Quality Assurance Delivery, code: 200\n} else if (msg.payload === 300) {\n    msg.payload = \"Storage:\"; // \"Einlagerung, code: 300\"\n} else if (msg.payload === 400) {\n    msg.payload = \"400\";\n} else if (msg.payload === 500) {\n    msg.payload = \"500\";\n} else if (msg.payload === 600) {\n    msg.payload = \"E600\";\n} else if (msg.payload === 700) {\n    msg.payload = \"Quality control\"; // Qualitätskontrolle, code: 700\n} else if (msg.payload === 800) {\n    msg.payload = \"Shipping of goods:\"; // Auslieferung, code: 800\n} else {\n    // Für den Fall, dass keine der Bedingungen erfüllt ist\n    msg.payload = \"\";\n}\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1490,
        "y": 4560,
        "wires": [
            [
                "9bb9d1820380fe57"
            ]
        ]
    },
    {
        "id": "9bb9d1820380fe57",
        "type": "ui_text",
        "z": "759e4c62c23869e9",
        "group": "6e8e604f8cdc1fbd",
        "order": 9,
        "width": 6,
        "height": 1,
        "name": "Historie1 Text",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1720,
        "y": 4560,
        "wires": []
    },
    {
        "id": "3fc8252b73ae03b2",
        "type": "change",
        "z": "759e4c62c23869e9",
        "name": "code",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.code",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1310,
        "y": 4700,
        "wires": [
            [
                "cadef115ff9e01d3"
            ]
        ]
    },
    {
        "id": "cadef115ff9e01d3",
        "type": "function",
        "z": "759e4c62c23869e9",
        "name": "function 14",
        "func": "if (msg.payload === 100) {\n    msg.payload = \"Delivery of raw materials:\"; // Anlieferung der Rohware, code: 100\n} else if (msg.payload === 200) {\n    msg.payload = \"Quality Assurance Delivery:\"; // Quality Assurance Delivery, code: 200\n} else if (msg.payload === 300) {\n    msg.payload = \"Storage:\"; // \"Einlagerung, code: 300\"\n} else if (msg.payload === 400) {\n    msg.payload = \"400\";\n} else if (msg.payload === 500) {\n    msg.payload = \"500\";\n} else if (msg.payload === 600) {\n    msg.payload = \"E600\";\n} else if (msg.payload === 700) {\n    msg.payload = \"Quality control\"; // Qualitätskontrolle, code: 700\n} else if (msg.payload === 800) {\n    msg.payload = \"Shipping of goods:\"; // Auslieferung, code: 800\n} else {\n    // Für den Fall, dass keine der Bedingungen erfüllt ist\n    msg.payload = \"\";\n}\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1490,
        "y": 4700,
        "wires": [
            [
                "2cb69de970b01b98"
            ]
        ]
    },
    {
        "id": "2cb69de970b01b98",
        "type": "ui_text",
        "z": "759e4c62c23869e9",
        "group": "6e8e604f8cdc1fbd",
        "order": 11,
        "width": 6,
        "height": 1,
        "name": "Historie2 Text",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1720,
        "y": 4700,
        "wires": []
    },
    {
        "id": "c14e57ae4f858c34",
        "type": "change",
        "z": "759e4c62c23869e9",
        "name": "code",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.code",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1310,
        "y": 4840,
        "wires": [
            [
                "e426ad86e280d0f3"
            ]
        ]
    },
    {
        "id": "e426ad86e280d0f3",
        "type": "function",
        "z": "759e4c62c23869e9",
        "name": "function 15",
        "func": "if (msg.payload === 100) {\n    msg.payload = \"Delivery of raw materials:\"; // Anlieferung der Rohware, code: 100\n} else if (msg.payload === 200) {\n    msg.payload = \"Quality Assurance Delivery:\"; // Quality Assurance Delivery, code: 200\n} else if (msg.payload === 300) {\n    msg.payload = \"Storage:\"; // \"Einlagerung, code: 300\"\n} else if (msg.payload === 400) {\n    msg.payload = \"400\";\n} else if (msg.payload === 500) {\n    msg.payload = \"500\";\n} else if (msg.payload === 600) {\n    msg.payload = \"E600\";\n} else if (msg.payload === 700) {\n    msg.payload = \"Quality control\"; // Qualitätskontrolle, code: 700\n} else if (msg.payload === 800) {\n    msg.payload = \"Shipping of goods:\"; // Auslieferung, code: 800\n} else {\n    // Für den Fall, dass keine der Bedingungen erfüllt ist\n    msg.payload = \"\";\n}\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1490,
        "y": 4840,
        "wires": [
            [
                "f1c8cdadbf4375c4"
            ]
        ]
    },
    {
        "id": "f1c8cdadbf4375c4",
        "type": "ui_text",
        "z": "759e4c62c23869e9",
        "group": "6e8e604f8cdc1fbd",
        "order": 13,
        "width": 6,
        "height": 1,
        "name": "Historie3 Text",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1720,
        "y": 4840,
        "wires": []
    },
    {
        "id": "2dfb90360a151979",
        "type": "change",
        "z": "759e4c62c23869e9",
        "name": "code",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.code",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1310,
        "y": 4980,
        "wires": [
            [
                "6ead5a428f357c23"
            ]
        ]
    },
    {
        "id": "6ead5a428f357c23",
        "type": "function",
        "z": "759e4c62c23869e9",
        "name": "function 16",
        "func": "if (msg.payload === 100) {\n    msg.payload = \"Delivery of raw materials:\"; // Anlieferung der Rohware, code: 100\n} else if (msg.payload === 200) {\n    msg.payload = \"Quality Assurance Delivery:\"; // Quality Assurance Delivery, code: 200\n} else if (msg.payload === 300) {\n    msg.payload = \"Storage:\"; // \"Einlagerung, code: 300\"\n} else if (msg.payload === 400) {\n    msg.payload = \"400\";\n} else if (msg.payload === 500) {\n    msg.payload = \"500\";\n} else if (msg.payload === 600) {\n    msg.payload = \"E600\";\n} else if (msg.payload === 700) {\n    msg.payload = \"Quality control\"; // Qualitätskontrolle, code: 700\n} else if (msg.payload === 800) {\n    msg.payload = \"Shipping of goods:\"; // Auslieferung, code: 800\n} else {\n    // Für den Fall, dass keine der Bedingungen erfüllt ist\n    msg.payload = \"\";\n}\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1490,
        "y": 4980,
        "wires": [
            [
                "893d9784c4c812bd"
            ]
        ]
    },
    {
        "id": "893d9784c4c812bd",
        "type": "ui_text",
        "z": "759e4c62c23869e9",
        "group": "6e8e604f8cdc1fbd",
        "order": 15,
        "width": 6,
        "height": 1,
        "name": "Historie4 Text",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1720,
        "y": 4980,
        "wires": []
    },
    {
        "id": "04a4a631ab24306e",
        "type": "change",
        "z": "759e4c62c23869e9",
        "name": "code",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.code",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1310,
        "y": 5120,
        "wires": [
            [
                "bc6eacf38ecf6297"
            ]
        ]
    },
    {
        "id": "bc6eacf38ecf6297",
        "type": "function",
        "z": "759e4c62c23869e9",
        "name": "function 17",
        "func": "if (msg.payload === 100) {\n    msg.payload = \"Delivery of raw materials:\"; // Anlieferung der Rohware, code: 100\n} else if (msg.payload === 200) {\n    msg.payload = \"Quality Assurance Delivery:\"; // Quality Assurance Delivery, code: 200\n} else if (msg.payload === 300) {\n    msg.payload = \"Storage:\"; // \"Einlagerung, code: 300\"\n} else if (msg.payload === 400) {\n    msg.payload = \"400\";\n} else if (msg.payload === 500) {\n    msg.payload = \"500\";\n} else if (msg.payload === 600) {\n    msg.payload = \"E600\";\n} else if (msg.payload === 700) {\n    msg.payload = \"Quality control\"; // Qualitätskontrolle, code: 700\n} else if (msg.payload === 800) {\n    msg.payload = \"Shipping of goods:\"; // Auslieferung, code: 800\n} else {\n    // Für den Fall, dass keine der Bedingungen erfüllt ist\n    msg.payload = \"\";\n}\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1490,
        "y": 5120,
        "wires": [
            [
                "34668be071af89ad"
            ]
        ]
    },
    {
        "id": "34668be071af89ad",
        "type": "ui_text",
        "z": "759e4c62c23869e9",
        "d": true,
        "group": "6e8e604f8cdc1fbd",
        "order": 17,
        "width": 6,
        "height": 1,
        "name": "Historie5 Text",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1720,
        "y": 5120,
        "wires": []
    },
    {
        "id": "3ac762309539fd31",
        "type": "change",
        "z": "759e4c62c23869e9",
        "name": "code",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.code",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1310,
        "y": 5260,
        "wires": [
            [
                "422b25d506c135b4"
            ]
        ]
    },
    {
        "id": "422b25d506c135b4",
        "type": "function",
        "z": "759e4c62c23869e9",
        "name": "function 18",
        "func": "if (msg.payload === 100) {\n    msg.payload = \"Delivery of raw materials:\"; // Anlieferung der Rohware, code: 100\n} else if (msg.payload === 200) {\n    msg.payload = \"Quality Assurance Delivery:\"; // Quality Assurance Delivery, code: 200\n} else if (msg.payload === 300) {\n    msg.payload = \"Storage:\"; // \"Einlagerung, code: 300\"\n} else if (msg.payload === 400) {\n    msg.payload = \"400\";\n} else if (msg.payload === 500) {\n    msg.payload = \"500\";\n} else if (msg.payload === 600) {\n    msg.payload = \"E600\";\n} else if (msg.payload === 700) {\n    msg.payload = \"Quality control\"; // Qualitätskontrolle, code: 700\n} else if (msg.payload === 800) {\n    msg.payload = \"Shipping of goods:\"; // Auslieferung, code: 800\n} else {\n    // Für den Fall, dass keine der Bedingungen erfüllt ist\n    msg.payload = \"\";\n}\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1490,
        "y": 5260,
        "wires": [
            [
                "bd6d1fd3ba665c0d"
            ]
        ]
    },
    {
        "id": "bd6d1fd3ba665c0d",
        "type": "ui_text",
        "z": "759e4c62c23869e9",
        "d": true,
        "group": "6e8e604f8cdc1fbd",
        "order": 19,
        "width": 6,
        "height": 1,
        "name": "Historie6 Text",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1720,
        "y": 5260,
        "wires": []
    },
    {
        "id": "d5c3704a05f1cd5f",
        "type": "change",
        "z": "759e4c62c23869e9",
        "name": "code",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.code",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1310,
        "y": 5400,
        "wires": [
            [
                "79ee1fc5ed05037a"
            ]
        ]
    },
    {
        "id": "79ee1fc5ed05037a",
        "type": "function",
        "z": "759e4c62c23869e9",
        "name": "function 19",
        "func": "if (msg.payload === 100) {\n    msg.payload = \"Delivery of raw materials:\"; // Anlieferung der Rohware, code: 100\n} else if (msg.payload === 200) {\n    msg.payload = \"Quality Assurance Delivery:\"; // Quality Assurance Delivery, code: 200\n} else if (msg.payload === 300) {\n    msg.payload = \"Storage:\"; // \"Einlagerung, code: 300\"\n} else if (msg.payload === 400) {\n    msg.payload = \"400\";\n} else if (msg.payload === 500) {\n    msg.payload = \"500\";\n} else if (msg.payload === 600) {\n    msg.payload = \"E600\";\n} else if (msg.payload === 700) {\n    msg.payload = \"Quality control\"; // Qualitätskontrolle, code: 700\n} else if (msg.payload === 800) {\n    msg.payload = \"Shipping of goods:\"; // Auslieferung, code: 800\n} else {\n    // Für den Fall, dass keine der Bedingungen erfüllt ist\n    msg.payload = \"\";\n}\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1490,
        "y": 5400,
        "wires": [
            [
                "48bda8bbfc11a8b2"
            ]
        ]
    },
    {
        "id": "48bda8bbfc11a8b2",
        "type": "ui_text",
        "z": "759e4c62c23869e9",
        "d": true,
        "group": "6e8e604f8cdc1fbd",
        "order": 21,
        "width": 6,
        "height": 1,
        "name": "Historie7 Text",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1720,
        "y": 5400,
        "wires": []
    },
    {
        "id": "56e9792bd40658cb",
        "type": "ui_text",
        "z": "759e4c62c23869e9",
        "group": "6e8e604f8cdc1fbd",
        "order": 10,
        "width": 6,
        "height": 1,
        "name": "Historie1 ts",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1710,
        "y": 4520,
        "wires": []
    },
    {
        "id": "0e877cf693cb8ecb",
        "type": "ui_text",
        "z": "759e4c62c23869e9",
        "group": "6e8e604f8cdc1fbd",
        "order": 12,
        "width": 6,
        "height": 1,
        "name": "Historie2 ts",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1710,
        "y": 4660,
        "wires": []
    },
    {
        "id": "e88e52aa21aabd77",
        "type": "ui_text",
        "z": "759e4c62c23869e9",
        "group": "6e8e604f8cdc1fbd",
        "order": 14,
        "width": 6,
        "height": 1,
        "name": "Historie3 ts",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1710,
        "y": 4800,
        "wires": []
    },
    {
        "id": "65d1296ba54048e9",
        "type": "ui_text",
        "z": "759e4c62c23869e9",
        "group": "6e8e604f8cdc1fbd",
        "order": 16,
        "width": 6,
        "height": 1,
        "name": "Historie4 ts",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1710,
        "y": 4940,
        "wires": []
    },
    {
        "id": "c15e1175ed728989",
        "type": "ui_text",
        "z": "759e4c62c23869e9",
        "d": true,
        "group": "6e8e604f8cdc1fbd",
        "order": 18,
        "width": 6,
        "height": 1,
        "name": "Historie5 ts",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1710,
        "y": 5080,
        "wires": []
    },
    {
        "id": "13666fa58930c43a",
        "type": "ui_text",
        "z": "759e4c62c23869e9",
        "d": true,
        "group": "6e8e604f8cdc1fbd",
        "order": 20,
        "width": 6,
        "height": 1,
        "name": "Historie6 ts",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1710,
        "y": 5220,
        "wires": []
    },
    {
        "id": "3f2f1d0411b28c2d",
        "type": "ui_text",
        "z": "759e4c62c23869e9",
        "d": true,
        "group": "6e8e604f8cdc1fbd",
        "order": 22,
        "width": 6,
        "height": 1,
        "name": "Historie7 ts",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1710,
        "y": 5360,
        "wires": []
    },
    {
        "id": "44323fba0eb85597",
        "type": "inject",
        "z": "759e4c62c23869e9",
        "name": "Inject 2 Objects",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{ \"history\" : [ { \"code\" : 100, \"ts\" : \"2024-02-28T15:37:43.787Z\" }, { \"code\" : 200, \"ts\" : \"2024-02-28T15:37:47.131Z\" } ], \"ts\" : \"2024-02-28T17:05:16.387Z\", \"workpiece\" : { \"id\" : \"040aa692186580\", \"state\" : \"RAW\", \"type\" : \"BLUE\" } }",
        "payloadType": "json",
        "x": 280,
        "y": 4160,
        "wires": [
            [
                "461e6206a6001c88",
                "eeb29cdcfbe9bce1"
            ]
        ]
    },
    {
        "id": "1c9bb62977905b5b",
        "type": "inject",
        "z": "759e4c62c23869e9",
        "name": "Inject 4 Objects",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"history\":[{\"code\":100,\"ts\":\"2024-02-28T15:45:06.865Z\"},{\"code\":200,\"ts\":\"2024-02-28T15:45:09.726Z\"},{\"code\":300,\"ts\":\"2024-02-28T15:45:54.361Z\"},{\"code\":800,\"ts\":\"2024-02-28T16:04:02.565Z\"}],\"ts\":\"2024-02-28T17:13:49.804Z\",\"workpiece\":{\"id\":\"04ee5492186580\",\"state\":\"PROCESSED\",\"type\":\"RED\"}}",
        "payloadType": "json",
        "x": 280,
        "y": 4220,
        "wires": [
            [
                "461e6206a6001c88",
                "eeb29cdcfbe9bce1"
            ]
        ]
    },
    {
        "id": "d3b407168d12d07e",
        "type": "function",
        "z": "759e4c62c23869e9",
        "name": "function 20",
        "func": "// Überprüfen, ob der Payload dem Format \"YYYY-MM-DDTHH:mm:ss.sssZ\" entspricht\nvar payload = msg.payload;\n\n// Regulärer Ausdruck für das gewünschte Format\nvar regex = /^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}\\.\\d{3}Z$/;\n\nif (regex.test(payload)) {\n    // Wenn das Format übereinstimmt\n    node.status({fill:\"green\",shape:\"dot\",text:\"Payload entspricht dem Format\"});\n    return msg;\n} else {\n    // Wenn das Format nicht übereinstimmt\n    node.status({fill:\"red\",shape:\"ring\",text:\"Payload entspricht nicht dem Format\"});\n    return { payload: \"\" };\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1490,
        "y": 4660,
        "wires": [
            [
                "0e877cf693cb8ecb"
            ]
        ]
    },
    {
        "id": "60c9c02244feb034",
        "type": "function",
        "z": "759e4c62c23869e9",
        "name": "function 21",
        "func": "// Überprüfen, ob der Payload dem Format \"YYYY-MM-DDTHH:mm:ss.sssZ\" entspricht\nvar payload = msg.payload;\n\n// Regulärer Ausdruck für das gewünschte Format\nvar regex = /^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}\\.\\d{3}Z$/;\n\nif (regex.test(payload)) {\n    // Wenn das Format übereinstimmt\n    node.status({fill:\"green\",shape:\"dot\",text:\"Payload entspricht dem Format\"});\n    return msg;\n} else {\n    // Wenn das Format nicht übereinstimmt\n    node.status({fill:\"red\",shape:\"ring\",text:\"Payload entspricht nicht dem Format\"});\n    return { payload: \"\" };\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1490,
        "y": 4520,
        "wires": [
            [
                "56e9792bd40658cb"
            ]
        ]
    },
    {
        "id": "ae0c55e8dde4f660",
        "type": "function",
        "z": "759e4c62c23869e9",
        "name": "function 22",
        "func": "// Überprüfen, ob der Payload dem Format \"YYYY-MM-DDTHH:mm:ss.sssZ\" entspricht\nvar payload = msg.payload;\n\n// Regulärer Ausdruck für das gewünschte Format\nvar regex = /^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}\\.\\d{3}Z$/;\n\nif (regex.test(payload)) {\n    // Wenn das Format übereinstimmt\n    node.status({fill:\"green\",shape:\"dot\",text:\"Payload entspricht dem Format\"});\n    return msg;\n} else {\n    // Wenn das Format nicht übereinstimmt\n    node.status({fill:\"red\",shape:\"ring\",text:\"Payload entspricht nicht dem Format\"});\n    return { payload: \"\" };\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1490,
        "y": 4380,
        "wires": [
            [
                "1f52bc23907d393d"
            ]
        ]
    },
    {
        "id": "22a48d01d03b8e85",
        "type": "function",
        "z": "759e4c62c23869e9",
        "name": "function 23",
        "func": "// Überprüfen, ob der Payload dem Format \"YYYY-MM-DDTHH:mm:ss.sssZ\" entspricht\nvar payload = msg.payload;\n\n// Regulärer Ausdruck für das gewünschte Format\nvar regex = /^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}\\.\\d{3}Z$/;\n\nif (regex.test(payload)) {\n    // Wenn das Format übereinstimmt\n    node.status({fill:\"green\",shape:\"dot\",text:\"Payload entspricht dem Format\"});\n    return msg;\n} else {\n    // Wenn das Format nicht übereinstimmt\n    node.status({fill:\"red\",shape:\"ring\",text:\"Payload entspricht nicht dem Format\"});\n    return { payload: \"\" };\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1490,
        "y": 4800,
        "wires": [
            [
                "e88e52aa21aabd77"
            ]
        ]
    },
    {
        "id": "c9ecb8f46ff87971",
        "type": "function",
        "z": "759e4c62c23869e9",
        "name": "function 24",
        "func": "// Überprüfen, ob der Payload dem Format \"YYYY-MM-DDTHH:mm:ss.sssZ\" entspricht\nvar payload = msg.payload;\n\n// Regulärer Ausdruck für das gewünschte Format\nvar regex = /^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}\\.\\d{3}Z$/;\n\nif (regex.test(payload)) {\n    // Wenn das Format übereinstimmt\n    node.status({fill:\"green\",shape:\"dot\",text:\"Payload entspricht dem Format\"});\n    return msg;\n} else {\n    // Wenn das Format nicht übereinstimmt\n    node.status({fill:\"red\",shape:\"ring\",text:\"Payload entspricht nicht dem Format\"});\n    return { payload: \"\" };\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1490,
        "y": 5220,
        "wires": [
            [
                "13666fa58930c43a"
            ]
        ]
    },
    {
        "id": "437f042fc7d95e2f",
        "type": "function",
        "z": "759e4c62c23869e9",
        "name": "function 25",
        "func": "// Überprüfen, ob der Payload dem Format \"YYYY-MM-DDTHH:mm:ss.sssZ\" entspricht\nvar payload = msg.payload;\n\n// Regulärer Ausdruck für das gewünschte Format\nvar regex = /^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}\\.\\d{3}Z$/;\n\nif (regex.test(payload)) {\n    // Wenn das Format übereinstimmt\n    node.status({fill:\"green\",shape:\"dot\",text:\"Payload entspricht dem Format\"});\n    return msg;\n} else {\n    // Wenn das Format nicht übereinstimmt\n    node.status({fill:\"red\",shape:\"ring\",text:\"Payload entspricht nicht dem Format\"});\n    return { payload: \"\" };\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1490,
        "y": 5080,
        "wires": [
            [
                "c15e1175ed728989"
            ]
        ]
    },
    {
        "id": "97faa824b2f2b7d9",
        "type": "function",
        "z": "759e4c62c23869e9",
        "name": "function 26",
        "func": "// Überprüfen, ob der Payload dem Format \"YYYY-MM-DDTHH:mm:ss.sssZ\" entspricht\nvar payload = msg.payload;\n\n// Regulärer Ausdruck für das gewünschte Format\nvar regex = /^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}\\.\\d{3}Z$/;\n\nif (regex.test(payload)) {\n    // Wenn das Format übereinstimmt\n    node.status({fill:\"green\",shape:\"dot\",text:\"Payload entspricht dem Format\"});\n    return msg;\n} else {\n    // Wenn das Format nicht übereinstimmt\n    node.status({fill:\"red\",shape:\"ring\",text:\"Payload entspricht nicht dem Format\"});\n    return { payload: \"\" };\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1490,
        "y": 4940,
        "wires": [
            [
                "65d1296ba54048e9"
            ]
        ]
    },
    {
        "id": "6924cc8609a1bf56",
        "type": "function",
        "z": "759e4c62c23869e9",
        "name": "function 27",
        "func": "// Überprüfen, ob der Payload dem Format \"YYYY-MM-DDTHH:mm:ss.sssZ\" entspricht\nvar payload = msg.payload;\n\n// Regulärer Ausdruck für das gewünschte Format\nvar regex = /^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}\\.\\d{3}Z$/;\n\nif (regex.test(payload)) {\n    // Wenn das Format übereinstimmt\n    node.status({fill:\"green\",shape:\"dot\",text:\"Payload entspricht dem Format\"});\n    return msg;\n} else {\n    // Wenn das Format nicht übereinstimmt\n    node.status({fill:\"red\",shape:\"ring\",text:\"Payload entspricht nicht dem Format\"});\n    return { payload: \"\" };\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1490,
        "y": 5360,
        "wires": [
            [
                "3f2f1d0411b28c2d"
            ]
        ]
    },
    {
        "id": "23fe19b1e2698cba",
        "type": "ui_text",
        "z": "759e4c62c23869e9",
        "group": "6e8e604f8cdc1fbd",
        "order": 5,
        "width": 6,
        "height": 1,
        "name": "History:",
        "label": "History:",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1700,
        "y": 4320,
        "wires": []
    },
    {
        "id": "ba7136f6ceb570e1",
        "type": "mqtt in",
        "z": "759e4c62c23869e9",
        "name": "",
        "topic": "i/bme680",
        "qos": "0",
        "datatype": "json",
        "broker": "fa600c20.8a9c9",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 360,
        "y": 6720,
        "wires": [
            [
                "45f5e158360e7618",
                "1ffaa8603b01a8c6",
                "9683bcfe146727f5",
                "1cfb69ea33c2fef0",
                "d5a36d3e9e13d6be",
                "0a3597ea57924954",
                "4ad3520208787ee1"
            ]
        ]
    },
    {
        "id": "45f5e158360e7618",
        "type": "function",
        "z": "759e4c62c23869e9",
        "name": "temp",
        "func": "msg.payload = msg.payload.t;\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 6800,
        "wires": [
            [
                "5e8d392eb94bb964",
                "ddee6917b691233e"
            ]
        ]
    },
    {
        "id": "5e8d392eb94bb964",
        "type": "debug",
        "z": "759e4c62c23869e9",
        "name": "t",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 770,
        "y": 6760,
        "wires": []
    },
    {
        "id": "1ffaa8603b01a8c6",
        "type": "debug",
        "z": "759e4c62c23869e9",
        "name": "raw",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 570,
        "y": 6680,
        "wires": []
    },
    {
        "id": "9683bcfe146727f5",
        "type": "function",
        "z": "759e4c62c23869e9",
        "name": "humidity",
        "func": "msg.payload = msg.payload.h;\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 6920,
        "wires": [
            [
                "9ce682685273e1e2",
                "8d1593a45c04ecac"
            ]
        ]
    },
    {
        "id": "9ce682685273e1e2",
        "type": "debug",
        "z": "759e4c62c23869e9",
        "name": "h",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 770,
        "y": 6880,
        "wires": []
    },
    {
        "id": "1cfb69ea33c2fef0",
        "type": "function",
        "z": "759e4c62c23869e9",
        "name": "pressure",
        "func": "msg.payload = msg.payload.p;\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 7040,
        "wires": [
            [
                "d3b4120319745cec",
                "a940ac8f15a9924b"
            ]
        ]
    },
    {
        "id": "d5a36d3e9e13d6be",
        "type": "function",
        "z": "759e4c62c23869e9",
        "name": "air quality index",
        "func": "msg.payload = msg.payload.iaq;\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 7160,
        "wires": [
            [
                "f627cea4b2b79504",
                "04638f0e9a11b230"
            ]
        ]
    },
    {
        "id": "4ad3520208787ee1",
        "type": "function",
        "z": "759e4c62c23869e9",
        "name": "timestamp",
        "func": "// Erstellt ein Date-Objekt basierend auf dem Zeitstempel im Payload der empfangenen Nachricht\nvar date = new Date(msg.payload.ts);\n\n// Konvertiert das Date-Objekt in einen lokalisierten String im deutschen Format\nvar date = new Date(msg.payload.ts);\n\n// Gibt die modifizierte Nachricht zurück\nmsg.payload = date.toLocaleString('de-DE');\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 6720,
        "wires": [
            [
                "14468779b3586d7d",
                "5e21727aaab00447"
            ]
        ]
    },
    {
        "id": "0a3597ea57924954",
        "type": "function",
        "z": "759e4c62c23869e9",
        "name": "air quality score",
        "func": "msg.payload = msg.payload.aq;\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 7280,
        "wires": [
            [
                "c9927e8f3c1d0cb3",
                "021dda49fd02e783"
            ]
        ]
    },
    {
        "id": "d3b4120319745cec",
        "type": "debug",
        "z": "759e4c62c23869e9",
        "name": "p",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 770,
        "y": 7000,
        "wires": []
    },
    {
        "id": "f627cea4b2b79504",
        "type": "debug",
        "z": "759e4c62c23869e9",
        "name": "iaq",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 770,
        "y": 7120,
        "wires": []
    },
    {
        "id": "c9927e8f3c1d0cb3",
        "type": "debug",
        "z": "759e4c62c23869e9",
        "name": "aq",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 770,
        "y": 7240,
        "wires": []
    },
    {
        "id": "14468779b3586d7d",
        "type": "debug",
        "z": "759e4c62c23869e9",
        "name": "ts",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 770,
        "y": 6680,
        "wires": []
    },
    {
        "id": "5e21727aaab00447",
        "type": "ui_text",
        "z": "759e4c62c23869e9",
        "group": "de7816e80a9f9dec",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "timestamp BME680",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 810,
        "y": 6720,
        "wires": []
    },
    {
        "id": "ddee6917b691233e",
        "type": "ui_text",
        "z": "759e4c62c23869e9",
        "group": "de7816e80a9f9dec",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Temperature:",
        "format": "{{msg.payload}} °C",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 790,
        "y": 6800,
        "wires": []
    },
    {
        "id": "8d1593a45c04ecac",
        "type": "ui_text",
        "z": "759e4c62c23869e9",
        "group": "de7816e80a9f9dec",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Humidity:",
        "format": "{{msg.payload}} % r.H.",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 780,
        "y": 6920,
        "wires": []
    },
    {
        "id": "a940ac8f15a9924b",
        "type": "ui_text",
        "z": "759e4c62c23869e9",
        "group": "de7816e80a9f9dec",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Air pressure:",
        "format": "{{msg.payload}} hPa",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 790,
        "y": 7040,
        "wires": []
    },
    {
        "id": "04638f0e9a11b230",
        "type": "ui_text",
        "z": "759e4c62c23869e9",
        "group": "de7816e80a9f9dec",
        "order": 5,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Air quality:",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 790,
        "y": 7160,
        "wires": []
    },
    {
        "id": "021dda49fd02e783",
        "type": "ui_text",
        "z": "759e4c62c23869e9",
        "group": "de7816e80a9f9dec",
        "order": 6,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Air quality accuracy",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 810,
        "y": 7280,
        "wires": []
    },
    {
        "id": "5f96d79a9f4d40c4",
        "type": "mqtt in",
        "z": "759e4c62c23869e9",
        "name": "",
        "topic": "i/ldr",
        "qos": "0",
        "datatype": "json",
        "broker": "fa600c20.8a9c9",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 350,
        "y": 7380,
        "wires": [
            [
                "d90ddb6d6fb40bf5",
                "8795081697bb57a7",
                "86ae2617e06f7427"
            ]
        ]
    },
    {
        "id": "d90ddb6d6fb40bf5",
        "type": "debug",
        "z": "759e4c62c23869e9",
        "name": "raw",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 570,
        "y": 7340,
        "wires": []
    },
    {
        "id": "8795081697bb57a7",
        "type": "function",
        "z": "759e4c62c23869e9",
        "name": "timestamp",
        "func": "var date = new Date(msg.payload.ts);\nmsg.payload = date.toLocaleString('de-DE');\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 590,
        "y": 7380,
        "wires": [
            [
                "56c3ec03af69ce57",
                "bb9707f0aca01bc8"
            ]
        ]
    },
    {
        "id": "56c3ec03af69ce57",
        "type": "debug",
        "z": "759e4c62c23869e9",
        "name": "ts",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 770,
        "y": 7340,
        "wires": []
    },
    {
        "id": "bb9707f0aca01bc8",
        "type": "ui_text",
        "z": "759e4c62c23869e9",
        "group": "de7816e80a9f9dec",
        "order": 7,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "timestamp LDR",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 800,
        "y": 7380,
        "wires": []
    },
    {
        "id": "86ae2617e06f7427",
        "type": "function",
        "z": "759e4c62c23869e9",
        "name": "brightness",
        "func": "msg.payload = msg.payload.br;\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 7460,
        "wires": [
            [
                "f472726159b10a88",
                "3b51bc5f4846f158"
            ]
        ]
    },
    {
        "id": "f472726159b10a88",
        "type": "debug",
        "z": "759e4c62c23869e9",
        "name": "br",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 770,
        "y": 7420,
        "wires": []
    },
    {
        "id": "3b51bc5f4846f158",
        "type": "ui_text",
        "z": "759e4c62c23869e9",
        "group": "de7816e80a9f9dec",
        "order": 8,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Brightness",
        "format": "{{msg.payload}} %",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 790,
        "y": 7460,
        "wires": []
    },
    {
        "id": "0a6a5436cedf4f06",
        "type": "comment",
        "z": "759e4c62c23869e9",
        "name": "Sensorinformation",
        "info": "",
        "x": 110,
        "y": 6720,
        "wires": []
    },
    {
        "id": "bb68627726796866",
        "type": "change",
        "z": "759e4c62c23869e9",
        "name": "code",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.code",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 710,
        "y": 3240,
        "wires": [
            [
                "5e3a071c36487047"
            ]
        ]
    },
    {
        "id": "dd211f7707a84eba",
        "type": "change",
        "z": "759e4c62c23869e9",
        "name": "code",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.code",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 710,
        "y": 3380,
        "wires": [
            [
                "70252d4015282c67"
            ]
        ]
    },
    {
        "id": "78a6d305e2a526b5",
        "type": "change",
        "z": "759e4c62c23869e9",
        "name": "code",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.code",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 710,
        "y": 3460,
        "wires": [
            [
                "50029f068c19265d"
            ]
        ]
    },
    {
        "id": "845b4893b83db006",
        "type": "ui_template",
        "z": "759e4c62c23869e9",
        "group": "348aa8362b207fd6",
        "name": "Legende",
        "order": 13,
        "width": 10,
        "height": 3,
        "format": "<div>\n    <p>Legende:</p>\n</div>\n\n<!-- Default-Status -->\n<div layout=\"column\" layout-align=\"start start\" style=\"padding: 0 6px;\">\n    <div layout=\"row\" layout-align=\"start start\"> <!-- Ausrichtung ganz links -->\n        \n        <font\n            color='MediumSeaGreen'>\n            <i class=\"fa fa-circle\" aria-hidden=\"true\" style=\"background-color: grey; padding: 2px;\"></i>\n        </font>\n        <p>: Default</p>\n    </div>\n</div>\n\n<!-- Aktiver Status -->\n<div layout=\"column\" layout-align=\"start start\" style=\"padding: 0 6px;\">        \n    <div layout=\"row\" layout-align=\"start start\"> <!-- Ausrichtung ganz links -->\n        \n        <font\n            color='YELLOW'>\n            <i class=\"fa fa-circle\" aria-hidden=\"true\" style=\"background-color: grey; padding: 2px;\"></i>\n        </font>\n        <p>: Active</p>\n    </div>\n</div>\n\n<!-- Fehlerstatus -->\n<div layout=\"column\" layout-align=\"start start\" style=\"padding: 0 6px;\">        \n    <div layout=\"row\" layout-align=\"start start\"> <!-- Ausrichtung ganz links -->\n        \n        <font\n            color='RED'>\n            <i class=\"fa fa-circle\" aria-hidden=\"true\" style=\"background-color: grey; padding: 2px;\"></i>\n        </font>\n        <p>: Error</p>\n    </div>\n</div>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 300,
        "y": 3520,
        "wires": [
            []
        ]
    },
    {
        "id": "431cc89699ab7871",
        "type": "mqtt in",
        "z": "759e4c62c23869e9",
        "name": "",
        "topic": "f/i/state/mpo",
        "qos": "0",
        "datatype": "json",
        "broker": "fa600c20.8a9c9",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 390,
        "y": 5660,
        "wires": [
            [
                "8c606c1b56e156ef"
            ]
        ]
    },
    {
        "id": "3e7549e6daea78d0",
        "type": "comment",
        "z": "759e4c62c23869e9",
        "name": "Production Process",
        "info": "",
        "x": 110,
        "y": 5560,
        "wires": []
    },
    {
        "id": "73974974a2db9f00",
        "type": "mqtt in",
        "z": "759e4c62c23869e9",
        "name": "",
        "topic": "f/i/state/hbw",
        "qos": "0",
        "datatype": "json",
        "broker": "fa600c20.8a9c9",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 390,
        "y": 5760,
        "wires": [
            [
                "aac71eba22dadd94"
            ]
        ]
    },
    {
        "id": "40a6ed68d6cbf0e8",
        "type": "mqtt in",
        "z": "759e4c62c23869e9",
        "name": "",
        "topic": "f/i/state/vgr",
        "qos": "0",
        "datatype": "json",
        "broker": "fa600c20.8a9c9",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 380,
        "y": 5940,
        "wires": [
            [
                "122e354fbb4dd9ad",
                "9eb511740a50afd6",
                "a1941e2559942d47"
            ]
        ]
    },
    {
        "id": "77b9a6e501efe426",
        "type": "mqtt in",
        "z": "759e4c62c23869e9",
        "name": "",
        "topic": "f/i/state/sld",
        "qos": "0",
        "datatype": "json",
        "broker": "fa600c20.8a9c9",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 380,
        "y": 5820,
        "wires": [
            [
                "3c43756e1f19db8f"
            ]
        ]
    },
    {
        "id": "8279b1d806f6f573",
        "type": "ui_template",
        "z": "759e4c62c23869e9",
        "group": "f5a12cd0ea42cf01",
        "name": "activeMPO",
        "order": 14,
        "width": 7,
        "height": 1,
        "format": "<div style=\"display: flex; align-items: center;\">\n    <div ng-style=\"{'background-color': msg.payload === 1 ? 'MediumSeaGreen' : 'grey', 'border-radius': '50%', 'width': '40px', 'height': '40px', 'display': 'flex', 'justify-content': 'center', 'align-items': 'center', 'margin-right': '10px'}\">\n     <i class=\"fa fa-industry\" aria-hidden=\"true\" style=\"color: white; font-size: 24px; line-height: 50px;\"></i>\n</div>\n<div style=\"display: flex; align-items: center;\">\n    <span>MPO: Multi processing station with oven\n    </span>\n</div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1010,
        "y": 5660,
        "wires": [
            []
        ]
    },
    {
        "id": "8c606c1b56e156ef",
        "type": "change",
        "z": "759e4c62c23869e9",
        "name": "active",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.active",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 790,
        "y": 5660,
        "wires": [
            [
                "8279b1d806f6f573"
            ]
        ]
    },
    {
        "id": "ab87e07519b44ac9",
        "type": "ui_template",
        "z": "759e4c62c23869e9",
        "group": "f5a12cd0ea42cf01",
        "name": "activeHBW",
        "order": 8,
        "width": 7,
        "height": 1,
        "format": "<div style=\"display: flex; align-items: center;\">\n    <div ng-style=\"{'background-color': msg.payload === 1 ? 'MediumSeaGreen' : 'grey', 'border-radius': '50%', 'width': '40px', 'height': '40px', 'display': 'flex', 'justify-content': 'center', 'align-items': 'center', 'margin-right': '10px'}\">\n     <i class=\"fa fa-cubes\" aria-hidden=\"true\" style=\"color: white; font-size: 24px; line-height: 50px;\"></i>\n</div>\n<div style=\"display: flex; align-items: center;\">\n    <span>HBW: High-bay warehouse</span>\n</div>\n\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1010,
        "y": 5760,
        "wires": [
            []
        ]
    },
    {
        "id": "06ae8c52c4bfda88",
        "type": "ui_template",
        "z": "759e4c62c23869e9",
        "group": "f5a12cd0ea42cf01",
        "name": "activeVGRtoDSO",
        "order": 20,
        "width": 7,
        "height": 1,
        "format": "<div style=\"display: flex; align-items: center;\">\n    <div ng-style=\"{'background-color': msg.payload === 1 ? 'MediumSeaGreen' : 'grey', 'border-radius': '50%', 'width': '40px', 'height': '40px', 'display': 'flex', 'justify-content': 'center', 'align-items': 'center', 'margin-right': '10px'}\">\n    <i class=\"fa fa-sort \" aria-hidden=\"true\" style=\"color: white; font-size: 24px; line-height: 50px;\"></i>\n</div>\n<div style=\"display: flex; align-items: center;\">\n    <span>VGR: Vacuum gripper robot</span>\n</div>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1030,
        "y": 5940,
        "wires": [
            []
        ]
    },
    {
        "id": "dede9179a451ef1d",
        "type": "ui_template",
        "z": "759e4c62c23869e9",
        "group": "f5a12cd0ea42cf01",
        "name": "activeSLD",
        "order": 17,
        "width": 7,
        "height": 1,
        "format": "<div style=\"display: flex; align-items: center;\">\n    <div ng-style=\"{'background-color': msg.payload === 1 ? 'MediumSeaGreen' : 'grey', 'border-radius': '50%', 'width': '40px', 'height': '40px', 'display': 'flex', 'justify-content': 'center', 'align-items': 'center', 'margin-right': '10px'}\">\n    <i class=\"fa fa-sitemap\" aria-hidden=\"true\" style=\"color: white; font-size: 24px; line-height: 50px;\"></i>\n</div>\n<div style=\"display: flex; align-items: center;\">\n    <span>SLD: Sorting Line with color detection</span>\n</div>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1010,
        "y": 5820,
        "wires": [
            []
        ]
    },
    {
        "id": "aac71eba22dadd94",
        "type": "change",
        "z": "759e4c62c23869e9",
        "name": "active",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.active",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 790,
        "y": 5760,
        "wires": [
            [
                "ab87e07519b44ac9"
            ]
        ]
    },
    {
        "id": "3c43756e1f19db8f",
        "type": "change",
        "z": "759e4c62c23869e9",
        "name": "active",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.active",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 790,
        "y": 5820,
        "wires": [
            [
                "dede9179a451ef1d"
            ]
        ]
    },
    {
        "id": "7f6d7bfa5cd12b50",
        "type": "mqtt in",
        "z": "759e4c62c23869e9",
        "name": "",
        "topic": "f/i/state/dsi",
        "qos": "0",
        "datatype": "json",
        "broker": "fa600c20.8a9c9",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 380,
        "y": 5560,
        "wires": [
            [
                "1a8b10146eb85142"
            ]
        ]
    },
    {
        "id": "1a8b10146eb85142",
        "type": "change",
        "z": "759e4c62c23869e9",
        "name": "active",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.active",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 790,
        "y": 5560,
        "wires": [
            [
                "a9794dc3889b69b4"
            ]
        ]
    },
    {
        "id": "a9794dc3889b69b4",
        "type": "ui_template",
        "z": "759e4c62c23869e9",
        "group": "f5a12cd0ea42cf01",
        "name": "activeDSI",
        "order": 2,
        "width": 7,
        "height": 1,
        "format": "<!-- Flexbox-Container für das Icon und den Text -->\n<div style=\"display: flex; align-items: center;\">\n    <!-- Div-Container für das Icon -->\n    <div ng-style=\"{'background-color': msg.payload === 1 ? 'MediumSeaGreen' : 'grey', 'border-radius': '50%', 'width': '40px', 'height': '40px', 'display': 'flex', 'justify-content': 'center', 'align-items': 'center', 'margin-right': '10px'}\">\n        <i class=\"fa fa-truck \" aria-hidden=\"true\" style=\"color: white; font-size: 24px; line-height: 50px;\"></i>\n    </div>\n    <!-- Text -->\n    <span>DSI: Delivery</span>\n</div>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1000,
        "y": 5560,
        "wires": [
            []
        ]
    },
    {
        "id": "122e354fbb4dd9ad",
        "type": "function",
        "z": "759e4c62c23869e9",
        "name": "dso",
        "func": "// Überprüfen, ob \"active\" gleich 1 ist und \"target\" gleich \"dso\" ist\nif (msg.payload.active === 1 && msg.payload.target === \"dso\") {\n    // Wenn die Bedingung erfüllt ist, setze den Payload auf 1\n    msg.payload = 1;\n} else {\n    // Andernfalls setze den Payload auf 0\n    msg.payload = 0;\n}\n\n// Gib die Nachricht zurück\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 790,
        "y": 5940,
        "wires": [
            [
                "06ae8c52c4bfda88"
            ]
        ]
    },
    {
        "id": "c9bae2173bf3e0ee",
        "type": "ui_template",
        "z": "759e4c62c23869e9",
        "group": "f5a12cd0ea42cf01",
        "name": "activeVGRtoHBW",
        "order": 5,
        "width": 7,
        "height": 1,
        "format": "<div style=\"display: flex; align-items: center;\">\n    <div ng-style=\"{'background-color': msg.payload === 1 ? 'MediumSeaGreen' : 'grey', 'border-radius': '50%', 'width': '40px', 'height': '40px', 'display': 'flex', 'justify-content': 'center', 'align-items': 'center', 'margin-right': '10px'}\">\n    <i class=\"fa fa-sort \" aria-hidden=\"true\" style=\"color: white; font-size: 24px; line-height: 50px;\"></i>\n</div>\n<div style=\"display: flex; align-items: center;\">\n    <span>VGR: Vacuum gripper robot</span>\n</div>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1030,
        "y": 6000,
        "wires": [
            []
        ]
    },
    {
        "id": "9eb511740a50afd6",
        "type": "function",
        "z": "759e4c62c23869e9",
        "name": "hbw",
        "func": "// Überprüfen, ob \"active\" gleich 1 ist und \"target\" gleich \"dso\" ist\nif (msg.payload.active === 1 && msg.payload.target === \"hbw\") {\n    // Wenn die Bedingung erfüllt ist, setze den Payload auf 1\n    msg.payload = 1;\n} else {\n    // Andernfalls setze den Payload auf 0\n    msg.payload = 0;\n}\n\n// Gib die Nachricht zurück\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 790,
        "y": 6000,
        "wires": [
            [
                "c9bae2173bf3e0ee"
            ]
        ]
    },
    {
        "id": "a1941e2559942d47",
        "type": "function",
        "z": "759e4c62c23869e9",
        "name": "hbw",
        "func": "// Überprüfen, ob \"active\" gleich 1 ist und \"target\" gleich \"dso\" ist\nif (msg.payload.active === 1 && msg.payload.target === \"mpo\") {\n    // Wenn die Bedingung erfüllt ist, setze den Payload auf 1\n    msg.payload = 1;\n} else {\n    // Andernfalls setze den Payload auf 0\n    msg.payload = 0;\n}\n\n// Gib die Nachricht zurück\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 790,
        "y": 6060,
        "wires": [
            [
                "31b997293c496334"
            ]
        ]
    },
    {
        "id": "31b997293c496334",
        "type": "ui_template",
        "z": "759e4c62c23869e9",
        "group": "f5a12cd0ea42cf01",
        "name": "activeVGRtoMPO",
        "order": 11,
        "width": 7,
        "height": 1,
        "format": "<div style=\"display: flex; align-items: center;\">\n    <div ng-style=\"{'background-color': msg.payload === 1 ? 'MediumSeaGreen' : 'grey', 'border-radius': '50%', 'width': '40px', 'height': '40px', 'display': 'flex', 'justify-content': 'center', 'align-items': 'center', 'margin-right': '10px'}\">\n    <i class=\"fa fa-sort \" aria-hidden=\"true\" style=\"color: white; font-size: 24px; line-height: 50px;\"></i>\n</div>\n<div style=\"display: flex; align-items: center;\">\n    <span>VGR: Vacuum gripper robot</span>\n</div>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1030,
        "y": 6060,
        "wires": [
            []
        ]
    },
    {
        "id": "741f4d7eb4f45b2b",
        "type": "mqtt in",
        "z": "759e4c62c23869e9",
        "name": "",
        "topic": "f/i/state/dso",
        "qos": "0",
        "datatype": "json",
        "broker": "fa600c20.8a9c9",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 390,
        "y": 5880,
        "wires": [
            [
                "ba247462c9f1e891"
            ]
        ]
    },
    {
        "id": "833ca82f229871b4",
        "type": "ui_template",
        "z": "759e4c62c23869e9",
        "group": "f5a12cd0ea42cf01",
        "name": "activeDSO",
        "order": 23,
        "width": 7,
        "height": 1,
        "format": "<div style=\"display: flex; align-items: center;\">\n    <div ng-style=\"{'background-color': msg.payload === 1 ? 'MediumSeaGreen' : 'grey', 'border-radius': '50%', 'width': '40px', 'height': '40px', 'display': 'flex', 'justify-content': 'center', 'align-items': 'center', 'margin-right': '10px'}\">\n    <i class=\"fa fa-truck\" aria-hidden=\"true\" style=\"color: white; font-size: 24px; line-height: 50px;\"></i>\n</div>\n<div style=\"display: flex; align-items: center;\">\n    <span>DSO: Delivery and Pickup Station</span>\n</div>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1010,
        "y": 5880,
        "wires": [
            []
        ]
    },
    {
        "id": "ba247462c9f1e891",
        "type": "change",
        "z": "759e4c62c23869e9",
        "name": "active",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.active",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 790,
        "y": 5880,
        "wires": [
            [
                "833ca82f229871b4"
            ]
        ]
    },
    {
        "id": "910a91471d9196fb",
        "type": "inject",
        "z": "759e4c62c23869e9",
        "name": "JSON Payload",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "[{\"location\":\"A1\",\"workpiece\":{\"id\":\"045da192186581\",\"state\":\"RAW\",\"type\":\"WHITE\"}},{\"location\":\"A2\",\"workpiece\":{\"id\":\"045c9692186581\",\"state\":\"RAW\",\"type\":\"WHITE\"}},{\"location\":\"A3\",\"workpiece\":null},{\"location\":\"B1\",\"workpiece\":{\"id\":\"04ee5492186580\",\"state\":\"RAW\",\"type\":\"RED\"}},{\"location\":\"B2\",\"workpiece\":{\"id\":\"040aa692186580\",\"state\":\"RAW\",\"type\":\"BLUE\"}},{\"location\":\"B3\",\"workpiece\":null},{\"location\":\"C1\",\"workpiece\":{\"id\":\"045da892186581\",\"state\":\"RAW\",\"type\":\"WHITE\"}},{\"location\":\"C2\",\"workpiece\":{\"id\":\"041ca792186581\",\"state\":\"RAW\",\"type\":\"WHITE\"}},{\"location\":\"C3\",\"workpiece\":{\"id\":\"0411a192186580\",\"state\":\"RAW\",\"type\":\"RED\"}}]",
        "payloadType": "json",
        "x": 330,
        "y": 80,
        "wires": [
            [
                "cff594c7bc4e51c9"
            ]
        ]
    },
    {
        "id": "52c03044a809158e",
        "type": "inject",
        "z": "759e4c62c23869e9",
        "name": "String Payload",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "[{\"location\":\"A1\",\"workpiece\":{\"id\":\"045da192186581\",\"state\":\"RAW\",\"type\":\"WHITE\"}},{\"location\":\"A2\",\"workpiece\":{\"id\":\"045c9692186581\",\"state\":\"RAW\",\"type\":\"WHITE\"}},{\"location\":\"A3\",\"workpiece\":null},{\"location\":\"B1\",\"workpiece\":{\"id\":\"04ee5492186580\",\"state\":\"RAW\",\"type\":\"RED\"}},{\"location\":\"B2\",\"workpiece\":{\"id\":\"040aa692186580\",\"state\":\"RAW\",\"type\":\"BLUE\"}},{\"location\":\"B3\",\"workpiece\":null},{\"location\":\"C1\",\"workpiece\":{\"id\":\"045da892186581\",\"state\":\"RAW\",\"type\":\"WHITE\"}},{\"location\":\"C2\",\"workpiece\":{\"id\":\"041ca792186581\",\"state\":\"RAW\",\"type\":\"WHITE\"}},{\"location\":\"C3\",\"workpiece\":{\"id\":\"0411a192186580\",\"state\":\"RAW\",\"type\":\"RED\"}}]",
        "payloadType": "str",
        "x": 340,
        "y": 40,
        "wires": [
            [
                "cff594c7bc4e51c9"
            ]
        ]
    },
    {
        "id": "7210e00e3bfd36da",
        "type": "inject",
        "z": "759e4c62c23869e9",
        "name": "JSON",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "[{\"location\":\"A1\",\"workpiece\":{\"id\":\"045da192186581\",\"state\":\"RAW\",\"type\":\"WHITE\"}},{\"location\":\"A2\",\"workpiece\":{\"id\":\"045c9692186581\",\"state\":\"RAW\",\"type\":\"WHITE\"}},{\"location\":\"A3\",\"workpiece\":null},{\"location\":\"B1\",\"workpiece\":null},{\"location\":\"B2\",\"workpiece\":{\"id\":\"040aa692186580\",\"state\":\"RAW\",\"type\":\"BLUE\"}},{\"location\":\"B3\",\"workpiece\":null},{\"location\":\"C1\",\"workpiece\":{\"id\":\"045da892186581\",\"state\":\"RAW\",\"type\":\"WHITE\"}},{\"location\":\"C2\",\"workpiece\":{\"id\":\"041ca792186581\",\"state\":\"RAW\",\"type\":\"WHITE\"}},{\"location\":\"C3\",\"workpiece\":null}]",
        "payloadType": "json",
        "x": 310,
        "y": 2340,
        "wires": [
            [
                "ed4baef41ca0a8e8"
            ]
        ]
    },
    {
        "id": "ed4baef41ca0a8e8",
        "type": "debug",
        "z": "759e4c62c23869e9",
        "name": "debug 40",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 520,
        "y": 2340,
        "wires": []
    },
    {
        "id": "4d5495ebb7eb377d",
        "type": "inject",
        "z": "759e4c62c23869e9",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"active\":1,\"code\":1,\"description\":\"\",\"station\":\"mpo\",\"ts\":\"2024-02-13T17:13:59.872Z\"}",
        "payloadType": "json",
        "x": 370,
        "y": 5720,
        "wires": [
            [
                "8c606c1b56e156ef",
                "d3b1fa77ca469c86"
            ]
        ]
    },
    {
        "id": "d3b1fa77ca469c86",
        "type": "debug",
        "z": "759e4c62c23869e9",
        "name": "debug 41",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 800,
        "y": 5720,
        "wires": []
    },
    {
        "id": "fbb299d4e2982e9d",
        "type": "inject",
        "z": "759e4c62c23869e9",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"active\":1,\"code\":1,\"description\":\"\",\"station\":\"dsi\",\"ts\":\"2024-02-13T17:13:59.872Z\"}",
        "payloadType": "json",
        "x": 370,
        "y": 5620,
        "wires": [
            [
                "37a3b8eb636fa90a",
                "1a8b10146eb85142"
            ]
        ]
    },
    {
        "id": "37a3b8eb636fa90a",
        "type": "debug",
        "z": "759e4c62c23869e9",
        "name": "debug 42",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 800,
        "y": 5620,
        "wires": []
    },
    {
        "id": "7f96f07eba0123eb",
        "type": "inject",
        "z": "759e4c62c23869e9",
        "name": "GREEN",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"active\":1,\"code\":1,\"description\":\"\",\"station\":\"mpo\",\"ts\":\"2024-02-13T17:13:59.872Z\"}",
        "payloadType": "json",
        "x": 290,
        "y": 3180,
        "wires": [
            [
                "754a1af6d579d806",
                "7ef5d0aadc2783aa"
            ]
        ]
    },
    {
        "id": "754a1af6d579d806",
        "type": "debug",
        "z": "759e4c62c23869e9",
        "name": "debug 43",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 720,
        "y": 3180,
        "wires": []
    },
    {
        "id": "8da4f5bb4daf73b9",
        "type": "inject",
        "z": "759e4c62c23869e9",
        "name": "RED",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"active\":1,\"code\":4,\"description\":\"\",\"station\":\"hbw\",\"ts\":\"2024-02-13T17:13:59.872Z\"}",
        "payloadType": "json",
        "x": 290,
        "y": 3320,
        "wires": [
            [
                "fa248ce7be1aae87",
                "bb68627726796866"
            ]
        ]
    },
    {
        "id": "fa248ce7be1aae87",
        "type": "debug",
        "z": "759e4c62c23869e9",
        "name": "debug 44",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 720,
        "y": 3320,
        "wires": []
    },
    {
        "id": "5cd64e31.be149",
        "type": "mqtt in",
        "z": "00d755fbe9816e1e",
        "name": "",
        "topic": "i/bme680",
        "qos": "0",
        "datatype": "json",
        "broker": "fa600c20.8a9c9",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 120,
        "y": 200,
        "wires": [
            [
                "90adb501.37fd88",
                "a7a3d38d.0d805",
                "64bf8c65.2ca234",
                "4f1bfd54.a41194",
                "da0b8106.7b055",
                "3af3a33c.c0c18c",
                "9e139b3e.82edf8"
            ]
        ]
    },
    {
        "id": "4c1fa6e3.985a68",
        "type": "ui_chart",
        "z": "00d755fbe9816e1e",
        "name": "",
        "group": "25e0d20d.12eefe",
        "order": 1,
        "width": 6,
        "height": 7,
        "label": "Temperature Graph",
        "chartType": "line",
        "legend": "false",
        "xformat": "auto",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "-10",
        "ymax": "30",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 570,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "90adb501.37fd88",
        "type": "function",
        "z": "00d755fbe9816e1e",
        "name": "temp",
        "func": "msg.payload = msg.payload.t;\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 280,
        "wires": [
            [
                "4c1fa6e3.985a68",
                "f154c45b.dc1eb8",
                "7289e747.9b4108",
                "ccc7947faa65d123"
            ]
        ]
    },
    {
        "id": "f154c45b.dc1eb8",
        "type": "debug",
        "z": "00d755fbe9816e1e",
        "name": "t",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 530,
        "y": 240,
        "wires": []
    },
    {
        "id": "a7a3d38d.0d805",
        "type": "debug",
        "z": "00d755fbe9816e1e",
        "name": "raw",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 330,
        "y": 160,
        "wires": []
    },
    {
        "id": "64bf8c65.2ca234",
        "type": "function",
        "z": "00d755fbe9816e1e",
        "name": "humidity",
        "func": "msg.payload = msg.payload.h;\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 400,
        "wires": [
            [
                "a32132c0.d6f84",
                "cf59797.c9a0088",
                "5a51db3.2f24024",
                "38b04f2ccf5e7ab4"
            ]
        ]
    },
    {
        "id": "a32132c0.d6f84",
        "type": "ui_chart",
        "z": "00d755fbe9816e1e",
        "name": "",
        "group": "c0ed767.7374988",
        "order": 1,
        "width": 6,
        "height": 7,
        "label": "Humidity Graph",
        "chartType": "line",
        "legend": "false",
        "xformat": "auto",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "100",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 560,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "cf59797.c9a0088",
        "type": "debug",
        "z": "00d755fbe9816e1e",
        "name": "h",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 530,
        "y": 360,
        "wires": []
    },
    {
        "id": "4f1bfd54.a41194",
        "type": "function",
        "z": "00d755fbe9816e1e",
        "name": "pressure",
        "func": "msg.payload = msg.payload.p;\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 520,
        "wires": [
            [
                "2d7e7920.819fb6",
                "880a095d.70a0b8",
                "ff8e8f8e.e72",
                "0a79428e6981ed6b"
            ]
        ]
    },
    {
        "id": "da0b8106.7b055",
        "type": "function",
        "z": "00d755fbe9816e1e",
        "name": "air quality index",
        "func": "msg.payload = msg.payload.iaq;\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 640,
        "wires": [
            [
                "5a3ca68e.6cf908",
                "31a14b2a.793264",
                "ae43a7e7.0bfd58"
            ]
        ]
    },
    {
        "id": "fb71edad.77334",
        "type": "comment",
        "z": "00d755fbe9816e1e",
        "name": "https://github.com/fischertechnik/txt_training_factory/blob/master/TxtSmartFactoryLib/doc/MqttInterface.md",
        "info": "",
        "x": 420,
        "y": 60,
        "wires": []
    },
    {
        "id": "9e139b3e.82edf8",
        "type": "function",
        "z": "00d755fbe9816e1e",
        "name": "timestamp",
        "func": "var date = new Date(msg.payload.ts);\nmsg.payload = date.toLocaleString('de-DE');\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 200,
        "wires": [
            [
                "c4562845.01d648",
                "33703eac.9fc6a2"
            ]
        ]
    },
    {
        "id": "3af3a33c.c0c18c",
        "type": "function",
        "z": "00d755fbe9816e1e",
        "name": "air quality score",
        "func": "msg.payload = msg.payload.aq;\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 760,
        "wires": [
            [
                "9c0a308.1e32fd",
                "f9d262ae.a967c"
            ]
        ]
    },
    {
        "id": "880a095d.70a0b8",
        "type": "ui_chart",
        "z": "00d755fbe9816e1e",
        "name": "",
        "group": "e928c4b3.04eb18",
        "order": 1,
        "width": 6,
        "height": 7,
        "label": "Air pressure",
        "chartType": "line",
        "legend": "false",
        "xformat": "auto",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "900",
        "ymax": "1100",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 550,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "2d7e7920.819fb6",
        "type": "debug",
        "z": "00d755fbe9816e1e",
        "name": "p",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 530,
        "y": 480,
        "wires": []
    },
    {
        "id": "31a14b2a.793264",
        "type": "ui_chart",
        "z": "00d755fbe9816e1e",
        "name": "",
        "group": "e67f6a50.c23a18",
        "order": 1,
        "width": 0,
        "height": 0,
        "label": "Air quality Graph",
        "chartType": "line",
        "legend": "false",
        "xformat": "auto",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "200",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#808080",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 570,
        "y": 680,
        "wires": [
            []
        ]
    },
    {
        "id": "5a3ca68e.6cf908",
        "type": "debug",
        "z": "00d755fbe9816e1e",
        "name": "iaq",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 530,
        "y": 600,
        "wires": []
    },
    {
        "id": "9c0a308.1e32fd",
        "type": "debug",
        "z": "00d755fbe9816e1e",
        "name": "aq",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 530,
        "y": 720,
        "wires": []
    },
    {
        "id": "c4562845.01d648",
        "type": "debug",
        "z": "00d755fbe9816e1e",
        "name": "ts",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 530,
        "y": 160,
        "wires": []
    },
    {
        "id": "33703eac.9fc6a2",
        "type": "ui_text",
        "z": "00d755fbe9816e1e",
        "group": "25e0d20d.12eefe",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "timestamp BME680",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 570,
        "y": 200,
        "wires": []
    },
    {
        "id": "7289e747.9b4108",
        "type": "ui_text",
        "z": "00d755fbe9816e1e",
        "group": "25e0d20d.12eefe",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Temperature:",
        "format": "{{msg.payload}} °C",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 550,
        "y": 280,
        "wires": []
    },
    {
        "id": "5a51db3.2f24024",
        "type": "ui_text",
        "z": "00d755fbe9816e1e",
        "group": "c0ed767.7374988",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Humidity:",
        "format": "{{msg.payload}} % r.H.",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 540,
        "y": 400,
        "wires": []
    },
    {
        "id": "ff8e8f8e.e72",
        "type": "ui_text",
        "z": "00d755fbe9816e1e",
        "group": "e928c4b3.04eb18",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Air pressure:",
        "format": "{{msg.payload}} hPa",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 550,
        "y": 520,
        "wires": []
    },
    {
        "id": "ae43a7e7.0bfd58",
        "type": "ui_text",
        "z": "00d755fbe9816e1e",
        "group": "e67f6a50.c23a18",
        "order": 5,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Air quality:",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 550,
        "y": 640,
        "wires": []
    },
    {
        "id": "f9d262ae.a967c",
        "type": "ui_text",
        "z": "00d755fbe9816e1e",
        "group": "e67f6a50.c23a18",
        "order": 6,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Air quality accuracy",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 570,
        "y": 760,
        "wires": []
    },
    {
        "id": "a901efed.4b3a1",
        "type": "mqtt in",
        "z": "00d755fbe9816e1e",
        "name": "",
        "topic": "i/ldr",
        "qos": "0",
        "datatype": "json",
        "broker": "fa600c20.8a9c9",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 110,
        "y": 860,
        "wires": [
            [
                "fd038e6d.6c91",
                "e1c4665b.abb0e8",
                "64561fb3.9c99f"
            ]
        ]
    },
    {
        "id": "fd038e6d.6c91",
        "type": "debug",
        "z": "00d755fbe9816e1e",
        "name": "raw",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 330,
        "y": 820,
        "wires": []
    },
    {
        "id": "e1c4665b.abb0e8",
        "type": "function",
        "z": "00d755fbe9816e1e",
        "name": "timestamp",
        "func": "var date = new Date(msg.payload.ts);\nmsg.payload = date.toLocaleString('de-DE');\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 350,
        "y": 860,
        "wires": [
            [
                "cb1537cd.723128",
                "6584889f.461418"
            ]
        ]
    },
    {
        "id": "cb1537cd.723128",
        "type": "debug",
        "z": "00d755fbe9816e1e",
        "name": "ts",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 530,
        "y": 820,
        "wires": []
    },
    {
        "id": "6584889f.461418",
        "type": "ui_text",
        "z": "00d755fbe9816e1e",
        "group": "b214200a.fb54c",
        "order": 7,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "timestamp LDR",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 560,
        "y": 860,
        "wires": []
    },
    {
        "id": "f7a91221.a68c2",
        "type": "ui_chart",
        "z": "00d755fbe9816e1e",
        "name": "",
        "group": "b214200a.fb54c",
        "order": 1,
        "width": 6,
        "height": 7,
        "label": "Brightness Graph",
        "chartType": "line",
        "legend": "false",
        "xformat": "auto",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "100",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 570,
        "y": 980,
        "wires": [
            []
        ]
    },
    {
        "id": "64561fb3.9c99f",
        "type": "function",
        "z": "00d755fbe9816e1e",
        "name": "brightness",
        "func": "msg.payload = msg.payload.br;\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 940,
        "wires": [
            [
                "f7a91221.a68c2",
                "9e5c781b.a81c58",
                "549e335d.d3b56c",
                "cbf9fa6af827999d"
            ]
        ]
    },
    {
        "id": "9e5c781b.a81c58",
        "type": "debug",
        "z": "00d755fbe9816e1e",
        "name": "br",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 530,
        "y": 900,
        "wires": []
    },
    {
        "id": "549e335d.d3b56c",
        "type": "ui_text",
        "z": "00d755fbe9816e1e",
        "group": "b214200a.fb54c",
        "order": 8,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Brightness",
        "format": "{{msg.payload}} %",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 550,
        "y": 940,
        "wires": []
    },
    {
        "id": "454da047.c4d7e",
        "type": "mqtt in",
        "z": "00d755fbe9816e1e",
        "name": "",
        "topic": "i/ptu/pos",
        "qos": "0",
        "datatype": "json",
        "broker": "fa600c20.8a9c9",
        "inputs": 0,
        "x": 120,
        "y": 1220,
        "wires": [
            [
                "b494c0b.cbbd44",
                "5125c6cc.877cf8"
            ]
        ]
    },
    {
        "id": "ede2b0e8.656d9",
        "type": "mqtt in",
        "z": "00d755fbe9816e1e",
        "name": "",
        "topic": "i/alert",
        "qos": "0",
        "datatype": "json",
        "broker": "fa600c20.8a9c9",
        "inputs": 0,
        "x": 110,
        "y": 1320,
        "wires": [
            [
                "e1856f6c.35f25",
                "c3f762f8.59a1a"
            ]
        ]
    },
    {
        "id": "b494c0b.cbbd44",
        "type": "debug",
        "z": "00d755fbe9816e1e",
        "name": "raw",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 330,
        "y": 1180,
        "wires": []
    },
    {
        "id": "e1856f6c.35f25",
        "type": "debug",
        "z": "00d755fbe9816e1e",
        "name": "raw",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 330,
        "y": 1280,
        "wires": []
    },
    {
        "id": "5125c6cc.877cf8",
        "type": "function",
        "z": "00d755fbe9816e1e",
        "name": "timestamp",
        "func": "var date = new Date(msg.payload.ts);\nmsg.payload = date.toLocaleString('de-DE');\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 350,
        "y": 1220,
        "wires": [
            [
                "eedc3770.3aac18"
            ]
        ]
    },
    {
        "id": "eedc3770.3aac18",
        "type": "debug",
        "z": "00d755fbe9816e1e",
        "name": "ts",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 530,
        "y": 1180,
        "wires": []
    },
    {
        "id": "c3f762f8.59a1a",
        "type": "function",
        "z": "00d755fbe9816e1e",
        "name": "timestamp",
        "func": "var date = new Date(msg.payload.ts);\nmsg.payload = date.toLocaleString('de-DE');\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 1320,
        "wires": [
            [
                "6d28ec80.9a3664"
            ]
        ]
    },
    {
        "id": "6d28ec80.9a3664",
        "type": "debug",
        "z": "00d755fbe9816e1e",
        "name": "ts",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 530,
        "y": 1280,
        "wires": []
    },
    {
        "id": "9d86de9f.e8252",
        "type": "mqtt in",
        "z": "00d755fbe9816e1e",
        "name": "",
        "topic": "i/broadcast",
        "qos": "0",
        "datatype": "json",
        "broker": "fa600c20.8a9c9",
        "inputs": 0,
        "x": 120,
        "y": 1420,
        "wires": [
            [
                "b7c29314.acb8e",
                "238055.cf8e1fac"
            ]
        ]
    },
    {
        "id": "b7c29314.acb8e",
        "type": "debug",
        "z": "00d755fbe9816e1e",
        "name": "raw",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 330,
        "y": 1380,
        "wires": []
    },
    {
        "id": "238055.cf8e1fac",
        "type": "function",
        "z": "00d755fbe9816e1e",
        "name": "timestamp",
        "func": "var date = new Date(msg.payload.ts);\nmsg.payload = date.toLocaleString('de-DE');\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 350,
        "y": 1420,
        "wires": [
            [
                "5f7b71d1.d4f75"
            ]
        ]
    },
    {
        "id": "5f7b71d1.d4f75",
        "type": "debug",
        "z": "00d755fbe9816e1e",
        "name": "ts",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 530,
        "y": 1380,
        "wires": []
    },
    {
        "id": "cf09ad40.6ca76",
        "type": "mqtt in",
        "z": "00d755fbe9816e1e",
        "name": "",
        "topic": "f/i/state/hbw",
        "qos": "0",
        "datatype": "json",
        "broker": "fa600c20.8a9c9",
        "inputs": 0,
        "x": 130,
        "y": 1520,
        "wires": [
            [
                "868b7c8b.4a9e4",
                "651fdc59.d53304"
            ]
        ]
    },
    {
        "id": "868b7c8b.4a9e4",
        "type": "debug",
        "z": "00d755fbe9816e1e",
        "name": "raw",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 330,
        "y": 1480,
        "wires": []
    },
    {
        "id": "651fdc59.d53304",
        "type": "function",
        "z": "00d755fbe9816e1e",
        "name": "timestamp",
        "func": "var date = new Date(msg.payload.ts);\nmsg.payload = date.toLocaleString('de-DE');\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 350,
        "y": 1520,
        "wires": [
            [
                "7796d728.8c7578"
            ]
        ]
    },
    {
        "id": "7796d728.8c7578",
        "type": "debug",
        "z": "00d755fbe9816e1e",
        "name": "ts",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 530,
        "y": 1480,
        "wires": []
    },
    {
        "id": "5ff7971e.dd8d88",
        "type": "mqtt in",
        "z": "00d755fbe9816e1e",
        "name": "",
        "topic": "f/i/state/vgr",
        "qos": "0",
        "datatype": "json",
        "broker": "fa600c20.8a9c9",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 120,
        "y": 1620,
        "wires": [
            [
                "32c0578b.0a5068",
                "43bb6d3.1445e94"
            ]
        ]
    },
    {
        "id": "32c0578b.0a5068",
        "type": "debug",
        "z": "00d755fbe9816e1e",
        "name": "raw",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 330,
        "y": 1580,
        "wires": []
    },
    {
        "id": "43bb6d3.1445e94",
        "type": "function",
        "z": "00d755fbe9816e1e",
        "name": "timestamp",
        "func": "var date = new Date(msg.payload.ts);\nmsg.payload = date.toLocaleString('de-DE');\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 1620,
        "wires": [
            [
                "8bac4d7b.23c26"
            ]
        ]
    },
    {
        "id": "8bac4d7b.23c26",
        "type": "debug",
        "z": "00d755fbe9816e1e",
        "name": "ts",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 530,
        "y": 1580,
        "wires": []
    },
    {
        "id": "84747c9e.dd3a1",
        "type": "mqtt in",
        "z": "00d755fbe9816e1e",
        "name": "",
        "topic": "f/i/state/mpo",
        "qos": "0",
        "datatype": "json",
        "broker": "fa600c20.8a9c9",
        "inputs": 0,
        "x": 130,
        "y": 1720,
        "wires": [
            [
                "9b7844ca.cabb68",
                "78338ccf.0742e4"
            ]
        ]
    },
    {
        "id": "9b7844ca.cabb68",
        "type": "debug",
        "z": "00d755fbe9816e1e",
        "name": "raw",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 330,
        "y": 1680,
        "wires": []
    },
    {
        "id": "78338ccf.0742e4",
        "type": "function",
        "z": "00d755fbe9816e1e",
        "name": "timestamp",
        "func": "var date = new Date(msg.payload.ts);\nmsg.payload = date.toLocaleString('de-DE');\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 1720,
        "wires": [
            [
                "78de4537.b31acc"
            ]
        ]
    },
    {
        "id": "78de4537.b31acc",
        "type": "debug",
        "z": "00d755fbe9816e1e",
        "name": "ts",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 530,
        "y": 1680,
        "wires": []
    },
    {
        "id": "c22aaa5d.326338",
        "type": "mqtt in",
        "z": "00d755fbe9816e1e",
        "name": "",
        "topic": "f/i/state/sld",
        "qos": "0",
        "datatype": "json",
        "broker": "fa600c20.8a9c9",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 120,
        "y": 1820,
        "wires": [
            [
                "295f95ce.715a8a",
                "67132b19.65af44"
            ]
        ]
    },
    {
        "id": "295f95ce.715a8a",
        "type": "debug",
        "z": "00d755fbe9816e1e",
        "name": "raw",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 330,
        "y": 1780,
        "wires": []
    },
    {
        "id": "67132b19.65af44",
        "type": "function",
        "z": "00d755fbe9816e1e",
        "name": "timestamp",
        "func": "var date = new Date(msg.payload.ts);\nmsg.payload = date.toLocaleString('de-DE');\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 350,
        "y": 1820,
        "wires": [
            [
                "44ad7a16.7f1a74"
            ]
        ]
    },
    {
        "id": "44ad7a16.7f1a74",
        "type": "debug",
        "z": "00d755fbe9816e1e",
        "name": "ts",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 530,
        "y": 1780,
        "wires": []
    },
    {
        "id": "ff7b51be.0b81",
        "type": "mqtt in",
        "z": "00d755fbe9816e1e",
        "name": "",
        "topic": "f/i/state/dsi",
        "qos": "0",
        "datatype": "json",
        "broker": "fa600c20.8a9c9",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 120,
        "y": 1920,
        "wires": [
            [
                "72520717.5b33d8",
                "99416429.37a6a8"
            ]
        ]
    },
    {
        "id": "72520717.5b33d8",
        "type": "debug",
        "z": "00d755fbe9816e1e",
        "name": "raw",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 330,
        "y": 1880,
        "wires": []
    },
    {
        "id": "99416429.37a6a8",
        "type": "function",
        "z": "00d755fbe9816e1e",
        "name": "timestamp",
        "func": "var date = new Date(msg.payload.ts);\nmsg.payload = date.toLocaleString('de-DE');\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 350,
        "y": 1920,
        "wires": [
            [
                "a69d289b.75dee8"
            ]
        ]
    },
    {
        "id": "a69d289b.75dee8",
        "type": "debug",
        "z": "00d755fbe9816e1e",
        "name": "ts",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 530,
        "y": 1880,
        "wires": []
    },
    {
        "id": "7c642d8e.27cd14",
        "type": "mqtt in",
        "z": "00d755fbe9816e1e",
        "name": "",
        "topic": "f/i/state/dso",
        "qos": "0",
        "datatype": "json",
        "broker": "fa600c20.8a9c9",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 130,
        "y": 2020,
        "wires": [
            [
                "bb2a86d1.8da5a8",
                "353e9de5.ab6bc2"
            ]
        ]
    },
    {
        "id": "bb2a86d1.8da5a8",
        "type": "debug",
        "z": "00d755fbe9816e1e",
        "name": "raw",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 330,
        "y": 1980,
        "wires": []
    },
    {
        "id": "353e9de5.ab6bc2",
        "type": "function",
        "z": "00d755fbe9816e1e",
        "name": "timestamp",
        "func": "var date = new Date(msg.payload.ts);\nmsg.payload = date.toLocaleString('de-DE');\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 2020,
        "wires": [
            [
                "87f03e14.40d4"
            ]
        ]
    },
    {
        "id": "87f03e14.40d4",
        "type": "debug",
        "z": "00d755fbe9816e1e",
        "name": "ts",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 530,
        "y": 1980,
        "wires": []
    },
    {
        "id": "c1196ef.87bc99",
        "type": "mqtt in",
        "z": "00d755fbe9816e1e",
        "name": "",
        "topic": "f/i/stock",
        "qos": "0",
        "datatype": "json",
        "broker": "fa600c20.8a9c9",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 110,
        "y": 2120,
        "wires": [
            [
                "d97ba290.8b9e5",
                "c1c0fe29.9380a"
            ]
        ]
    },
    {
        "id": "d97ba290.8b9e5",
        "type": "debug",
        "z": "00d755fbe9816e1e",
        "name": "raw",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 330,
        "y": 2080,
        "wires": []
    },
    {
        "id": "c1c0fe29.9380a",
        "type": "function",
        "z": "00d755fbe9816e1e",
        "name": "timestamp",
        "func": "var date = new Date(msg.payload.ts);\nmsg.payload = date.toLocaleString('de-DE');\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 2120,
        "wires": [
            [
                "18a59601.24e80a"
            ]
        ]
    },
    {
        "id": "18a59601.24e80a",
        "type": "debug",
        "z": "00d755fbe9816e1e",
        "name": "ts",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 530,
        "y": 2080,
        "wires": []
    },
    {
        "id": "d8139d1e.c41b7",
        "type": "mqtt in",
        "z": "00d755fbe9816e1e",
        "name": "",
        "topic": "f/i/order",
        "qos": "0",
        "datatype": "json",
        "broker": "fa600c20.8a9c9",
        "inputs": 0,
        "x": 110,
        "y": 2220,
        "wires": [
            [
                "ab4d4a79.a209c8",
                "e8840337.cd57a"
            ]
        ]
    },
    {
        "id": "ab4d4a79.a209c8",
        "type": "debug",
        "z": "00d755fbe9816e1e",
        "name": "raw",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 330,
        "y": 2180,
        "wires": []
    },
    {
        "id": "e8840337.cd57a",
        "type": "function",
        "z": "00d755fbe9816e1e",
        "name": "timestamp",
        "func": "var date = new Date(msg.payload.ts);\nmsg.payload = date.toLocaleString('de-DE');\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 2220,
        "wires": [
            [
                "1b538ab2.1a70b5"
            ]
        ]
    },
    {
        "id": "1b538ab2.1a70b5",
        "type": "debug",
        "z": "00d755fbe9816e1e",
        "name": "ts",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 530,
        "y": 2180,
        "wires": []
    },
    {
        "id": "e2c79422.3e00f8",
        "type": "mqtt in",
        "z": "00d755fbe9816e1e",
        "name": "",
        "topic": "f/i/nfc/ds",
        "qos": "0",
        "datatype": "json",
        "broker": "fa600c20.8a9c9",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 120,
        "y": 2320,
        "wires": [
            [
                "8dad8ee8.e62b8",
                "ca14c34b.33c76"
            ]
        ]
    },
    {
        "id": "8dad8ee8.e62b8",
        "type": "debug",
        "z": "00d755fbe9816e1e",
        "name": "raw",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 330,
        "y": 2280,
        "wires": []
    },
    {
        "id": "ca14c34b.33c76",
        "type": "function",
        "z": "00d755fbe9816e1e",
        "name": "timestamp",
        "func": "var date = new Date(msg.payload.ts);\nmsg.payload = date.toLocaleString('de-DE');\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 2320,
        "wires": [
            [
                "8d506796.44c348"
            ]
        ]
    },
    {
        "id": "8d506796.44c348",
        "type": "debug",
        "z": "00d755fbe9816e1e",
        "name": "ts",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 530,
        "y": 2280,
        "wires": []
    },
    {
        "id": "e94f62a.db538a",
        "type": "mqtt in",
        "z": "00d755fbe9816e1e",
        "name": "",
        "topic": "fl/ssc/joy",
        "qos": "0",
        "datatype": "json",
        "broker": "fa600c20.8a9c9",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 1040,
        "y": 220,
        "wires": [
            [
                "d35a0b3f.5cbb28",
                "48d8dd2a.e3c4f4"
            ]
        ]
    },
    {
        "id": "d35a0b3f.5cbb28",
        "type": "debug",
        "z": "00d755fbe9816e1e",
        "name": "raw",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 1250,
        "y": 180,
        "wires": []
    },
    {
        "id": "48d8dd2a.e3c4f4",
        "type": "function",
        "z": "00d755fbe9816e1e",
        "name": "timestamp",
        "func": "var date = new Date(msg.payload.ts);\nmsg.payload = date.toLocaleString('de-DE');\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1270,
        "y": 220,
        "wires": [
            [
                "5fb43589.0da85c"
            ]
        ]
    },
    {
        "id": "5fb43589.0da85c",
        "type": "debug",
        "z": "00d755fbe9816e1e",
        "name": "ts",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 1450,
        "y": 180,
        "wires": []
    },
    {
        "id": "39a710ad.a54c7",
        "type": "mqtt in",
        "z": "00d755fbe9816e1e",
        "name": "",
        "topic": "fl/vgr/do",
        "qos": "0",
        "datatype": "json",
        "broker": "fa600c20.8a9c9",
        "inputs": 0,
        "x": 1030,
        "y": 320,
        "wires": [
            [
                "df1400e5.9c90c",
                "51600170.55649"
            ]
        ]
    },
    {
        "id": "df1400e5.9c90c",
        "type": "debug",
        "z": "00d755fbe9816e1e",
        "name": "raw",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 1250,
        "y": 280,
        "wires": []
    },
    {
        "id": "51600170.55649",
        "type": "function",
        "z": "00d755fbe9816e1e",
        "name": "timestamp",
        "func": "var date = new Date(msg.payload.ts);\nmsg.payload = date.toLocaleString('de-DE');\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1270,
        "y": 320,
        "wires": [
            [
                "49991f90.91193"
            ]
        ]
    },
    {
        "id": "49991f90.91193",
        "type": "debug",
        "z": "00d755fbe9816e1e",
        "name": "ts",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 1450,
        "y": 280,
        "wires": []
    },
    {
        "id": "c4a629b8.f9d038",
        "type": "mqtt in",
        "z": "00d755fbe9816e1e",
        "name": "",
        "topic": "fl/hbw/ack",
        "qos": "0",
        "datatype": "json",
        "broker": "fa600c20.8a9c9",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 1040,
        "y": 420,
        "wires": [
            [
                "6a46b1cf.893bf",
                "9bbd246b.2019b8"
            ]
        ]
    },
    {
        "id": "6a46b1cf.893bf",
        "type": "debug",
        "z": "00d755fbe9816e1e",
        "name": "raw",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 1250,
        "y": 380,
        "wires": []
    },
    {
        "id": "9bbd246b.2019b8",
        "type": "function",
        "z": "00d755fbe9816e1e",
        "name": "timestamp",
        "func": "var date = new Date(msg.payload.ts);\nmsg.payload = date.toLocaleString('de-DE');\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1270,
        "y": 420,
        "wires": [
            [
                "f24fbc07.76533"
            ]
        ]
    },
    {
        "id": "f24fbc07.76533",
        "type": "debug",
        "z": "00d755fbe9816e1e",
        "name": "ts",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1450,
        "y": 380,
        "wires": []
    },
    {
        "id": "d7b883bb.a2aac",
        "type": "mqtt in",
        "z": "00d755fbe9816e1e",
        "name": "",
        "topic": "fl/mpo/ack",
        "qos": "0",
        "datatype": "json",
        "broker": "fa600c20.8a9c9",
        "inputs": 0,
        "x": 1040,
        "y": 520,
        "wires": [
            [
                "3f234c22.648394",
                "b42806b9.b352b8"
            ]
        ]
    },
    {
        "id": "3f234c22.648394",
        "type": "debug",
        "z": "00d755fbe9816e1e",
        "name": "raw",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 1250,
        "y": 480,
        "wires": []
    },
    {
        "id": "b42806b9.b352b8",
        "type": "function",
        "z": "00d755fbe9816e1e",
        "name": "timestamp",
        "func": "var date = new Date(msg.payload.ts);\nmsg.payload = date.toLocaleString('de-DE');\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1270,
        "y": 520,
        "wires": [
            [
                "7bc02de2.1a8574"
            ]
        ]
    },
    {
        "id": "7bc02de2.1a8574",
        "type": "debug",
        "z": "00d755fbe9816e1e",
        "name": "ts",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 1450,
        "y": 480,
        "wires": []
    },
    {
        "id": "d4357a37.e63788",
        "type": "mqtt in",
        "z": "00d755fbe9816e1e",
        "name": "",
        "topic": "fl/sld/ack",
        "qos": "0",
        "datatype": "json",
        "broker": "fa600c20.8a9c9",
        "inputs": 0,
        "x": 1040,
        "y": 620,
        "wires": [
            [
                "1e507d64.2caa73",
                "e9b77e47.ba80c"
            ]
        ]
    },
    {
        "id": "1e507d64.2caa73",
        "type": "debug",
        "z": "00d755fbe9816e1e",
        "name": "raw",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 1250,
        "y": 580,
        "wires": []
    },
    {
        "id": "e9b77e47.ba80c",
        "type": "function",
        "z": "00d755fbe9816e1e",
        "name": "timestamp",
        "func": "var date = new Date(msg.payload.ts);\nmsg.payload = date.toLocaleString('de-DE');\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1270,
        "y": 620,
        "wires": [
            [
                "6ca2cd37.1ec8e4"
            ]
        ]
    },
    {
        "id": "6ca2cd37.1ec8e4",
        "type": "debug",
        "z": "00d755fbe9816e1e",
        "name": "ts",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 1450,
        "y": 580,
        "wires": []
    },
    {
        "id": "80edc42953dc13c8",
        "type": "comment",
        "z": "00d755fbe9816e1e",
        "name": "Tab: Sensors",
        "info": "",
        "x": 130,
        "y": 100,
        "wires": []
    },
    {
        "id": "52eab68.4b7cf48",
        "type": "comment",
        "z": "00d755fbe9816e1e",
        "name": "https://github.com/fischertechnik/txt_training_factory/blob/master/TxtSmartFactoryLib/doc/MqttInterface.md",
        "info": "",
        "x": 380,
        "y": 2460,
        "wires": []
    },
    {
        "id": "ccc7947faa65d123",
        "type": "ui_gauge",
        "z": "00d755fbe9816e1e",
        "name": "gauge",
        "group": "25e0d20d.12eefe",
        "order": 2,
        "width": 6,
        "height": 7,
        "gtype": "gage",
        "title": "",
        "label": "degree",
        "format": "{{value}}",
        "min": "-30",
        "max": "60",
        "colors": [
            "#0080ff",
            "#80ff80",
            "#ff8080"
        ],
        "seg1": "0",
        "seg2": "30",
        "diff": false,
        "className": "",
        "x": 710,
        "y": 280,
        "wires": []
    },
    {
        "id": "38b04f2ccf5e7ab4",
        "type": "ui_gauge",
        "z": "00d755fbe9816e1e",
        "name": "gauge",
        "group": "c0ed767.7374988",
        "order": 2,
        "width": 6,
        "height": 7,
        "gtype": "gage",
        "title": "",
        "label": "% r.H.",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#ffffff",
            "#8ac5ff",
            "#0059b3"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 710,
        "y": 400,
        "wires": []
    },
    {
        "id": "cbf9fa6af827999d",
        "type": "ui_gauge",
        "z": "00d755fbe9816e1e",
        "name": "gauge",
        "group": "b214200a.fb54c",
        "order": 2,
        "width": 6,
        "height": 7,
        "gtype": "gage",
        "title": "",
        "label": "%",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#1a1a00",
            "#e6e600",
            "#ffffbd"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 710,
        "y": 940,
        "wires": []
    },
    {
        "id": "0a79428e6981ed6b",
        "type": "ui_gauge",
        "z": "00d755fbe9816e1e",
        "name": "gauge",
        "group": "e928c4b3.04eb18",
        "order": 2,
        "width": 6,
        "height": 7,
        "gtype": "gage",
        "title": "",
        "label": "hPa",
        "format": "{{value}}",
        "min": "900",
        "max": "1100",
        "colors": [
            "#80ff80",
            "#80ff80",
            "#80ff80"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 710,
        "y": 520,
        "wires": []
    },
    {
        "id": "2dabb1c07c8791e1",
        "type": "ui_button",
        "z": "1f775d9619536468",
        "name": "",
        "group": "1abd71b9d16dad4d",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "button",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "Hello World",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 310,
        "y": 380,
        "wires": [
            [
                "fa2410d2c7f0b798",
                "78f1c66fa80efc8e",
                "e4e1e80539274ffc",
                "da1fc94647286e7c"
            ]
        ]
    },
    {
        "id": "fa2410d2c7f0b798",
        "type": "debug",
        "z": "1f775d9619536468",
        "name": "debug 1",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 560,
        "y": 460,
        "wires": []
    },
    {
        "id": "e62146b0fb66a5f7",
        "type": "ui_slider",
        "z": "1f775d9619536468",
        "name": "",
        "label": "slider",
        "tooltip": "",
        "group": "d36d0426f409f58d",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "outs": "all",
        "topic": "topic",
        "topicType": "msg",
        "min": 0,
        "max": "200",
        "step": 1,
        "className": "",
        "x": 310,
        "y": 580,
        "wires": [
            [
                "d44a52ac0cc8cb3e",
                "fdcce169ae395681",
                "d2bf5c07b4e6f51c"
            ]
        ]
    },
    {
        "id": "d44a52ac0cc8cb3e",
        "type": "ui_gauge",
        "z": "1f775d9619536468",
        "name": "",
        "group": "d36d0426f409f58d",
        "order": 4,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "gauge",
        "label": "units",
        "format": "{{value}}",
        "min": 0,
        "max": "200",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "75",
        "seg2": "250",
        "diff": false,
        "className": "",
        "x": 550,
        "y": 580,
        "wires": []
    },
    {
        "id": "fdcce169ae395681",
        "type": "ui_chart",
        "z": "1f775d9619536468",
        "name": "",
        "group": "d36d0426f409f58d",
        "order": 2,
        "width": 0,
        "height": 0,
        "label": "chart",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 550,
        "y": 620,
        "wires": [
            []
        ]
    },
    {
        "id": "d2bf5c07b4e6f51c",
        "type": "ui_chart",
        "z": "1f775d9619536468",
        "name": "",
        "group": "d36d0426f409f58d",
        "order": 3,
        "width": 0,
        "height": 0,
        "label": "chart",
        "chartType": "bar",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "200",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 550,
        "y": 660,
        "wires": [
            []
        ]
    },
    {
        "id": "78f1c66fa80efc8e",
        "type": "ui_toast",
        "z": "1f775d9619536468",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 590,
        "y": 380,
        "wires": []
    },
    {
        "id": "e4e1e80539274ffc",
        "type": "ui_audio",
        "z": "1f775d9619536468",
        "name": "",
        "group": "1abd71b9d16dad4d",
        "voice": "",
        "always": "",
        "x": 560,
        "y": 500,
        "wires": []
    },
    {
        "id": "da1fc94647286e7c",
        "type": "ui_text",
        "z": "1f775d9619536468",
        "group": "d36d0426f409f58d",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "text hihi",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 560,
        "y": 420,
        "wires": []
    },
    {
        "id": "c38e14f58278b6eb",
        "type": "comment",
        "z": "1f775d9619536468",
        "name": "Tab: examples",
        "info": "",
        "x": 130,
        "y": 60,
        "wires": []
    },
    {
        "id": "bbcbe396cbc86c2f",
        "type": "comment",
        "z": "1f775d9619536468",
        "name": "Subscribe to a Topic",
        "info": "",
        "x": 350,
        "y": 60,
        "wires": []
    },
    {
        "id": "b3e31ad2e0835f97",
        "type": "mqtt in",
        "z": "1f775d9619536468",
        "name": "subscribe",
        "topic": "topic/hello",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "fa600c20.8a9c9",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 320,
        "y": 120,
        "wires": [
            [
                "46c25d223eb12c2e"
            ]
        ]
    },
    {
        "id": "46c25d223eb12c2e",
        "type": "debug",
        "z": "1f775d9619536468",
        "name": "debug 2",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 560,
        "y": 120,
        "wires": []
    },
    {
        "id": "1e53e7fd6677392b",
        "type": "comment",
        "z": "1f775d9619536468",
        "name": "Publish to a Topic",
        "info": "",
        "x": 340,
        "y": 200,
        "wires": []
    },
    {
        "id": "2df470298359ee7a",
        "type": "inject",
        "z": "1f775d9619536468",
        "name": "publish",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "topic/hello",
        "payload": "hello world(node-Red)",
        "payloadType": "str",
        "x": 310,
        "y": 260,
        "wires": [
            [
                "fd4c6fdf1f577ca0"
            ]
        ]
    },
    {
        "id": "fd4c6fdf1f577ca0",
        "type": "mqtt out",
        "z": "1f775d9619536468",
        "name": "publish",
        "topic": "topic/hello",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "fa600c20.8a9c9",
        "x": 560,
        "y": 260,
        "wires": []
    },
    {
        "id": "ee274495ca627a32",
        "type": "comment",
        "z": "1f775d9619536468",
        "name": "Button",
        "info": "",
        "x": 310,
        "y": 340,
        "wires": []
    },
    {
        "id": "8503955255dbbbb5",
        "type": "comment",
        "z": "1f775d9619536468",
        "name": "Slider",
        "info": "",
        "x": 310,
        "y": 540,
        "wires": []
    },
    {
        "id": "cb9d68bc.57aef8",
        "type": "inject",
        "z": "1f775d9619536468",
        "name": "",
        "props": [
            {
                "p": "payload.success",
                "v": "true",
                "vt": "str"
            },
            {
                "p": "payload.response",
                "v": "{\"power\":146.31,\"Ws\":145.65,\"relay\":true,\"temperature\":20.87}",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 310,
        "y": 920,
        "wires": [
            [
                "f1e984d2.a53d48",
                "29001f76.0234b"
            ]
        ]
    },
    {
        "id": "f1e984d2.a53d48",
        "type": "debug",
        "z": "1f775d9619536468",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 510,
        "y": 860,
        "wires": []
    },
    {
        "id": "29001f76.0234b",
        "type": "change",
        "z": "1f775d9619536468",
        "name": "Response filtern",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.response",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 520,
        "y": 960,
        "wires": [
            [
                "96d1717c.3e881",
                "33209af0.231c66"
            ]
        ]
    },
    {
        "id": "96d1717c.3e881",
        "type": "debug",
        "z": "1f775d9619536468",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 710,
        "y": 1020,
        "wires": []
    },
    {
        "id": "33209af0.231c66",
        "type": "json",
        "z": "1f775d9619536468",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 690,
        "y": 920,
        "wires": [
            [
                "4734cd4d.56ac14",
                "3ed4cef2.4e53e2",
                "d94ca65.bfca458"
            ]
        ]
    },
    {
        "id": "4734cd4d.56ac14",
        "type": "debug",
        "z": "1f775d9619536468",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 920,
        "y": 1020,
        "wires": []
    },
    {
        "id": "3ed4cef2.4e53e2",
        "type": "change",
        "z": "1f775d9619536468",
        "name": "Temperature",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.temperature",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 930,
        "y": 880,
        "wires": [
            [
                "8957d8ed.3d7658"
            ]
        ]
    },
    {
        "id": "d94ca65.bfca458",
        "type": "change",
        "z": "1f775d9619536468",
        "name": "Power",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.power",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 910,
        "y": 940,
        "wires": [
            [
                "c5b782e7.6c759"
            ]
        ]
    },
    {
        "id": "8957d8ed.3d7658",
        "type": "debug",
        "z": "1f775d9619536468",
        "name": "Temperature",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1150,
        "y": 880,
        "wires": []
    },
    {
        "id": "c5b782e7.6c759",
        "type": "debug",
        "z": "1f775d9619536468",
        "name": "Power",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1130,
        "y": 940,
        "wires": []
    },
    {
        "id": "752f7aaa16fe37cc",
        "type": "comment",
        "z": "1f775d9619536468",
        "name": "Test filter",
        "info": "",
        "x": 320,
        "y": 780,
        "wires": []
    },
    {
        "id": "6e9be2f78774338f",
        "type": "ui_template",
        "z": "f32c2ab81567e761",
        "group": "c2045506.d32c58",
        "name": "Dashboard Style",
        "order": 0,
        "width": 0,
        "height": 0,
        "format": "<style> // Cascading Style Sheets (CSS)\n    /* Style der Gruppen */\n    ui-card-panel {\n        box-shadow: rgba(0,0,0,0.35) 0px 5px 15px;  // Schattierung\n        border-radius: 5px;                         // Ecken abrunden\n    }\n\n    /* Style der Elemente in den Gruppen*/\n    ui-card-panel * {\n        border-radius: 2.5px;\n\n    /* Style des Gruppentitel */\n    .nr-dashboard-cardtitle {\n        font-weight: bold !important; // Title fett\n    }\n</style>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "global",
        "className": "",
        "x": 440,
        "y": 160,
        "wires": [
            []
        ]
    }
]